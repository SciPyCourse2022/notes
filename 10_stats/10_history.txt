
mspacek@Godel:~/SciPyCourse2022/notes/09_pandas$ ls
09_history.txt  09_pandas.pdf                    exp1.csv  exp.xlsx    spikes.png       t.npy
09_pandas.md    DataFrame_exercise_solutions.py  exp2.csv  Galton.csv  spike_times.npy  V.npy
mspacek@Godel:~/SciPyCourse2022/notes/09_pandas$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import pandas as pd

In [2]: gdf = pd.read_csv('Galton.csv')

In [3]: gdf
Out[3]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
893   136A    68.5    65.0      M    68.5     8
894   136A    68.5    65.0      M    67.7     8
895   136A    68.5    65.0      F    64.0     8
896   136A    68.5    65.0      F    63.5     8
897   136A    68.5    65.0      F    63.0     8

[898 rows x 6 columns]

In [4]: len(gdf)
Out[4]: 898

In [5]: gdf.groupby('Kids').describe()
Out[5]:
     Father                                         ...    Height
      count       mean       std   min   25%   50%  ...       std   min     25%    50%     75%   max
Kids                                                ...
1      32.0  69.425000  2.797695  64.0  68.0  69.0  ...  3.388047  60.0  64.375  66.60  69.500  75.0
2      40.0  69.105000  3.198954  62.5  67.5  70.0  ...  3.427003  57.0  64.875  67.00  69.000  73.0
3      66.0  69.818182  2.778539  62.0  69.0  70.0  ...  3.534710  60.0  64.500  68.00  70.500  73.0
4     116.0  69.375862  2.783386  65.0  68.0  69.5  ...  3.384787  60.0  65.000  67.00  70.000  73.5
5     140.0  69.596429  2.153545  65.5  68.0  70.0  ...  3.744045  60.0  64.500  67.00  70.500  78.0
6     114.0  69.578947  2.860765  65.0  67.0  69.0  ...  3.586729  60.5  64.500  67.00  70.000  76.5
7     112.0  68.893750  2.281073  64.0  68.0  69.5  ...  3.866147  56.0  63.925  65.60  69.700  79.0
8     128.0  69.325000  2.088589  66.0  68.0  69.0  ...  3.568913  57.5  63.500  66.50  69.275  74.0
9      63.0  69.000000  2.584070  65.0  66.0  69.0  ...  3.460680  59.0  64.000  65.50  69.100  73.0
10     40.0  68.250000  0.438529  68.0  68.0  68.0  ...  2.837948  61.0  64.000  65.00  66.250  75.0
11     32.0  68.671875  1.059590  67.5  67.5  68.5  ...  3.185082  62.0  63.575  66.85  69.000  73.0
15     15.0  66.000000  0.000000  66.0  66.0  66.0  ...  3.324627  57.0  61.500  65.00  65.850  68.0

[12 rows x 24 columns]

In [6]: gdf.groupby('Family')
Out[6]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6a8153e80>

In [7]: fam = gdf.groupby('Family')

In [8]: fam
Out[8]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6ac153f70>

In [9]: len(fam)
Out[9]: 197

In [10]: gdf['Family']
Out[10]:
0         1
1         1
2         1
3         1
4         2
       ...
893    136A
894    136A
895    136A
896    136A
897    136A
Name: Family, Length: 898, dtype: object

In [11]: gdf['Family'].nunique()
Out[11]: 197

In [12]: fam.count()
Out[12]:
        Father  Mother  Gender  Height  Kids
Family
1            4       4       4       4     4
10           1       1       1       1     1
100          3       3       3       3     3
101          6       6       6       6     6
102          6       6       6       6     6
...        ...     ...     ...     ...   ...
95           3       3       3       3     3
96           5       5       5       5     5
97          10      10      10      10    10
98           1       1       1       1     1
99           8       8       8       8     8

[197 rows x 5 columns]

In [13]: fam.count()['Kids']
Out[13]:
Family
1       4
10      1
100     3
101     6
102     6
       ..
95      3
96      5
97     10
98      1
99      8
Name: Kids, Length: 197, dtype: int64

In [14]: fam.count()['Kids'].sum()
Out[14]: 898

In [15]: len(gdf)
Out[15]: 898

In [16]: fam.max()
Out[16]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [17]: gdf['Family']
Out[17]:
0         1
1         1
2         1
3         1
4         2
       ...
893    136A
894    136A
895    136A
896    136A
897    136A
Name: Family, Length: 898, dtype: object

In [18]: gdf['Family'][-1]
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
File /usr/local/lib/python3.8/dist-packages/pandas/core/indexes/range.py:385, in RangeIndex.get_loc(self, key, method, tolerance)
    384 try:
--> 385     return self._range.index(new_key)
    386 except ValueError as err:

ValueError: -1 is not in range

The above exception was the direct cause of the following exception:

KeyError                                  Traceback (most recent call last)
Input In [18], in <cell line: 1>()
----> 1 gdf['Family'][-1]

File /usr/local/lib/python3.8/dist-packages/pandas/core/series.py:958, in Series.__getitem__(self, key)
    955     return self._values[key]
    957 elif key_is_scalar:
--> 958     return self._get_value(key)
    960 if is_hashable(key):
    961     # Otherwise index.get_value will raise InvalidIndexError
    962     try:
    963         # For labels that don't resolve as scalars like tuples and frozensets

File /usr/local/lib/python3.8/dist-packages/pandas/core/series.py:1069, in Series._get_value(self, label, takeable)
   1066     return self._values[label]
   1068 # Similar to Index.get_value, but we do not fall back to positional
-> 1069 loc = self.index.get_loc(label)
   1070 return self.index._get_values_for_loc(self, loc, label)

File /usr/local/lib/python3.8/dist-packages/pandas/core/indexes/range.py:387, in RangeIndex.get_loc(self, key, method, tolerance)
    385         return self._range.index(new_key)
    386     except ValueError as err:
--> 387         raise KeyError(key) from err
    388 self._check_indexing_error(key)
    389 raise KeyError(key)

KeyError: -1
> /usr/local/lib/python3.8/dist-packages/pandas/core/indexes/range.py(387)get_loc()
    385                     return self._range.index(new_key)
    386                 except ValueError as err:
--> 387                     raise KeyError(key) from err
    388             self._check_indexing_error(key)
    389             raise KeyError(key)

ipdb> c

In [19]: gdf['Family'].iloc[-1]
Out[19]: '136A'

In [20]: gdf['Family'].iloc[0]
Out[20]: '1'

In [21]: gdf['Family'].values
Out[21]:
array(['1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '4', '4', '4',
       '4', '4', '5', '5', '5', '5', '5', '5', '6', '7', '7', '7', '7',
       '7', '7', '8', '8', '8', '9', '10', '11', '11', '11', '11', '11',
       '11', '11', '11', '12', '14', '14', '15', '15', '15', '16', '16',
       '16', '16', '16', '16', '16', '16', '16', '17', '17', '17', '17',
       '17', '17', '18', '18', '18', '19', '20', '20', '20', '20', '20',
       '20', '20', '20', '21', '21', '21', '22', '22', '22', '23', '23',
       '23', '23', '23', '23', '23', '24', '25', '25', '26', '26', '26',
       '26', '26', '27', '27', '27', '28', '28', '28', '28', '28', '28',
       '29', '29', '29', '30', '31', '31', '31', '31', '31', '31', '32',
       '32', '32', '32', '32', '33', '33', '33', '33', '33', '34', '35',
       '35', '35', '35', '35', '36', '36', '36', '36', '37', '37', '37',
       '37', '38', '38', '38', '38', '38', '38', '39', '39', '40', '40',
       '40', '40', '40', '41', '42', '42', '42', '42', '42', '42', '43',
       '43', '44', '44', '45', '45', '45', '46', '46', '46', '46', '46',
       '46', '46', '46', '47', '47', '47', '47', '48', '48', '48', '49',
       '49', '49', '49', '49', '49', '49', '51', '51', '52', '52', '52',
       '52', '52', '53', '53', '53', '53', '53', '53', '53', '53', '53',
       '54', '54', '54', '54', '55', '55', '55', '55', '55', '56', '56',
       '56', '56', '56', '57', '57', '57', '57', '57', '58', '58', '58',
       '58', '58', '58', '58', '59', '60', '60', '61', '61', '61', '61',
       '62', '62', '62', '62', '62', '62', '63', '64', '64', '64', '64',
       '64', '65', '66', '66', '66', '66', '66', '66', '66', '66', '66',
       '66', '66', '67', '67', '67', '67', '68', '68', '68', '68', '68',
       '69', '69', '69', '69', '69', '69', '69', '69', '70', '70', '70',
       '70', '70', '71', '71', '71', '71', '71', '71', '72', '72', '72',
       '72', '72', '72', '72', '73', '73', '73', '74', '74', '75', '75',
       '75', '75', '75', '75', '75', '76', '76', '76', '76', '76', '76',
       '76', '77', '77', '77', '77', '78', '78', '78', '78', '78', '79',
       '79', '79', '79', '79', '79', '79', '79', '80', '81', '81', '81',
       '81', '82', '82', '82', '82', '82', '82', '82', '82', '82', '83',
       '83', '83', '83', '83', '83', '83', '83', '85', '85', '85', '85',
       '85', '86', '86', '86', '86', '87', '87', '87', '87', '88', '88',
       '88', '88', '89', '89', '89', '89', '89', '89', '89', '89', '90',
       '90', '90', '90', '90', '90', '90', '91', '91', '91', '92', '92',
       '93', '93', '93', '93', '94', '94', '95', '95', '95', '96', '96',
       '96', '96', '96', '97', '97', '97', '97', '97', '97', '97', '97',
       '97', '97', '98', '99', '99', '99', '99', '99', '99', '99', '99',
       '100', '100', '100', '101', '101', '101', '101', '101', '101',
       '102', '102', '102', '102', '102', '102', '103', '103', '103',
       '103', '103', '104', '104', '104', '104', '105', '105', '105',
       '105', '105', '105', '106', '106', '106', '106', '106', '106',
       '106', '107', '107', '107', '107', '107', '107', '107', '107',
       '107', '108', '108', '108', '108', '108', '108', '108', '109',
       '109', '109', '109', '109', '109', '109', '110', '110', '110',
       '110', '112', '112', '112', '113', '114', '114', '114', '114',
       '114', '114', '115', '115', '115', '115', '115', '115', '115',
       '116', '116', '116', '117', '118', '118', '118', '119', '119',
       '119', '119', '119', '121', '121', '121', '121', '121', '121',
       '121', '121', '122', '122', '122', '122', '123', '123', '123',
       '123', '123', '124', '124', '124', '124', '124', '124', '124',
       '124', '124', '125', '125', '125', '126', '126', '126', '126',
       '127', '128', '128', '129', '129', '129', '130', '130', '130',
       '130', '130', '130', '130', '130', '130', '130', '131', '131',
       '132', '132', '133', '133', '133', '133', '133', '133', '133',
       '134', '134', '134', '134', '135', '135', '135', '135', '135',
       '135', '135', '135', '136', '136', '136', '136', '136', '136',
       '136', '136', '136', '136', '137', '137', '137', '137', '138',
       '138', '138', '138', '138', '139', '140', '140', '140', '140',
       '140', '140', '140', '140', '140', '140', '141', '141', '141',
       '141', '141', '141', '141', '141', '142', '142', '142', '142',
       '143', '144', '144', '144', '144', '145', '145', '145', '145',
       '145', '145', '145', '145', '146', '146', '146', '146', '146',
       '146', '147', '148', '149', '149', '149', '149', '149', '150',
       '151', '151', '152', '153', '153', '153', '153', '153', '154',
       '155', '155', '155', '155', '155', '155', '155', '156', '156',
       '156', '156', '157', '158', '158', '158', '158', '158', '158',
       '158', '158', '158', '158', '159', '159', '159', '159', '159',
       '160', '162', '162', '162', '162', '162', '162', '163', '163',
       '163', '163', '163', '164', '164', '164', '164', '165', '165',
       '165', '166', '166', '166', '166', '166', '166', '166', '166',
       '166', '166', '166', '167', '167', '167', '167', '168', '168',
       '168', '168', '168', '168', '168', '168', '169', '169', '169',
       '170', '170', '170', '170', '170', '171', '172', '172', '172',
       '172', '172', '172', '172', '172', '173', '173', '173', '173',
       '173', '173', '173', '173', '173', '174', '174', '174', '174',
       '174', '175', '175', '175', '175', '175', '175', '176', '176',
       '176', '176', '176', '176', '176', '176', '177', '177', '177',
       '177', '177', '178', '179', '179', '180', '180', '180', '180',
       '180', '180', '181', '181', '181', '181', '181', '181', '181',
       '182', '183', '183', '183', '183', '184', '185', '185', '185',
       '185', '185', '185', '185', '185', '185', '185', '185', '185',
       '185', '185', '185', '186', '186', '186', '186', '187', '188',
       '188', '188', '188', '190', '190', '190', '190', '190', '190',
       '190', '190', '190', '191', '191', '192', '192', '192', '192',
       '192', '192', '193', '193', '193', '193', '193', '193', '194',
       '194', '195', '195', '195', '196', '196', '196', '196', '197',
       '197', '197', '197', '197', '198', '198', '198', '198', '198',
       '198', '198', '199', '199', '199', '199', '199', '199', '199',
       '200', '201', '201', '203', '203', '203', '204', '204', '136A',
       '136A', '136A', '136A', '136A', '136A', '136A', '136A'],
      dtype=object)

In [22]: fam.max()
Out[22]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [23]: fam.min()
Out[23]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      F    69.0     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    70.0     3
101       69.0    66.7      M    66.0     6
102       69.0    66.0      F    62.5     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      F    63.0     3
96        70.0    58.0      F    63.0     5
97        69.0    68.5      F    64.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      F    62.5     8

[197 rows x 5 columns]

In [24]: fam.max()
Out[24]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [25]: fam.min()
Out[25]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      F    69.0     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    70.0     3
101       69.0    66.7      M    66.0     6
102       69.0    66.0      F    62.5     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      F    63.0     3
96        70.0    58.0      F    63.0     5
97        69.0    68.5      F    64.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      F    62.5     8

[197 rows x 5 columns]

In [26]: fam.mean()
Out[26]:
        Father  Mother     Height  Kids
Family
1         78.5    67.0  70.100000   4.0
10        74.0    65.5  65.500000   1.0
100       69.0    66.0  70.733333   3.0
101       69.0    66.7  70.416667   6.0
102       69.0    66.0  66.166667   6.0
...        ...     ...        ...   ...
95        70.0    58.5  66.333333   3.0
96        70.0    58.0  66.400000   5.0
97        69.0    68.5  67.150000  10.0
98        69.0    67.0  64.000000   1.0
99        69.0    66.0  67.987500   8.0

[197 rows x 4 columns]

In [27]: fam.max()
Out[27]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [28]: fam.max()['Kids']
Out[28]:
Family
1       4
10      1
100     3
101     6
102     6
       ..
95      3
96      5
97     10
98      1
99      8
Name: Kids, Length: 197, dtype: int64

In [29]: fam.max()['Kids'].values
Out[29]:
array([ 4,  1,  3,  6,  6,  5,  4,  6,  7,  9,  7,  7,  8,  4,  3,  1,  6,
        7,  3,  1,  3,  5,  1,  8,  4,  5,  9,  3,  4,  1,  2,  3, 11,  2,
        2,  7,  4,  8, 10,  8,  4,  5,  1,  2, 10,  8,  4,  1,  4,  8,  6,
        1,  1,  5,  3,  1,  2,  1,  5,  1,  7,  4,  1, 10,  5,  9,  1,  6,
        5,  4,  3, 11,  4,  8,  3,  6,  5,  1,  8,  9,  5,  6,  8,  5,  1,
        2,  3,  6,  7,  1,  4,  1, 15,  4,  1,  4,  1,  9,  2,  6,  6,  2,
        3,  4,  5,  7,  7,  4,  8,  1,  2,  3,  2,  3,  3,  7,  1,  2,  5,
        3,  6,  3,  2,  1,  6,  5,  5,  1,  5,  4,  4,  6,  2,  5,  5,  1,
        6,  2,  2,  3,  8,  4,  3,  7,  6,  2,  5,  9,  4,  5,  5,  5,  7,
        1,  1,  2,  4,  6,  1,  5,  1, 11,  4,  5,  8,  6,  5,  6,  7,  3,
        2,  7,  7,  4,  5,  8,  3,  1,  4,  9,  8,  5,  4,  4,  4,  8,  1,
        7,  3,  2,  4,  2,  3,  5, 10,  1,  8])

In [30]: fam.max()['Kids'].values.sum()
Out[30]: 899

In [31]: fam.max()['Kids'].sum()
Out[31]: 899

In [32]: len(gdf)
Out[32]: 898

In [33]: fam.count()
Out[33]:
        Father  Mother  Gender  Height  Kids
Family
1            4       4       4       4     4
10           1       1       1       1     1
100          3       3       3       3     3
101          6       6       6       6     6
102          6       6       6       6     6
...        ...     ...     ...     ...   ...
95           3       3       3       3     3
96           5       5       5       5     5
97          10      10      10      10    10
98           1       1       1       1     1
99           8       8       8       8     8

[197 rows x 5 columns]

In [34]: fam.count()['Kids']
Out[34]:
Family
1       4
10      1
100     3
101     6
102     6
       ..
95      3
96      5
97     10
98      1
99      8
Name: Kids, Length: 197, dtype: int64

In [35]: fam.max()['Kids']
Out[35]:
Family
1       4
10      1
100     3
101     6
102     6
       ..
95      3
96      5
97     10
98      1
99      8
Name: Kids, Length: 197, dtype: int64

In [36]: fam.count()['Kids'] == fam.max()['Kids']
Out[36]:
Family
1      True
10     True
100    True
101    True
102    True
       ...
95     True
96     True
97     True
98     True
99     True
Name: Kids, Length: 197, dtype: bool

In [37]: (fam.count()['Kids'] == fam.max()['Kids']).all()
Out[37]: False

In [38]: np.where(fam.count()['Kids'] == fam.max()['Kids'])
Out[38]:
(array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
         13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
         26,  27,  28,  29,  30,  31,  33,  34,  35,  36,  37,  38,  39,
         40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,
         53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
         66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,
         79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
         92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,
        105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
        118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
        144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
        157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
        170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
        183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
        196]),)

In [39]: np.where(fam.count()['Kids'] != fam.max()['Kids'])
Out[39]: (array([32]),)

In [40]: fam.count().iloc[32]
Out[40]:
Father    10
Mother    10
Gender    10
Height    10
Kids      10
Name: 130, dtype: int64

In [41]: gdf['Family'] == '130'
Out[41]:
0      False
1      False
2      False
3      False
4      False
       ...
893    False
894    False
895    False
896    False
897    False
Name: Family, Length: 898, dtype: bool

In [42]: gdf.loc[gdf['Family'] == '130']
Out[42]:
    Family  Father  Mother Gender  Height  Kids
555    130    68.5    66.5      M    70.0    11
556    130    68.5    66.5      M    69.0    11
557    130    68.5    66.5      M    69.0    11
558    130    68.5    66.5      M    68.7    11
559    130    68.5    66.5      M    68.5    11
560    130    68.5    66.5      M    68.5    11
561    130    68.5    66.5      M    68.0    11
562    130    68.5    66.5      M    68.0    11
563    130    68.5    66.5      M    68.0    11
564    130    68.5    66.5      F    63.2    11

In [43]: gdf
Out[43]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
893   136A    68.5    65.0      M    68.5     8
894   136A    68.5    65.0      M    67.7     8
895   136A    68.5    65.0      F    64.0     8
896   136A    68.5    65.0      F    63.5     8
897   136A    68.5    65.0      F    63.0     8

[898 rows x 6 columns]

In [44]: gdf['Height']
Out[44]:
0      73.2
1      69.2
2      69.0
3      69.0
4      73.5
       ...
893    68.5
894    67.7
895    64.0
896    63.5
897    63.0
Name: Height, Length: 898, dtype: float64

In [45]: gdf['Height'].mean()
Out[45]: 66.76069042316252

In [46]: ax = gdf['Height'].hist()

In [47]: ax = gdf['Height'].plot.hist()

In [48]: ax.set_xlabel('Child height (in)')
Out[48]: Text(0.5, 13.94444444444443, 'Child height (in)')

In [49]: ax.set_ylabel('Count')
Out[49]: Text(37.500000000000014, 0.5, 'Count')

In [50]: gdf
Out[50]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
893   136A    68.5    65.0      M    68.5     8
894   136A    68.5    65.0      M    67.7     8
895   136A    68.5    65.0      F    64.0     8
896   136A    68.5    65.0      F    63.5     8
897   136A    68.5    65.0      F    63.0     8

[898 rows x 6 columns]

In [51]: gdf['Family']
Out[51]:
0         1
1         1
2         1
3         1
4         2
       ...
893    136A
894    136A
895    136A
896    136A
897    136A
Name: Family, Length: 898, dtype: object

In [52]: gdf['Family'] == '136A'
Out[52]:
0      False
1      False
2      False
3      False
4      False
       ...
893     True
894     True
895     True
896     True
897     True
Name: Family, Length: 898, dtype: bool

In [53]: gdf['Family'] != '136A'
Out[53]:
0       True
1       True
2       True
3       True
4       True
       ...
893    False
894    False
895    False
896    False
897    False
Name: Family, Length: 898, dtype: bool

In [54]: gdf[gdf['Family'] != '136A']
Out[54]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
885    203    62.0    66.0      M    64.0     3
886    203    62.0    66.0      F    62.0     3
887    203    62.0    66.0      F    61.0     3
888    204    62.5    63.0      M    66.5     2
889    204    62.5    63.0      F    57.0     2

[890 rows x 6 columns]

In [55]: gdf.loc[gdf['Family'] != '136A']
Out[55]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
885    203    62.0    66.0      M    64.0     3
886    203    62.0    66.0      F    62.0     3
887    203    62.0    66.0      F    61.0     3
888    204    62.5    63.0      M    66.5     2
889    204    62.5    63.0      F    57.0     2

[890 rows x 6 columns]

In [56]: subset = gdf.loc[gdf['Family'] != '136A']

In [57]: subset
Out[57]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
885    203    62.0    66.0      M    64.0     3
886    203    62.0    66.0      F    62.0     3
887    203    62.0    66.0      F    61.0     3
888    204    62.5    63.0      M    66.5     2
889    204    62.5    63.0      F    57.0     2

[890 rows x 6 columns]

In [58]: subset.groupby('Family')
Out[58]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6849a8790>

In [59]: len(subset.groupby('Family'))
Out[59]: 196

In [60]: gdf['Father'].mean()
Out[60]: 69.23285077950997

In [61]: gdf
Out[61]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
893   136A    68.5    65.0      M    68.5     8
894   136A    68.5    65.0      M    67.7     8
895   136A    68.5    65.0      F    64.0     8
896   136A    68.5    65.0      F    63.5     8
897   136A    68.5    65.0      F    63.0     8

[898 rows x 6 columns]

In [62]: fam
Out[62]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6ac153f70>

In [63]: fam.max()
Out[63]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [64]: fam.max()['Father']
Out[64]:
Family
1      78.5
10     74.0
100    69.0
101    69.0
102    69.0
       ...
95     70.0
96     70.0
97     69.0
98     69.0
99     69.0
Name: Father, Length: 197, dtype: float64

In [65]: fam.max()['Father'].mean()
Out[65]: 69.34923857868021

In [66]: fam.max()['Mother'].mean()
Out[66]: 63.98426395939087

In [67]: fam.max()
Out[67]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [68]: fam['Father']
Out[68]: <pandas.core.groupby.generic.SeriesGroupBy object at 0x7fe685673400>

In [69]: fam['Father'].max()
Out[69]:
Family
1      78.5
10     74.0
100    69.0
101    69.0
102    69.0
       ...
95     70.0
96     70.0
97     69.0
98     69.0
99     69.0
Name: Father, Length: 197, dtype: float64

In [70]: fam.max()['Father']
Out[70]:
Family
1      78.5
10     74.0
100    69.0
101    69.0
102    69.0
       ...
95     70.0
96     70.0
97     69.0
98     69.0
99     69.0
Name: Father, Length: 197, dtype: float64

In [71]: fam['Father'].max()
Out[71]:
Family
1      78.5
10     74.0
100    69.0
101    69.0
102    69.0
       ...
95     70.0
96     70.0
97     69.0
98     69.0
99     69.0
Name: Father, Length: 197, dtype: float64

In [72]: fam['Father'].max().mean()
Out[72]: 69.34923857868021

In [73]: fam['Mother'].max().mean()
Out[73]: 63.98426395939087

In [74]: fam['Mother'].mean().mean()
Out[74]: 63.98426395939087

In [75]: fam['Mother'].min().mean()
Out[75]: 63.98426395939087

In [76]: gdf
Out[76]:
    Family  Father  Mother Gender  Height  Kids
0        1    78.5    67.0      M    73.2     4
1        1    78.5    67.0      F    69.2     4
2        1    78.5    67.0      F    69.0     4
3        1    78.5    67.0      F    69.0     4
4        2    75.5    66.5      M    73.5     4
..     ...     ...     ...    ...     ...   ...
893   136A    68.5    65.0      M    68.5     8
894   136A    68.5    65.0      M    67.7     8
895   136A    68.5    65.0      F    64.0     8
896   136A    68.5    65.0      F    63.5     8
897   136A    68.5    65.0      F    63.0     8

[898 rows x 6 columns]

In [77]: gdf.plot.scatter?

In [78]: gdf.plot.scatter('Father', 'Mother')
Out[78]: <AxesSubplot:xlabel='Father', ylabel='Mother'>

In [79]: fam.max()
Out[79]:
        Father  Mother Gender  Height  Kids
Family
1         78.5    67.0      M    73.2     4
10        74.0    65.5      F    65.5     1
100       69.0    66.0      M    71.2     3
101       69.0    66.7      M    75.0     6
102       69.0    66.0      M    70.0     6
...        ...     ...    ...     ...   ...
95        70.0    58.5      M    71.5     3
96        70.0    58.0      M    72.0     5
97        69.0    68.5      M    75.0    10
98        69.0    67.0      F    64.0     1
99        69.0    66.0      M    73.0     8

[197 rows x 5 columns]

In [80]: fam.max()[['Father', 'Mother']]
Out[80]:
        Father  Mother
Family
1         78.5    67.0
10        74.0    65.5
100       69.0    66.0
101       69.0    66.7
102       69.0    66.0
...        ...     ...
95        70.0    58.5
96        70.0    58.0
97        69.0    68.5
98        69.0    67.0
99        69.0    66.0

[197 rows x 2 columns]

In [81]: type(fam.max()[['Father', 'Mother']])
Out[81]: pandas.core.frame.DataFrame

In [82]: fam[['Father', 'Mother']]
Out[82]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6847281c0>

In [83]: fam[['Father', 'Mother']].max()
Out[83]:
        Father  Mother
Family
1         78.5    67.0
10        74.0    65.5
100       69.0    66.0
101       69.0    66.7
102       69.0    66.0
...        ...     ...
95        70.0    58.5
96        70.0    58.0
97        69.0    68.5
98        69.0    67.0
99        69.0    66.0

[197 rows x 2 columns]

In [84]: fam[['Father', 'Mother']].max().plot.scatter('Father', 'Mother')
Out[84]: <AxesSubplot:xlabel='Father', ylabel='Mother'>

In [85]: gdf.corr()
Out[85]:
          Father    Mother    Height      Kids
Father  1.000000  0.073665  0.275355 -0.160023
Mother  0.073665  1.000000  0.201655 -0.020030
Height  0.275355  0.201655  1.000000 -0.126910
Kids   -0.160023 -0.020030 -0.126910  1.000000

In [86]: fam[['Father', 'Mother']].max()
Out[86]:
        Father  Mother
Family
1         78.5    67.0
10        74.0    65.5
100       69.0    66.0
101       69.0    66.7
102       69.0    66.0
...        ...     ...
95        70.0    58.5
96        70.0    58.0
97        69.0    68.5
98        69.0    67.0
99        69.0    66.0

[197 rows x 2 columns]

In [87]: fam[['Father', 'Mother']].max().corr()
Out[87]:
          Father    Mother
Father  1.000000  0.100606
Mother  0.100606  1.000000

In [88]: type(fam[['Father', 'Mother']].max().corr())
Out[88]: pandas.core.frame.DataFrame

In [89]: fam[['Father', 'Mother']].max().corr().iloc[0, 1]
Out[89]: 0.1006059834102979

In [90]: mgdf = pd.DataFrame()

In [91]: fam
Out[91]: <pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe6ac153f70>

In [92]: fam['Height'].mean()
Out[92]:
Family
1      70.100000
10     65.500000
100    70.733333
101    70.416667
102    66.166667
         ...
95     66.333333
96     66.400000
97     67.150000
98     64.000000
99     67.987500
Name: Height, Length: 197, dtype: float64

In [93]: mgdf['MeanHeight'] = fam['Height'].mean()

In [94]: mgdf
Out[94]:
        MeanHeight
Family
1        70.100000
10       65.500000
100      70.733333
101      70.416667
102      66.166667
...            ...
95       66.333333
96       66.400000
97       67.150000
98       64.000000
99       67.987500

[197 rows x 1 columns]

In [95]: fam['Father'].max()
Out[95]:
Family
1      78.5
10     74.0
100    69.0
101    69.0
102    69.0
       ...
95     70.0
96     70.0
97     69.0
98     69.0
99     69.0
Name: Father, Length: 197, dtype: float64

In [96]: mgdf['Father'] = fam['Father'].max()

In [97]: mgdf
Out[97]:
        MeanHeight  Father
Family
1        70.100000    78.5
10       65.500000    74.0
100      70.733333    69.0
101      70.416667    69.0
102      66.166667    69.0
...            ...     ...
95       66.333333    70.0
96       66.400000    70.0
97       67.150000    69.0
98       64.000000    69.0
99       67.987500    69.0

[197 rows x 2 columns]

In [98]: mgdf['Mother'] = fam['Mother'].max()

In [99]: mgdf
Out[99]:
        MeanHeight  Father  Mother
Family
1        70.100000    78.5    67.0
10       65.500000    74.0    65.5
100      70.733333    69.0    66.0
101      70.416667    69.0    66.7
102      66.166667    69.0    66.0
...            ...     ...     ...
95       66.333333    70.0    58.5
96       66.400000    70.0    58.0
97       67.150000    69.0    68.5
98       64.000000    69.0    67.0
99       67.987500    69.0    66.0

[197 rows x 3 columns]

In [100]: mgdf.plot.scatter('Father', 'MeanHeight')
Out[100]: <AxesSubplot:xlabel='Father', ylabel='MeanHeight'>

In [101]: mgdf.plot.scatter('Mother', 'MeanHeight')
Out[101]: <AxesSubplot:xlabel='Mother', ylabel='MeanHeight'>

In [102]: mgdf.corr()
Out[102]:
            MeanHeight    Father    Mother
MeanHeight     1.00000  0.334510  0.261300
Father         0.33451  1.000000  0.100606
Mother         0.26130  0.100606  1.000000

In [103]: plt.close('all')

In [104]: np.random
Out[104]: <module 'numpy.random' from '/usr/local/lib/python3.8/dist-packages/numpy/random/__init__.py'>

In [105]: c = np.random.random(1000)

In [106]: c.max()
Out[106]: 0.9998624983294364

In [107]: c.min()
Out[107]: 0.00017482934298673758

In [108]: c
Out[108]:
array([8.76057025e-01, 2.16363096e-01, 8.03572628e-01, 1.33358559e-01,
       2.33553792e-01, 5.59635530e-01, 9.72070433e-01, 2.54702892e-01,
       7.86670334e-01, 9.04294407e-01, 9.59081083e-01, 4.77242444e-01,
       7.92054671e-01, 3.22090854e-01, 9.88439254e-02, 6.67746437e-01,
       4.56621894e-01, 3.59802779e-01, 5.38488693e-01, 3.19163725e-01,
       5.02781994e-01, 1.64602579e-02, 8.80516267e-01, 4.31514337e-01,
       7.30145201e-01, 7.95047139e-01, 2.50972329e-01, 2.03627353e-02,
       8.26859369e-01, 1.44237666e-01, 3.97619999e-01, 5.84781035e-01,
       1.26395303e-02, 5.90489700e-02, 1.81034337e-01, 4.96124218e-01,
       4.98501517e-02, 8.13577126e-01, 5.74794910e-02, 9.64187723e-01,
       3.31034073e-01, 5.25854618e-01, 9.42722803e-02, 3.58362751e-01,
       3.10358705e-01, 8.31442356e-01, 3.65356331e-01, 6.76232763e-01,
       7.93488846e-01, 4.69797270e-01, 8.94453007e-01, 6.36634050e-01,
       1.51125670e-01, 6.59032030e-01, 9.76647791e-01, 1.05959502e-01,
       6.51899431e-01, 3.16737442e-01, 8.51595400e-01, 8.58373772e-01,
       6.50393325e-01, 8.09261161e-01, 6.41910774e-01, 9.91878509e-01,
       7.69256541e-01, 7.49243661e-01, 2.36133058e-01, 6.03639906e-01,
       8.85540709e-01, 1.43673791e-01, 2.46959083e-01, 9.34743987e-02,
       9.52085746e-02, 2.63839120e-02, 8.74458841e-01, 9.66080034e-01,
       1.35431552e-01, 8.63650321e-01, 3.38729820e-01, 7.36666643e-01,
       9.57959259e-01, 5.24040412e-01, 4.43807027e-01, 4.48479550e-01,
       8.10663844e-01, 9.78220359e-01, 4.26192714e-01, 5.05564541e-01,
       1.31546112e-01, 5.13580940e-01, 7.10913212e-01, 4.23450156e-01,
       5.61731167e-02, 4.30551225e-01, 8.35660672e-01, 9.75800801e-01,
       8.19427802e-01, 7.55441657e-01, 2.73928620e-01, 2.83818737e-01,
       1.46162880e-01, 1.44837486e-01, 2.79989683e-01, 5.74471384e-01,
       8.56371970e-01, 8.59458060e-01, 1.34564012e-01, 2.26389498e-01,
       1.65263901e-01, 8.64848013e-02, 5.72143953e-01, 5.74258670e-01,
       1.68338408e-01, 1.12957870e-01, 6.78620138e-01, 6.55113313e-01,
       3.54170711e-01, 4.66337920e-01, 3.38022553e-01, 9.86457168e-01,
       2.31641808e-01, 4.87416780e-02, 1.48287841e-01, 8.05092626e-02,
       1.24368004e-01, 5.77571454e-01, 6.66180572e-01, 9.30536184e-01,
       3.22502873e-01, 8.20036975e-01, 3.30254714e-01, 3.50135610e-01,
       7.05880194e-01, 4.85095520e-01, 7.29830088e-01, 7.71473684e-01,
       5.37853904e-01, 8.71609379e-01, 4.64437922e-01, 9.22133459e-01,
       4.76551130e-01, 4.66376407e-02, 6.88012527e-01, 7.62703059e-01,
       9.33922132e-01, 7.48767140e-01, 7.00853715e-01, 1.83801319e-01,
       4.05926393e-01, 7.93260810e-01, 8.08124314e-01, 6.40752293e-01,
       6.79261107e-01, 9.61088699e-01, 7.70410607e-01, 9.58697458e-01,
       1.19549208e-01, 6.79310323e-01, 7.52864322e-01, 4.84526667e-01,
       4.02635427e-01, 8.47802363e-02, 3.85441759e-01, 2.80977057e-01,
       7.65217107e-01, 9.03664735e-03, 8.19170959e-01, 6.01413425e-01,
       5.28632289e-01, 4.13774573e-01, 8.06858415e-01, 5.89664928e-01,
       8.06546537e-01, 9.82917822e-01, 8.24210670e-01, 2.49075082e-01,
       4.39232574e-01, 1.51960352e-02, 9.03179461e-01, 9.66348018e-01,
       5.10973265e-01, 6.04022721e-03, 3.76852591e-01, 5.84550373e-01,
       6.93760212e-01, 8.65664087e-01, 2.35888649e-01, 9.04002128e-01,
       6.80845559e-01, 8.94624109e-01, 2.10626644e-01, 7.81314900e-01,
       2.31678357e-01, 9.51506788e-01, 3.85020217e-01, 4.38578630e-01,
       1.50804082e-01, 1.22219880e-01, 2.90077182e-01, 9.53619022e-01,
       8.04359815e-01, 6.39107080e-01, 3.14638017e-01, 4.52064539e-01,
       1.96384026e-01, 4.46864092e-01, 2.61986570e-01, 7.63359923e-01,
       6.88597136e-01, 4.38825538e-01, 5.83345629e-01, 4.08213125e-01,
       5.94924876e-01, 8.04001227e-01, 9.11973622e-01, 3.75713763e-01,
       8.38537230e-02, 4.81324856e-01, 3.73815018e-01, 9.38727122e-02,
       3.69269589e-01, 6.37065437e-01, 4.60701445e-01, 2.75655960e-01,
       2.87508360e-01, 2.25698699e-01, 9.30524258e-01, 5.21547041e-01,
       1.78849158e-01, 2.08546534e-01, 1.90330571e-01, 4.52364147e-02,
       4.74358031e-01, 8.26789408e-01, 6.18859794e-02, 1.65192087e-01,
       5.57052706e-01, 1.53782733e-01, 5.14883253e-01, 3.39154532e-01,
       3.31567844e-01, 1.03389268e-01, 6.76254587e-01, 4.78594377e-01,
       1.49561683e-01, 7.75253608e-02, 4.09581740e-01, 8.11680914e-01,
       2.63813952e-01, 8.47490364e-02, 3.57585496e-01, 1.88700599e-02,
       7.81707239e-01, 4.13102252e-01, 6.51228630e-01, 9.40323868e-01,
       8.67934799e-01, 1.61058380e-01, 3.38496983e-01, 6.41913948e-01,
       9.01017730e-01, 1.84936644e-01, 7.45544370e-01, 6.24900168e-01,
       2.10083769e-01, 1.89954755e-01, 7.79812554e-01, 6.50832096e-03,
       8.25314857e-02, 6.34004552e-01, 2.55821257e-01, 6.55530203e-01,
       4.48520465e-01, 1.54681421e-01, 1.05802095e-01, 6.19834925e-01,
       7.62717917e-01, 8.23520747e-01, 3.50600322e-01, 7.94401913e-01,
       5.27676586e-01, 6.29549593e-01, 6.76142868e-01, 4.21504825e-01,
       8.33637235e-02, 6.76424884e-01, 5.01584799e-01, 1.12427650e-01,
       7.97895582e-01, 8.55372659e-02, 6.59594583e-01, 5.53953018e-01,
       8.11214183e-01, 8.39042411e-01, 3.90956534e-01, 1.08579965e-01,
       5.61852782e-01, 7.20304420e-02, 5.32412375e-01, 4.96046446e-01,
       2.02449758e-01, 5.33678617e-02, 1.09352958e-01, 2.88542642e-01,
       2.77756215e-01, 3.34273032e-01, 1.70752520e-01, 9.05885278e-01,
       6.80976222e-01, 2.48632144e-01, 2.35045837e-01, 6.07140533e-01,
       3.65916954e-01, 9.26223240e-01, 2.79393490e-01, 8.07588447e-01,
       5.79430079e-01, 7.34439752e-01, 3.85929598e-01, 4.65564352e-01,
       4.31091849e-01, 4.90623046e-01, 4.67177841e-01, 6.87143471e-02,
       7.16223776e-01, 4.47564407e-01, 7.46759384e-01, 7.24565384e-01,
       3.48823137e-01, 8.53628028e-01, 7.77155027e-01, 9.28119905e-01,
       1.09881357e-01, 2.82850001e-01, 5.94746641e-01, 5.39974877e-01,
       2.34337244e-01, 8.45748095e-01, 5.23925594e-01, 2.85050621e-01,
       1.94173413e-01, 5.05402023e-01, 1.60776378e-01, 3.84206411e-01,
       7.39175829e-01, 4.69834550e-01, 8.37022663e-01, 3.28056909e-01,
       6.69982949e-01, 9.02164484e-01, 6.34849256e-01, 4.65874820e-02,
       2.09675194e-01, 2.34695402e-01, 7.85958928e-01, 7.69458177e-01,
       2.06198463e-01, 8.77547279e-01, 4.68770847e-01, 3.27792228e-01,
       7.40366473e-01, 2.16252199e-01, 6.06317679e-01, 3.11198617e-01,
       3.72159510e-01, 9.67042982e-02, 1.72217659e-01, 3.06796022e-01,
       9.74915573e-01, 6.81317165e-01, 4.04611768e-01, 4.20664339e-01,
       7.07124730e-01, 9.86077613e-01, 6.39288540e-01, 3.38103774e-01,
       9.51808789e-01, 7.58865599e-01, 7.08389044e-01, 8.04775929e-01,
       5.41846915e-01, 9.34083709e-01, 2.10111686e-01, 2.15112471e-02,
       9.40248513e-01, 2.17638836e-01, 1.44429137e-01, 9.01940149e-01,
       9.38756953e-01, 5.12065826e-02, 6.03791846e-01, 2.01901940e-01,
       7.89780878e-01, 9.99057199e-01, 6.18008979e-01, 2.13848583e-01,
       3.51922251e-01, 9.63470744e-01, 7.22176122e-01, 1.88198933e-01,
       2.15955854e-01, 6.09265625e-01, 7.59509358e-02, 4.73131039e-01,
       6.79629212e-01, 3.55370216e-01, 1.40417301e-01, 3.32126396e-01,
       7.82796661e-01, 3.17881104e-01, 3.06146490e-01, 2.83526646e-01,
       5.27341947e-01, 8.83925681e-01, 7.95221768e-01, 1.04071316e-01,
       5.31008123e-01, 5.94062838e-01, 4.35452025e-01, 6.40359350e-01,
       3.06610142e-01, 8.66665153e-01, 2.10835994e-01, 5.40662019e-01,
       4.79378623e-01, 8.84410163e-01, 9.65649344e-01, 8.54161553e-01,
       4.58127112e-02, 3.32208798e-01, 4.67331368e-01, 9.05619746e-01,
       9.51745968e-01, 1.61619618e-01, 2.38684524e-01, 1.15258842e-01,
       8.40548763e-01, 8.47272469e-01, 2.12374771e-02, 1.25620896e-01,
       3.77410341e-01, 7.12873366e-01, 8.75055190e-01, 7.38898935e-01,
       1.48123800e-01, 9.12023020e-01, 3.65971253e-01, 7.16599023e-01,
       5.89877098e-01, 9.45442864e-02, 3.47828622e-01, 3.70546839e-01,
       5.73085686e-02, 1.65639384e-01, 2.05183703e-01, 3.27351952e-01,
       9.63532348e-02, 2.64377451e-01, 7.28292793e-02, 5.65536585e-01,
       3.16338393e-01, 9.18959262e-01, 7.59904837e-01, 6.37524647e-01,
       2.04370355e-02, 3.50999144e-01, 6.33786153e-01, 7.91425232e-01,
       6.66309056e-01, 8.88683648e-02, 8.91226336e-01, 8.33125902e-01,
       3.11866743e-01, 7.29249383e-01, 5.28625131e-01, 5.37905512e-01,
       5.17945887e-02, 2.44396249e-01, 3.33525322e-01, 2.57645476e-01,
       6.35392073e-01, 2.93496959e-01, 2.86759109e-01, 1.66208433e-01,
       5.47620093e-01, 1.90779848e-01, 3.34020072e-01, 9.79574059e-01,
       3.79600092e-01, 6.19906077e-01, 4.06756005e-01, 9.18388821e-01,
       6.07664640e-01, 5.36069193e-01, 7.64262587e-01, 9.91038791e-01,
       7.78111920e-01, 5.28174266e-01, 1.19828850e-01, 1.43079108e-01,
       4.25006349e-01, 6.65234616e-01, 8.23896301e-01, 9.38424715e-01,
       9.21500667e-01, 2.23349102e-01, 7.71230465e-02, 2.99449035e-01,
       2.40651289e-02, 1.50105138e-01, 1.90589255e-01, 5.53781294e-01,
       6.51652474e-01, 5.81597780e-01, 3.04336724e-01, 3.05131101e-01,
       1.15260542e-01, 1.51839857e-03, 4.41264833e-01, 7.81476227e-02,
       4.98037150e-01, 6.91440927e-02, 8.40611612e-01, 7.43843430e-01,
       8.63176472e-01, 8.56912279e-01, 7.67716085e-02, 8.42691543e-01,
       8.72313444e-01, 3.03660344e-01, 5.16765661e-02, 8.49748115e-01,
       2.97127653e-02, 3.62081876e-01, 5.37520886e-01, 4.09001132e-01,
       2.08250786e-01, 8.99088287e-01, 5.89155297e-01, 2.68377438e-01,
       9.10358199e-01, 7.94679427e-01, 8.99415315e-01, 3.46103317e-01,
       9.89198957e-01, 9.06792789e-01, 8.62259636e-01, 8.92904079e-01,
       8.40989707e-01, 2.86060723e-01, 2.69328314e-01, 7.55723194e-02,
       1.79323633e-01, 5.99841503e-01, 7.01357592e-01, 4.79857724e-01,
       8.46323228e-01, 8.62047825e-01, 5.71510680e-01, 1.21622404e-02,
       2.21531963e-01, 6.07884051e-01, 7.42225580e-01, 7.56329347e-01,
       6.04503926e-01, 4.78140623e-01, 8.68489331e-01, 5.79751264e-01,
       5.60526824e-01, 9.47627179e-01, 3.91357196e-01, 4.36444342e-01,
       4.11613346e-01, 1.52075943e-01, 8.31749940e-01, 8.62018812e-01,
       5.89860591e-01, 1.99655807e-01, 1.43083249e-01, 7.26872923e-01,
       3.52699522e-01, 1.36672364e-01, 1.74481865e-01, 6.01741146e-01,
       5.48585005e-01, 9.44626735e-01, 1.26308439e-01, 2.37281049e-01,
       9.99104995e-01, 7.48928247e-01, 2.62128783e-03, 8.78188785e-01,
       8.96840136e-02, 6.59410641e-01, 3.26650395e-01, 4.18213863e-02,
       8.15033673e-01, 4.00456270e-01, 6.34677273e-02, 2.55820524e-01,
       4.21587944e-01, 8.66160253e-01, 5.41821438e-01, 1.28219810e-01,
       6.51085008e-02, 9.65210908e-02, 7.51567100e-01, 3.14875917e-01,
       4.31252735e-01, 7.70178846e-02, 3.17881941e-02, 9.80967896e-01,
       7.21411020e-02, 4.05070427e-01, 7.27835182e-02, 9.60013947e-01,
       5.90131618e-01, 9.70647311e-01, 4.44772509e-03, 3.37131363e-01,
       9.31826438e-01, 3.32728619e-01, 3.45204446e-01, 3.38662580e-01,
       9.94155632e-01, 6.24675494e-01, 1.93659178e-01, 8.67226810e-02,
       7.14413951e-02, 5.07480866e-01, 5.02954723e-01, 8.39472361e-01,
       7.69685621e-02, 2.71590210e-01, 6.67631506e-01, 7.95555890e-01,
       5.59070036e-01, 5.16187038e-02, 1.84233938e-01, 7.82977135e-01,
       3.06588828e-01, 2.90354053e-02, 1.34311644e-03, 5.55365896e-01,
       3.09968614e-01, 6.73909669e-01, 8.30489577e-01, 6.37997402e-01,
       8.17559411e-01, 8.81276278e-01, 9.70914079e-01, 8.39999240e-01,
       5.72589904e-01, 4.13084794e-02, 9.93294627e-01, 4.97358754e-01,
       3.88261324e-02, 1.82670822e-01, 4.95044293e-01, 7.51665833e-01,
       8.12425800e-01, 3.65662611e-01, 4.99761054e-01, 1.89674011e-01,
       5.00954344e-01, 9.76401626e-01, 9.18963398e-02, 3.68805004e-01,
       1.69498078e-01, 7.76099036e-01, 5.07465470e-01, 1.23163041e-02,
       4.59458561e-01, 5.52558488e-02, 3.94774169e-01, 8.34814864e-01,
       6.59236846e-01, 7.11457791e-01, 1.90842247e-02, 6.82430683e-01,
       3.22180518e-01, 4.50691044e-01, 8.91250179e-01, 8.27205510e-01,
       9.52834887e-01, 9.71322214e-01, 5.53338650e-02, 4.47149390e-01,
       6.95380776e-01, 7.25711993e-01, 6.59886395e-01, 8.35333501e-02,
       4.09335138e-01, 1.76815801e-02, 7.30821656e-01, 1.27936468e-01,
       6.41753594e-01, 6.57627978e-01, 4.59447181e-01, 5.43176987e-01,
       8.66166940e-01, 7.63550215e-01, 3.13354633e-01, 6.11658277e-01,
       9.89155565e-01, 4.99151858e-01, 6.36284286e-01, 7.13107713e-01,
       9.98292640e-01, 8.56874207e-01, 9.60604720e-03, 4.22064716e-01,
       5.75547386e-01, 6.05666593e-01, 6.69335649e-01, 7.32263261e-01,
       3.60877351e-01, 4.69899001e-01, 1.25444655e-01, 3.64976510e-01,
       7.92764929e-03, 8.01047680e-01, 2.66178462e-01, 2.35786715e-01,
       3.76099321e-01, 9.08831427e-01, 4.83840149e-01, 3.80962342e-02,
       6.84620711e-01, 1.33217223e-01, 5.74889977e-01, 3.12011696e-01,
       6.94803660e-01, 7.65097031e-01, 9.46254576e-01, 8.95881805e-01,
       4.36884339e-01, 9.42338255e-01, 8.46953767e-01, 3.28512734e-01,
       1.74541887e-01, 1.67644245e-01, 7.76786202e-01, 3.34210145e-01,
       1.18126332e-01, 1.10625807e-01, 8.61600290e-01, 6.48545666e-01,
       3.90035135e-01, 7.44978423e-01, 1.10116212e-01, 7.44106819e-01,
       5.32061192e-01, 9.97902745e-01, 2.36438775e-01, 2.67116514e-01,
       1.14973401e-01, 5.04300470e-01, 2.44745791e-01, 9.64753898e-01,
       5.69544159e-01, 1.20145206e-01, 4.65915198e-02, 8.53265180e-01,
       5.61961840e-01, 5.94154372e-01, 2.39899372e-01, 3.00222584e-01,
       5.87178742e-01, 6.76901833e-02, 2.29230643e-01, 9.71356457e-01,
       5.77081596e-01, 5.81685271e-01, 7.70657203e-01, 4.45618679e-02,
       9.57493192e-01, 1.55701613e-01, 4.63980590e-01, 1.13353784e-01,
       7.51520969e-01, 4.15484603e-01, 4.23981238e-01, 7.75503521e-01,
       2.30149893e-01, 8.48349168e-02, 2.73220890e-01, 4.42918588e-01,
       4.93426481e-01, 9.68901531e-01, 1.65058121e-01, 1.76927813e-01,
       5.35904247e-01, 6.35441178e-01, 8.17906455e-01, 9.58542240e-01,
       8.01029817e-01, 2.55993809e-02, 7.42762706e-01, 4.52038146e-01,
       6.97314145e-01, 8.33373740e-01, 4.16371033e-01, 4.43404577e-01,
       6.74510674e-01, 2.71843942e-02, 7.80369457e-01, 1.63971056e-01,
       1.40383478e-01, 3.04192393e-01, 1.82529447e-01, 9.28424318e-01,
       7.51106775e-01, 8.85801945e-01, 6.53420673e-01, 5.90356663e-01,
       5.18344672e-01, 1.13390731e-01, 1.18430795e-01, 4.72085287e-01,
       4.79052059e-01, 7.37945538e-01, 9.00336796e-01, 7.69053802e-01,
       8.98717063e-01, 4.23488063e-01, 3.34600919e-02, 3.23961850e-01,
       8.78327659e-01, 7.09110089e-01, 8.57663915e-01, 6.72515275e-01,
       5.38158438e-01, 1.35384173e-01, 5.32121692e-01, 2.43747446e-01,
       3.14283415e-01, 9.04379009e-01, 1.32349134e-01, 9.21916001e-01,
       9.84749073e-01, 6.20491077e-01, 3.81996822e-01, 7.89473808e-02,
       1.90724148e-01, 4.92382356e-01, 3.18046107e-01, 9.50578978e-01,
       3.68372465e-01, 8.00339571e-01, 2.24805242e-01, 6.41099223e-02,
       4.39144487e-01, 4.56585034e-01, 9.44635670e-01, 4.97734619e-01,
       8.60846408e-02, 1.86827852e-01, 3.01800652e-01, 1.50713632e-01,
       1.41016699e-01, 6.35649669e-01, 6.06189671e-01, 5.34974515e-01,
       7.23959072e-01, 9.89736434e-01, 4.96243688e-01, 3.14287380e-01,
       1.50977052e-01, 3.06134402e-01, 3.85559114e-01, 2.68222029e-03,
       9.72646651e-03, 5.20317502e-01, 1.99551415e-01, 6.24468170e-01,
       3.79974128e-01, 6.26600491e-01, 9.55359487e-01, 6.78278956e-01,
       4.62714429e-01, 2.70981236e-01, 8.77900471e-01, 3.28079924e-01,
       2.81556586e-01, 6.84194615e-01, 9.32554564e-01, 6.34749957e-01,
       6.63125596e-01, 1.83916475e-01, 5.33068590e-01, 8.23524219e-01,
       7.30009512e-01, 7.77383336e-01, 9.71089604e-01, 2.16833264e-01,
       1.52230075e-01, 5.78269070e-01, 9.00557377e-01, 4.61394527e-02,
       5.11063374e-01, 1.94977514e-01, 3.35288751e-01, 1.31249615e-02,
       6.92292635e-01, 9.97707004e-01, 2.50885812e-01, 9.72237228e-01,
       9.22539088e-02, 9.58684464e-01, 4.35502914e-01, 1.74829343e-04,
       2.93007066e-01, 6.76113009e-01, 6.35156920e-01, 6.02791195e-01,
       3.92328436e-02, 1.79497560e-01, 6.98283466e-02, 7.12667799e-01,
       1.97966949e-01, 5.06384655e-01, 3.39780604e-01, 6.28899525e-01,
       7.27392791e-01, 6.94118888e-01, 9.52951209e-01, 5.88528181e-01,
       8.39815684e-01, 5.11287446e-01, 6.97131117e-01, 2.05030939e-01,
       2.87420800e-01, 6.30308191e-01, 7.19616534e-01, 2.28020519e-01,
       4.06323436e-01, 9.61360702e-01, 2.17086687e-01, 7.27733475e-01,
       9.99862498e-01, 1.12143360e-02, 1.21421172e-02, 3.70601583e-01,
       2.88060765e-01, 8.93751145e-01, 7.50776334e-01, 4.59294830e-01,
       4.62888945e-01, 5.72037151e-01, 6.47231396e-01, 5.69444815e-01,
       3.94410632e-01, 1.43764513e-01, 9.54624973e-01, 4.65186964e-01,
       5.59659042e-01, 3.93229057e-02, 1.36812141e-01, 8.08102461e-01,
       3.33926414e-01, 6.67503980e-01, 9.54385601e-01, 5.07298589e-01,
       9.60239657e-01, 5.98312561e-01, 7.62850356e-02, 2.02380570e-01,
       1.27448703e-01, 2.36360012e-01, 4.95027862e-01, 3.95855996e-01,
       4.04092867e-01, 3.45339050e-01, 8.25601939e-02, 9.15420529e-01,
       6.36127899e-01, 6.86454949e-01, 8.70008446e-01, 4.24015747e-01,
       3.87546604e-01, 5.18667876e-01, 5.83165681e-01, 8.00861999e-03,
       3.61586033e-01, 8.35409427e-01, 1.55542941e-02, 8.63110152e-01,
       8.62954722e-01, 2.55537522e-01, 8.05771547e-01, 5.32924635e-01,
       3.66833055e-01, 5.56023174e-01, 3.46253137e-01, 5.83119790e-01,
       9.06558847e-01, 5.75237152e-01, 6.68955490e-01, 7.57360867e-01])

In [109]: c1 = np.random.random(1000)

In [110]: c
Out[110]:
array([8.76057025e-01, 2.16363096e-01, 8.03572628e-01, 1.33358559e-01,
       2.33553792e-01, 5.59635530e-01, 9.72070433e-01, 2.54702892e-01,
       7.86670334e-01, 9.04294407e-01, 9.59081083e-01, 4.77242444e-01,
       7.92054671e-01, 3.22090854e-01, 9.88439254e-02, 6.67746437e-01,
       4.56621894e-01, 3.59802779e-01, 5.38488693e-01, 3.19163725e-01,
       5.02781994e-01, 1.64602579e-02, 8.80516267e-01, 4.31514337e-01,
       7.30145201e-01, 7.95047139e-01, 2.50972329e-01, 2.03627353e-02,
       8.26859369e-01, 1.44237666e-01, 3.97619999e-01, 5.84781035e-01,
       1.26395303e-02, 5.90489700e-02, 1.81034337e-01, 4.96124218e-01,
       4.98501517e-02, 8.13577126e-01, 5.74794910e-02, 9.64187723e-01,
       3.31034073e-01, 5.25854618e-01, 9.42722803e-02, 3.58362751e-01,
       3.10358705e-01, 8.31442356e-01, 3.65356331e-01, 6.76232763e-01,
       7.93488846e-01, 4.69797270e-01, 8.94453007e-01, 6.36634050e-01,
       1.51125670e-01, 6.59032030e-01, 9.76647791e-01, 1.05959502e-01,
       6.51899431e-01, 3.16737442e-01, 8.51595400e-01, 8.58373772e-01,
       6.50393325e-01, 8.09261161e-01, 6.41910774e-01, 9.91878509e-01,
       7.69256541e-01, 7.49243661e-01, 2.36133058e-01, 6.03639906e-01,
       8.85540709e-01, 1.43673791e-01, 2.46959083e-01, 9.34743987e-02,
       9.52085746e-02, 2.63839120e-02, 8.74458841e-01, 9.66080034e-01,
       1.35431552e-01, 8.63650321e-01, 3.38729820e-01, 7.36666643e-01,
       9.57959259e-01, 5.24040412e-01, 4.43807027e-01, 4.48479550e-01,
       8.10663844e-01, 9.78220359e-01, 4.26192714e-01, 5.05564541e-01,
       1.31546112e-01, 5.13580940e-01, 7.10913212e-01, 4.23450156e-01,
       5.61731167e-02, 4.30551225e-01, 8.35660672e-01, 9.75800801e-01,
       8.19427802e-01, 7.55441657e-01, 2.73928620e-01, 2.83818737e-01,
       1.46162880e-01, 1.44837486e-01, 2.79989683e-01, 5.74471384e-01,
       8.56371970e-01, 8.59458060e-01, 1.34564012e-01, 2.26389498e-01,
       1.65263901e-01, 8.64848013e-02, 5.72143953e-01, 5.74258670e-01,
       1.68338408e-01, 1.12957870e-01, 6.78620138e-01, 6.55113313e-01,
       3.54170711e-01, 4.66337920e-01, 3.38022553e-01, 9.86457168e-01,
       2.31641808e-01, 4.87416780e-02, 1.48287841e-01, 8.05092626e-02,
       1.24368004e-01, 5.77571454e-01, 6.66180572e-01, 9.30536184e-01,
       3.22502873e-01, 8.20036975e-01, 3.30254714e-01, 3.50135610e-01,
       7.05880194e-01, 4.85095520e-01, 7.29830088e-01, 7.71473684e-01,
       5.37853904e-01, 8.71609379e-01, 4.64437922e-01, 9.22133459e-01,
       4.76551130e-01, 4.66376407e-02, 6.88012527e-01, 7.62703059e-01,
       9.33922132e-01, 7.48767140e-01, 7.00853715e-01, 1.83801319e-01,
       4.05926393e-01, 7.93260810e-01, 8.08124314e-01, 6.40752293e-01,
       6.79261107e-01, 9.61088699e-01, 7.70410607e-01, 9.58697458e-01,
       1.19549208e-01, 6.79310323e-01, 7.52864322e-01, 4.84526667e-01,
       4.02635427e-01, 8.47802363e-02, 3.85441759e-01, 2.80977057e-01,
       7.65217107e-01, 9.03664735e-03, 8.19170959e-01, 6.01413425e-01,
       5.28632289e-01, 4.13774573e-01, 8.06858415e-01, 5.89664928e-01,
       8.06546537e-01, 9.82917822e-01, 8.24210670e-01, 2.49075082e-01,
       4.39232574e-01, 1.51960352e-02, 9.03179461e-01, 9.66348018e-01,
       5.10973265e-01, 6.04022721e-03, 3.76852591e-01, 5.84550373e-01,
       6.93760212e-01, 8.65664087e-01, 2.35888649e-01, 9.04002128e-01,
       6.80845559e-01, 8.94624109e-01, 2.10626644e-01, 7.81314900e-01,
       2.31678357e-01, 9.51506788e-01, 3.85020217e-01, 4.38578630e-01,
       1.50804082e-01, 1.22219880e-01, 2.90077182e-01, 9.53619022e-01,
       8.04359815e-01, 6.39107080e-01, 3.14638017e-01, 4.52064539e-01,
       1.96384026e-01, 4.46864092e-01, 2.61986570e-01, 7.63359923e-01,
       6.88597136e-01, 4.38825538e-01, 5.83345629e-01, 4.08213125e-01,
       5.94924876e-01, 8.04001227e-01, 9.11973622e-01, 3.75713763e-01,
       8.38537230e-02, 4.81324856e-01, 3.73815018e-01, 9.38727122e-02,
       3.69269589e-01, 6.37065437e-01, 4.60701445e-01, 2.75655960e-01,
       2.87508360e-01, 2.25698699e-01, 9.30524258e-01, 5.21547041e-01,
       1.78849158e-01, 2.08546534e-01, 1.90330571e-01, 4.52364147e-02,
       4.74358031e-01, 8.26789408e-01, 6.18859794e-02, 1.65192087e-01,
       5.57052706e-01, 1.53782733e-01, 5.14883253e-01, 3.39154532e-01,
       3.31567844e-01, 1.03389268e-01, 6.76254587e-01, 4.78594377e-01,
       1.49561683e-01, 7.75253608e-02, 4.09581740e-01, 8.11680914e-01,
       2.63813952e-01, 8.47490364e-02, 3.57585496e-01, 1.88700599e-02,
       7.81707239e-01, 4.13102252e-01, 6.51228630e-01, 9.40323868e-01,
       8.67934799e-01, 1.61058380e-01, 3.38496983e-01, 6.41913948e-01,
       9.01017730e-01, 1.84936644e-01, 7.45544370e-01, 6.24900168e-01,
       2.10083769e-01, 1.89954755e-01, 7.79812554e-01, 6.50832096e-03,
       8.25314857e-02, 6.34004552e-01, 2.55821257e-01, 6.55530203e-01,
       4.48520465e-01, 1.54681421e-01, 1.05802095e-01, 6.19834925e-01,
       7.62717917e-01, 8.23520747e-01, 3.50600322e-01, 7.94401913e-01,
       5.27676586e-01, 6.29549593e-01, 6.76142868e-01, 4.21504825e-01,
       8.33637235e-02, 6.76424884e-01, 5.01584799e-01, 1.12427650e-01,
       7.97895582e-01, 8.55372659e-02, 6.59594583e-01, 5.53953018e-01,
       8.11214183e-01, 8.39042411e-01, 3.90956534e-01, 1.08579965e-01,
       5.61852782e-01, 7.20304420e-02, 5.32412375e-01, 4.96046446e-01,
       2.02449758e-01, 5.33678617e-02, 1.09352958e-01, 2.88542642e-01,
       2.77756215e-01, 3.34273032e-01, 1.70752520e-01, 9.05885278e-01,
       6.80976222e-01, 2.48632144e-01, 2.35045837e-01, 6.07140533e-01,
       3.65916954e-01, 9.26223240e-01, 2.79393490e-01, 8.07588447e-01,
       5.79430079e-01, 7.34439752e-01, 3.85929598e-01, 4.65564352e-01,
       4.31091849e-01, 4.90623046e-01, 4.67177841e-01, 6.87143471e-02,
       7.16223776e-01, 4.47564407e-01, 7.46759384e-01, 7.24565384e-01,
       3.48823137e-01, 8.53628028e-01, 7.77155027e-01, 9.28119905e-01,
       1.09881357e-01, 2.82850001e-01, 5.94746641e-01, 5.39974877e-01,
       2.34337244e-01, 8.45748095e-01, 5.23925594e-01, 2.85050621e-01,
       1.94173413e-01, 5.05402023e-01, 1.60776378e-01, 3.84206411e-01,
       7.39175829e-01, 4.69834550e-01, 8.37022663e-01, 3.28056909e-01,
       6.69982949e-01, 9.02164484e-01, 6.34849256e-01, 4.65874820e-02,
       2.09675194e-01, 2.34695402e-01, 7.85958928e-01, 7.69458177e-01,
       2.06198463e-01, 8.77547279e-01, 4.68770847e-01, 3.27792228e-01,
       7.40366473e-01, 2.16252199e-01, 6.06317679e-01, 3.11198617e-01,
       3.72159510e-01, 9.67042982e-02, 1.72217659e-01, 3.06796022e-01,
       9.74915573e-01, 6.81317165e-01, 4.04611768e-01, 4.20664339e-01,
       7.07124730e-01, 9.86077613e-01, 6.39288540e-01, 3.38103774e-01,
       9.51808789e-01, 7.58865599e-01, 7.08389044e-01, 8.04775929e-01,
       5.41846915e-01, 9.34083709e-01, 2.10111686e-01, 2.15112471e-02,
       9.40248513e-01, 2.17638836e-01, 1.44429137e-01, 9.01940149e-01,
       9.38756953e-01, 5.12065826e-02, 6.03791846e-01, 2.01901940e-01,
       7.89780878e-01, 9.99057199e-01, 6.18008979e-01, 2.13848583e-01,
       3.51922251e-01, 9.63470744e-01, 7.22176122e-01, 1.88198933e-01,
       2.15955854e-01, 6.09265625e-01, 7.59509358e-02, 4.73131039e-01,
       6.79629212e-01, 3.55370216e-01, 1.40417301e-01, 3.32126396e-01,
       7.82796661e-01, 3.17881104e-01, 3.06146490e-01, 2.83526646e-01,
       5.27341947e-01, 8.83925681e-01, 7.95221768e-01, 1.04071316e-01,
       5.31008123e-01, 5.94062838e-01, 4.35452025e-01, 6.40359350e-01,
       3.06610142e-01, 8.66665153e-01, 2.10835994e-01, 5.40662019e-01,
       4.79378623e-01, 8.84410163e-01, 9.65649344e-01, 8.54161553e-01,
       4.58127112e-02, 3.32208798e-01, 4.67331368e-01, 9.05619746e-01,
       9.51745968e-01, 1.61619618e-01, 2.38684524e-01, 1.15258842e-01,
       8.40548763e-01, 8.47272469e-01, 2.12374771e-02, 1.25620896e-01,
       3.77410341e-01, 7.12873366e-01, 8.75055190e-01, 7.38898935e-01,
       1.48123800e-01, 9.12023020e-01, 3.65971253e-01, 7.16599023e-01,
       5.89877098e-01, 9.45442864e-02, 3.47828622e-01, 3.70546839e-01,
       5.73085686e-02, 1.65639384e-01, 2.05183703e-01, 3.27351952e-01,
       9.63532348e-02, 2.64377451e-01, 7.28292793e-02, 5.65536585e-01,
       3.16338393e-01, 9.18959262e-01, 7.59904837e-01, 6.37524647e-01,
       2.04370355e-02, 3.50999144e-01, 6.33786153e-01, 7.91425232e-01,
       6.66309056e-01, 8.88683648e-02, 8.91226336e-01, 8.33125902e-01,
       3.11866743e-01, 7.29249383e-01, 5.28625131e-01, 5.37905512e-01,
       5.17945887e-02, 2.44396249e-01, 3.33525322e-01, 2.57645476e-01,
       6.35392073e-01, 2.93496959e-01, 2.86759109e-01, 1.66208433e-01,
       5.47620093e-01, 1.90779848e-01, 3.34020072e-01, 9.79574059e-01,
       3.79600092e-01, 6.19906077e-01, 4.06756005e-01, 9.18388821e-01,
       6.07664640e-01, 5.36069193e-01, 7.64262587e-01, 9.91038791e-01,
       7.78111920e-01, 5.28174266e-01, 1.19828850e-01, 1.43079108e-01,
       4.25006349e-01, 6.65234616e-01, 8.23896301e-01, 9.38424715e-01,
       9.21500667e-01, 2.23349102e-01, 7.71230465e-02, 2.99449035e-01,
       2.40651289e-02, 1.50105138e-01, 1.90589255e-01, 5.53781294e-01,
       6.51652474e-01, 5.81597780e-01, 3.04336724e-01, 3.05131101e-01,
       1.15260542e-01, 1.51839857e-03, 4.41264833e-01, 7.81476227e-02,
       4.98037150e-01, 6.91440927e-02, 8.40611612e-01, 7.43843430e-01,
       8.63176472e-01, 8.56912279e-01, 7.67716085e-02, 8.42691543e-01,
       8.72313444e-01, 3.03660344e-01, 5.16765661e-02, 8.49748115e-01,
       2.97127653e-02, 3.62081876e-01, 5.37520886e-01, 4.09001132e-01,
       2.08250786e-01, 8.99088287e-01, 5.89155297e-01, 2.68377438e-01,
       9.10358199e-01, 7.94679427e-01, 8.99415315e-01, 3.46103317e-01,
       9.89198957e-01, 9.06792789e-01, 8.62259636e-01, 8.92904079e-01,
       8.40989707e-01, 2.86060723e-01, 2.69328314e-01, 7.55723194e-02,
       1.79323633e-01, 5.99841503e-01, 7.01357592e-01, 4.79857724e-01,
       8.46323228e-01, 8.62047825e-01, 5.71510680e-01, 1.21622404e-02,
       2.21531963e-01, 6.07884051e-01, 7.42225580e-01, 7.56329347e-01,
       6.04503926e-01, 4.78140623e-01, 8.68489331e-01, 5.79751264e-01,
       5.60526824e-01, 9.47627179e-01, 3.91357196e-01, 4.36444342e-01,
       4.11613346e-01, 1.52075943e-01, 8.31749940e-01, 8.62018812e-01,
       5.89860591e-01, 1.99655807e-01, 1.43083249e-01, 7.26872923e-01,
       3.52699522e-01, 1.36672364e-01, 1.74481865e-01, 6.01741146e-01,
       5.48585005e-01, 9.44626735e-01, 1.26308439e-01, 2.37281049e-01,
       9.99104995e-01, 7.48928247e-01, 2.62128783e-03, 8.78188785e-01,
       8.96840136e-02, 6.59410641e-01, 3.26650395e-01, 4.18213863e-02,
       8.15033673e-01, 4.00456270e-01, 6.34677273e-02, 2.55820524e-01,
       4.21587944e-01, 8.66160253e-01, 5.41821438e-01, 1.28219810e-01,
       6.51085008e-02, 9.65210908e-02, 7.51567100e-01, 3.14875917e-01,
       4.31252735e-01, 7.70178846e-02, 3.17881941e-02, 9.80967896e-01,
       7.21411020e-02, 4.05070427e-01, 7.27835182e-02, 9.60013947e-01,
       5.90131618e-01, 9.70647311e-01, 4.44772509e-03, 3.37131363e-01,
       9.31826438e-01, 3.32728619e-01, 3.45204446e-01, 3.38662580e-01,
       9.94155632e-01, 6.24675494e-01, 1.93659178e-01, 8.67226810e-02,
       7.14413951e-02, 5.07480866e-01, 5.02954723e-01, 8.39472361e-01,
       7.69685621e-02, 2.71590210e-01, 6.67631506e-01, 7.95555890e-01,
       5.59070036e-01, 5.16187038e-02, 1.84233938e-01, 7.82977135e-01,
       3.06588828e-01, 2.90354053e-02, 1.34311644e-03, 5.55365896e-01,
       3.09968614e-01, 6.73909669e-01, 8.30489577e-01, 6.37997402e-01,
       8.17559411e-01, 8.81276278e-01, 9.70914079e-01, 8.39999240e-01,
       5.72589904e-01, 4.13084794e-02, 9.93294627e-01, 4.97358754e-01,
       3.88261324e-02, 1.82670822e-01, 4.95044293e-01, 7.51665833e-01,
       8.12425800e-01, 3.65662611e-01, 4.99761054e-01, 1.89674011e-01,
       5.00954344e-01, 9.76401626e-01, 9.18963398e-02, 3.68805004e-01,
       1.69498078e-01, 7.76099036e-01, 5.07465470e-01, 1.23163041e-02,
       4.59458561e-01, 5.52558488e-02, 3.94774169e-01, 8.34814864e-01,
       6.59236846e-01, 7.11457791e-01, 1.90842247e-02, 6.82430683e-01,
       3.22180518e-01, 4.50691044e-01, 8.91250179e-01, 8.27205510e-01,
       9.52834887e-01, 9.71322214e-01, 5.53338650e-02, 4.47149390e-01,
       6.95380776e-01, 7.25711993e-01, 6.59886395e-01, 8.35333501e-02,
       4.09335138e-01, 1.76815801e-02, 7.30821656e-01, 1.27936468e-01,
       6.41753594e-01, 6.57627978e-01, 4.59447181e-01, 5.43176987e-01,
       8.66166940e-01, 7.63550215e-01, 3.13354633e-01, 6.11658277e-01,
       9.89155565e-01, 4.99151858e-01, 6.36284286e-01, 7.13107713e-01,
       9.98292640e-01, 8.56874207e-01, 9.60604720e-03, 4.22064716e-01,
       5.75547386e-01, 6.05666593e-01, 6.69335649e-01, 7.32263261e-01,
       3.60877351e-01, 4.69899001e-01, 1.25444655e-01, 3.64976510e-01,
       7.92764929e-03, 8.01047680e-01, 2.66178462e-01, 2.35786715e-01,
       3.76099321e-01, 9.08831427e-01, 4.83840149e-01, 3.80962342e-02,
       6.84620711e-01, 1.33217223e-01, 5.74889977e-01, 3.12011696e-01,
       6.94803660e-01, 7.65097031e-01, 9.46254576e-01, 8.95881805e-01,
       4.36884339e-01, 9.42338255e-01, 8.46953767e-01, 3.28512734e-01,
       1.74541887e-01, 1.67644245e-01, 7.76786202e-01, 3.34210145e-01,
       1.18126332e-01, 1.10625807e-01, 8.61600290e-01, 6.48545666e-01,
       3.90035135e-01, 7.44978423e-01, 1.10116212e-01, 7.44106819e-01,
       5.32061192e-01, 9.97902745e-01, 2.36438775e-01, 2.67116514e-01,
       1.14973401e-01, 5.04300470e-01, 2.44745791e-01, 9.64753898e-01,
       5.69544159e-01, 1.20145206e-01, 4.65915198e-02, 8.53265180e-01,
       5.61961840e-01, 5.94154372e-01, 2.39899372e-01, 3.00222584e-01,
       5.87178742e-01, 6.76901833e-02, 2.29230643e-01, 9.71356457e-01,
       5.77081596e-01, 5.81685271e-01, 7.70657203e-01, 4.45618679e-02,
       9.57493192e-01, 1.55701613e-01, 4.63980590e-01, 1.13353784e-01,
       7.51520969e-01, 4.15484603e-01, 4.23981238e-01, 7.75503521e-01,
       2.30149893e-01, 8.48349168e-02, 2.73220890e-01, 4.42918588e-01,
       4.93426481e-01, 9.68901531e-01, 1.65058121e-01, 1.76927813e-01,
       5.35904247e-01, 6.35441178e-01, 8.17906455e-01, 9.58542240e-01,
       8.01029817e-01, 2.55993809e-02, 7.42762706e-01, 4.52038146e-01,
       6.97314145e-01, 8.33373740e-01, 4.16371033e-01, 4.43404577e-01,
       6.74510674e-01, 2.71843942e-02, 7.80369457e-01, 1.63971056e-01,
       1.40383478e-01, 3.04192393e-01, 1.82529447e-01, 9.28424318e-01,
       7.51106775e-01, 8.85801945e-01, 6.53420673e-01, 5.90356663e-01,
       5.18344672e-01, 1.13390731e-01, 1.18430795e-01, 4.72085287e-01,
       4.79052059e-01, 7.37945538e-01, 9.00336796e-01, 7.69053802e-01,
       8.98717063e-01, 4.23488063e-01, 3.34600919e-02, 3.23961850e-01,
       8.78327659e-01, 7.09110089e-01, 8.57663915e-01, 6.72515275e-01,
       5.38158438e-01, 1.35384173e-01, 5.32121692e-01, 2.43747446e-01,
       3.14283415e-01, 9.04379009e-01, 1.32349134e-01, 9.21916001e-01,
       9.84749073e-01, 6.20491077e-01, 3.81996822e-01, 7.89473808e-02,
       1.90724148e-01, 4.92382356e-01, 3.18046107e-01, 9.50578978e-01,
       3.68372465e-01, 8.00339571e-01, 2.24805242e-01, 6.41099223e-02,
       4.39144487e-01, 4.56585034e-01, 9.44635670e-01, 4.97734619e-01,
       8.60846408e-02, 1.86827852e-01, 3.01800652e-01, 1.50713632e-01,
       1.41016699e-01, 6.35649669e-01, 6.06189671e-01, 5.34974515e-01,
       7.23959072e-01, 9.89736434e-01, 4.96243688e-01, 3.14287380e-01,
       1.50977052e-01, 3.06134402e-01, 3.85559114e-01, 2.68222029e-03,
       9.72646651e-03, 5.20317502e-01, 1.99551415e-01, 6.24468170e-01,
       3.79974128e-01, 6.26600491e-01, 9.55359487e-01, 6.78278956e-01,
       4.62714429e-01, 2.70981236e-01, 8.77900471e-01, 3.28079924e-01,
       2.81556586e-01, 6.84194615e-01, 9.32554564e-01, 6.34749957e-01,
       6.63125596e-01, 1.83916475e-01, 5.33068590e-01, 8.23524219e-01,
       7.30009512e-01, 7.77383336e-01, 9.71089604e-01, 2.16833264e-01,
       1.52230075e-01, 5.78269070e-01, 9.00557377e-01, 4.61394527e-02,
       5.11063374e-01, 1.94977514e-01, 3.35288751e-01, 1.31249615e-02,
       6.92292635e-01, 9.97707004e-01, 2.50885812e-01, 9.72237228e-01,
       9.22539088e-02, 9.58684464e-01, 4.35502914e-01, 1.74829343e-04,
       2.93007066e-01, 6.76113009e-01, 6.35156920e-01, 6.02791195e-01,
       3.92328436e-02, 1.79497560e-01, 6.98283466e-02, 7.12667799e-01,
       1.97966949e-01, 5.06384655e-01, 3.39780604e-01, 6.28899525e-01,
       7.27392791e-01, 6.94118888e-01, 9.52951209e-01, 5.88528181e-01,
       8.39815684e-01, 5.11287446e-01, 6.97131117e-01, 2.05030939e-01,
       2.87420800e-01, 6.30308191e-01, 7.19616534e-01, 2.28020519e-01,
       4.06323436e-01, 9.61360702e-01, 2.17086687e-01, 7.27733475e-01,
       9.99862498e-01, 1.12143360e-02, 1.21421172e-02, 3.70601583e-01,
       2.88060765e-01, 8.93751145e-01, 7.50776334e-01, 4.59294830e-01,
       4.62888945e-01, 5.72037151e-01, 6.47231396e-01, 5.69444815e-01,
       3.94410632e-01, 1.43764513e-01, 9.54624973e-01, 4.65186964e-01,
       5.59659042e-01, 3.93229057e-02, 1.36812141e-01, 8.08102461e-01,
       3.33926414e-01, 6.67503980e-01, 9.54385601e-01, 5.07298589e-01,
       9.60239657e-01, 5.98312561e-01, 7.62850356e-02, 2.02380570e-01,
       1.27448703e-01, 2.36360012e-01, 4.95027862e-01, 3.95855996e-01,
       4.04092867e-01, 3.45339050e-01, 8.25601939e-02, 9.15420529e-01,
       6.36127899e-01, 6.86454949e-01, 8.70008446e-01, 4.24015747e-01,
       3.87546604e-01, 5.18667876e-01, 5.83165681e-01, 8.00861999e-03,
       3.61586033e-01, 8.35409427e-01, 1.55542941e-02, 8.63110152e-01,
       8.62954722e-01, 2.55537522e-01, 8.05771547e-01, 5.32924635e-01,
       3.66833055e-01, 5.56023174e-01, 3.46253137e-01, 5.83119790e-01,
       9.06558847e-01, 5.75237152e-01, 6.68955490e-01, 7.57360867e-01])

In [111]: c1
Out[111]:
array([0.73227848, 0.84628558, 0.9491676 , 0.9839177 , 0.98387526,
       0.92208698, 0.37638418, 0.68431345, 0.70938188, 0.72098754,
       0.6511698 , 0.07244939, 0.41324756, 0.4753278 , 0.80723288,
       0.74940138, 0.7391349 , 0.38953831, 0.86503588, 0.34658923,
       0.52127208, 0.85521512, 0.83879762, 0.13079891, 0.71057376,
       0.78065895, 0.28611175, 0.96411493, 0.78873842, 0.14545966,
       0.31083656, 0.25536424, 0.59025228, 0.0589371 , 0.919906  ,
       0.171898  , 0.37731113, 0.88585142, 0.24370594, 0.14700917,
       0.64561878, 0.67386541, 0.43709641, 0.08866229, 0.19227369,
       0.69803688, 0.11940252, 0.02459508, 0.79274109, 0.34243759,
       0.64016618, 0.52664677, 0.93883369, 0.45255053, 0.8836356 ,
       0.08596111, 0.29151095, 0.48234122, 0.62161281, 0.3702236 ,
       0.32147044, 0.47294479, 0.91894358, 0.89948555, 0.42590549,
       0.56489926, 0.27792418, 0.80713691, 0.88228677, 0.34900388,
       0.73762951, 0.61580259, 0.90621011, 0.51666388, 0.52469583,
       0.13280528, 0.85816743, 0.06053099, 0.93804429, 0.13983039,
       0.72828181, 0.83089184, 0.71530833, 0.18288805, 0.37424935,
       0.39051978, 0.01084574, 0.02336455, 0.16661534, 0.52361769,
       0.432592  , 0.2562196 , 0.12106257, 0.77162541, 0.15176461,
       0.54668081, 0.10266978, 0.12258514, 0.88546744, 0.80237617,
       0.11664253, 0.81155103, 0.2027491 , 0.43263436, 0.94638191,
       0.16184329, 0.11458795, 0.63161417, 0.43550418, 0.90026593,
       0.00455655, 0.65315832, 0.4869501 , 0.11967479, 0.49356804,
       0.29119594, 0.17816304, 0.68159928, 0.38972355, 0.67454483,
       0.74297487, 0.16288677, 0.13083311, 0.49597213, 0.38668322,
       0.2864029 , 0.99927207, 0.31362454, 0.89530444, 0.91664527,
       0.08325377, 0.57023316, 0.4748959 , 0.2526294 , 0.90313535,
       0.92371286, 0.04419738, 0.98512501, 0.67712206, 0.30293539,
       0.8829537 , 0.38193512, 0.79869619, 0.95568902, 0.56808403,
       0.42812472, 0.00440811, 0.688515  , 0.88146774, 0.4460696 ,
       0.33149489, 0.1367405 , 0.77189962, 0.12425701, 0.15898457,
       0.9225801 , 0.55893306, 0.40738268, 0.98470019, 0.44915509,
       0.07826918, 0.46457024, 0.78905805, 0.05014444, 0.73982882,
       0.18738424, 0.14692116, 0.37920064, 0.96356119, 0.55036203,
       0.32603751, 0.33448502, 0.38384391, 0.10793532, 0.83715867,
       0.97745158, 0.52184093, 0.53834385, 0.23165362, 0.54548292,
       0.60482332, 0.49411882, 0.16563381, 0.81178036, 0.21555374,
       0.36280188, 0.70510805, 0.12323914, 0.6337891 , 0.25430592,
       0.0323071 , 0.83825652, 0.28211371, 0.93477916, 0.23049953,
       0.56028403, 0.48462069, 0.17370737, 0.42044198, 0.90732967,
       0.88298796, 0.07014782, 0.29456812, 0.52141104, 0.77763618,
       0.90323129, 0.51313537, 0.83231638, 0.289769  , 0.49760569,
       0.64831124, 0.8837444 , 0.3233253 , 0.3758732 , 0.23504337,
       0.83428845, 0.86725367, 0.47727543, 0.0031995 , 0.11985469,
       0.03969574, 0.72374193, 0.30499855, 0.72039316, 0.93494222,
       0.17338937, 0.47043639, 0.80592164, 0.44725307, 0.1518202 ,
       0.34480312, 0.87675637, 0.9569728 , 0.32799824, 0.96833484,
       0.68084553, 0.13181899, 0.89983968, 0.17920837, 0.25466037,
       0.66934483, 0.71086682, 0.0270076 , 0.63261395, 0.18725067,
       0.01383728, 0.13890345, 0.37522955, 0.82024562, 0.37745565,
       0.45834111, 0.98670377, 0.74867278, 0.50555501, 0.27617917,
       0.03830975, 0.40424303, 0.11252224, 0.6826479 , 0.15618463,
       0.78993282, 0.64194115, 0.23894543, 0.27482714, 0.17429706,
       0.17881047, 0.85001377, 0.86903455, 0.01175108, 0.25919166,
       0.44799797, 0.91459333, 0.39021606, 0.7073385 , 0.34549889,
       0.3327432 , 0.49352229, 0.93314159, 0.83367096, 0.40573388,
       0.4575788 , 0.59498458, 0.31854751, 0.95355333, 0.27361498,
       0.33940875, 0.64133967, 0.56371506, 0.3191438 , 0.25457379,
       0.55850597, 0.87156468, 0.97027134, 0.72487613, 0.28232002,
       0.59999086, 0.17274608, 0.36348472, 0.37582545, 0.4644731 ,
       0.99423698, 0.62677933, 0.09612196, 0.46264264, 0.37532759,
       0.25672813, 0.66580477, 0.58482513, 0.36354911, 0.16135936,
       0.03325358, 0.79442834, 0.34616169, 0.63711078, 0.6718764 ,
       0.45170392, 0.44398631, 0.73554957, 0.71646053, 0.30329535,
       0.96425614, 0.93011073, 0.32150449, 0.30136132, 0.9947986 ,
       0.92117255, 0.46526375, 0.13844424, 0.75936301, 0.91323167,
       0.3326172 , 0.58883712, 0.39089327, 0.6495507 , 0.60982801,
       0.62239595, 0.71316765, 0.29216701, 0.46741693, 0.73793017,
       0.49110889, 0.71073933, 0.73437821, 0.91295033, 0.66206501,
       0.89278868, 0.76807948, 0.04950697, 0.17890757, 0.04133039,
       0.38731229, 0.51677   , 0.60603694, 0.67232892, 0.79734312,
       0.07080787, 0.92833834, 0.88881704, 0.91877593, 0.1513049 ,
       0.74579611, 0.37220998, 0.64258053, 0.75861408, 0.79170649,
       0.22291543, 0.07986525, 0.11473154, 0.27593028, 0.44929657,
       0.19850503, 0.63369282, 0.24617754, 0.06938697, 0.68381784,
       0.6382576 , 0.94695388, 0.25292969, 0.18445244, 0.94570559,
       0.94527541, 0.29758889, 0.36944643, 0.82430759, 0.01979212,
       0.32532338, 0.31115306, 0.19338634, 0.4710763 , 0.38858211,
       0.12184241, 0.76120678, 0.92577476, 0.90058526, 0.81893637,
       0.7952555 , 0.4554786 , 0.06521289, 0.92236257, 0.83964137,
       0.07150565, 0.65044957, 0.70960609, 0.95649177, 0.00812921,
       0.78360557, 0.40940455, 0.39743157, 0.56266572, 0.11088959,
       0.33769531, 0.05281531, 0.3385693 , 0.8599729 , 0.82287101,
       0.08809121, 0.69588616, 0.23049337, 0.90673331, 0.20088336,
       0.44721426, 0.38354456, 0.74741655, 0.90830229, 0.36224313,
       0.88731598, 0.44152109, 0.32517455, 0.86634746, 0.9638501 ,
       0.05351354, 0.49258971, 0.6303532 , 0.02307773, 0.39799965,
       0.67041542, 0.29583261, 0.05596829, 0.12463535, 0.99097485,
       0.3565848 , 0.84774269, 0.1722667 , 0.4964141 , 0.17018629,
       0.63979809, 0.0657497 , 0.53495589, 0.25931042, 0.86746906,
       0.74613514, 0.24580334, 0.93898906, 0.46039884, 0.12627695,
       0.72520815, 0.99487679, 0.18668506, 0.03082932, 0.20256784,
       0.12351505, 0.34312925, 0.28692446, 0.48372779, 0.39821053,
       0.92751004, 0.21124326, 0.3900429 , 0.04729148, 0.27259671,
       0.40902747, 0.02713548, 0.62395001, 0.20213385, 0.65352373,
       0.32227735, 0.15172757, 0.06948839, 0.53528854, 0.479101  ,
       0.71365227, 0.1798682 , 0.60385551, 0.56194671, 0.72102485,
       0.91756206, 0.15936947, 0.21723556, 0.75835932, 0.67623564,
       0.46674517, 0.14783298, 0.92093341, 0.46628122, 0.74248884,
       0.43954631, 0.18327377, 0.43774557, 0.64548969, 0.23949104,
       0.38347935, 0.73842971, 0.23694757, 0.78380704, 0.4485083 ,
       0.27388774, 0.15075242, 0.63478098, 0.4741792 , 0.37218035,
       0.10245304, 0.70633989, 0.77483424, 0.27300212, 0.43452594,
       0.42123159, 0.01144841, 0.13364886, 0.6777619 , 0.56696497,
       0.76222083, 0.33275719, 0.61176286, 0.82587633, 0.45336319,
       0.61429891, 0.30651318, 0.39612552, 0.38868031, 0.00411591,
       0.4694224 , 0.26298978, 0.88186432, 0.3886507 , 0.87162422,
       0.87087362, 0.25881446, 0.27414556, 0.35685222, 0.81140474,
       0.01084864, 0.75679816, 0.20645695, 0.80819798, 0.00335877,
       0.72005871, 0.23036458, 0.29283537, 0.82256486, 0.28764647,
       0.69217094, 0.97325145, 0.4464253 , 0.53491798, 0.76669432,
       0.70621938, 0.46639015, 0.54850268, 0.71636468, 0.19336154,
       0.44372761, 0.29453861, 0.78108131, 0.20726741, 0.23505479,
       0.88012558, 0.93412106, 0.14660375, 0.56000836, 0.07357284,
       0.39833027, 0.815418  , 0.93044702, 0.67388497, 0.61184458,
       0.37657913, 0.01880828, 0.21561711, 0.7198687 , 0.68982813,
       0.57730075, 0.37213681, 0.68631208, 0.23343963, 0.29893134,
       0.96659274, 0.3759674 , 0.44596507, 0.46723849, 0.2967495 ,
       0.0356404 , 0.20186614, 0.14501067, 0.80493377, 0.04739285,
       0.44709638, 0.81467288, 0.20157312, 0.67916236, 0.1683645 ,
       0.95205102, 0.75073785, 0.48113561, 0.68562359, 0.64183338,
       0.64166163, 0.95500143, 0.77578626, 0.79899085, 0.66936774,
       0.56544408, 0.71530559, 0.47993206, 0.98555523, 0.55219419,
       0.46956009, 0.30974048, 0.64411896, 0.66365773, 0.42551679,
       0.9572437 , 0.36533546, 0.3140293 , 0.07331271, 0.3412799 ,
       0.17982315, 0.3823259 , 0.9018491 , 0.23638628, 0.75374783,
       0.68335205, 0.88736948, 0.150151  , 0.79141239, 0.3332613 ,
       0.87969857, 0.38639112, 0.86339867, 0.03042429, 0.61677091,
       0.04274698, 0.45169772, 0.41153271, 0.78446246, 0.70358136,
       0.2568642 , 0.4259949 , 0.38791508, 0.96240371, 0.21161905,
       0.67964376, 0.83407206, 0.53783559, 0.39961896, 0.9322799 ,
       0.41559211, 0.07798195, 0.28009782, 0.09160562, 0.45365826,
       0.14253821, 0.61868346, 0.3326137 , 0.4732813 , 0.15614663,
       0.23912696, 0.02550918, 0.68156781, 0.01530722, 0.1383657 ,
       0.46737004, 0.96006008, 0.77199005, 0.89862255, 0.13500135,
       0.95004691, 0.305196  , 0.30417207, 0.46218659, 0.48081106,
       0.42121568, 0.64252573, 0.204886  , 0.41147522, 0.33546406,
       0.29348868, 0.38093723, 0.43990155, 0.84012048, 0.65249745,
       0.31232043, 0.7071217 , 0.97750234, 0.31885559, 0.05779745,
       0.87168362, 0.60772378, 0.93691508, 0.59183607, 0.90432106,
       0.01464808, 0.79842593, 0.30443505, 0.43336378, 0.37497976,
       0.77149774, 0.22256757, 0.54263712, 0.96355704, 0.44108975,
       0.3764845 , 0.1463693 , 0.54709128, 0.57737524, 0.48700034,
       0.10685906, 0.39036754, 0.85589031, 0.68069914, 0.32649695,
       0.38025695, 0.2368185 , 0.06808442, 0.44869238, 0.35227401,
       0.66341929, 0.52746501, 0.75873622, 0.2018314 , 0.52466308,
       0.01240801, 0.38821405, 0.01575764, 0.71424427, 0.30639123,
       0.51125526, 0.55233919, 0.45594076, 0.24717291, 0.45021408,
       0.00854745, 0.71463436, 0.18791523, 0.12684076, 0.68823009,
       0.60771622, 0.58443597, 0.24569295, 0.78455392, 0.04361446,
       0.28499033, 0.30050994, 0.36717293, 0.63637677, 0.26481306,
       0.08289588, 0.74347768, 0.36162387, 0.5940574 , 0.38740639,
       0.74444848, 0.58305706, 0.82682919, 0.72032585, 0.50075311,
       0.32689145, 0.23752004, 0.78758529, 0.23273548, 0.35115036,
       0.80020088, 0.441566  , 0.88222486, 0.74548197, 0.40118841,
       0.33668397, 0.14010961, 0.28203095, 0.16549203, 0.51141479,
       0.80719964, 0.56070079, 0.05087049, 0.18189688, 0.24254725,
       0.97733334, 0.34701442, 0.89770283, 0.86806898, 0.74553861,
       0.23243597, 0.72300522, 0.16393264, 0.25415354, 0.81269847,
       0.49024798, 0.77972611, 0.27078557, 0.61750384, 0.16454549,
       0.28287796, 0.18296237, 0.75930337, 0.33340004, 0.33413717,
       0.47251232, 0.69411007, 0.20750655, 0.14775845, 0.41559793,
       0.02586886, 0.21685791, 0.44214911, 0.99907747, 0.68151559,
       0.14843048, 0.28765833, 0.19373526, 0.33213598, 0.78658742,
       0.36742182, 0.80104906, 0.71552519, 0.26397351, 0.22366892,
       0.2264183 , 0.09039228, 0.365317  , 0.97448522, 0.26896081,
       0.48254413, 0.03992917, 0.82011014, 0.98240844, 0.72641348,
       0.59109038, 0.92386183, 0.04541634, 0.54893098, 0.43641446,
       0.17810555, 0.20520853, 0.47655021, 0.74188405, 0.30922847,
       0.54985697, 0.38436185, 0.75723233, 0.25798919, 0.01642028,
       0.83707956, 0.73666251, 0.04575066, 0.1447466 , 0.22490606,
       0.89719248, 0.01551994, 0.91411018, 0.76887932, 0.29616002,
       0.36486124, 0.85327314, 0.57354236, 0.00919008, 0.14698437,
       0.90865969, 0.28753893, 0.52187186, 0.83255758, 0.71222336,
       0.23115149, 0.16219591, 0.30963376, 0.53029361, 0.30918692,
       0.02518364, 0.52998493, 0.87512707, 0.69157178, 0.79287383,
       0.95362249, 0.29373239, 0.38237881, 0.82792091, 0.60689343,
       0.70175092, 0.42813454, 0.70269246, 0.6677462 , 0.32677146,
       0.98599386, 0.56581672, 0.95958843, 0.39388571, 0.08441033,
       0.01798921, 0.93825923, 0.41445485, 0.57245662, 0.7959508 ,
       0.51610537, 0.59137431, 0.97884015, 0.53309316, 0.01036211,
       0.66126564, 0.55715639, 0.80591719, 0.66276982, 0.7583793 ,
       0.74457475, 0.62561107, 0.63276046, 0.93749105, 0.64580089,
       0.17462764, 0.19321765, 0.56037633, 0.86955128, 0.61534535,
       0.31450662, 0.65155685, 0.06241539, 0.15873187, 0.6376319 ,
       0.05944743, 0.0687455 , 0.51096487, 0.8191993 , 0.91257502,
       0.8898399 , 0.42771583, 0.48062481, 0.66550251, 0.95062094,
       0.86079289, 0.91065718, 0.22025339, 0.91984909, 0.3524679 ,
       0.32852563, 0.59602119, 0.01925561, 0.60274909, 0.2261919 ,
       0.60264987, 0.80084118, 0.13108557, 0.17557271, 0.34441155,
       0.33322646, 0.70692286, 0.28574   , 0.81948028, 0.96089302,
       0.24779213, 0.8050374 , 0.59509881, 0.34861963, 0.7306941 ,
       0.14338745, 0.15385553, 0.15874255, 0.80305524, 0.7238844 ,
       0.0095137 , 0.05376396, 0.8701107 , 0.7855559 , 0.99974695,
       0.91113445, 0.18477802, 0.35635489, 0.55316885, 0.52225988,
       0.91786633, 0.25542314, 0.76827854, 0.05134146, 0.85553377,
       0.27723847, 0.51109395, 0.91582429, 0.19276017, 0.31306795,
       0.93615272, 0.912031  , 0.47208413, 0.05086331, 0.12908065,
       0.84979798, 0.76597619, 0.89382615, 0.63103066, 0.4398756 ,
       0.44366608, 0.50240373, 0.91135473, 0.70583672, 0.57980448])

In [112]: c == c1
Out[112]:
array([False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False])

In [113]: np.random.seed(0)

In [114]: np.random.random(10)
Out[114]:
array([0.5488135 , 0.71518937, 0.60276338, 0.54488318, 0.4236548 ,
       0.64589411, 0.43758721, 0.891773  , 0.96366276, 0.38344152])

In [115]: np.random.seed(0)

In [116]: np.random.random(10)
Out[116]:
array([0.5488135 , 0.71518937, 0.60276338, 0.54488318, 0.4236548 ,
       0.64589411, 0.43758721, 0.891773  , 0.96366276, 0.38344152])

In [117]: np.random.random(10)
Out[117]:
array([0.79172504, 0.52889492, 0.56804456, 0.92559664, 0.07103606,
       0.0871293 , 0.0202184 , 0.83261985, 0.77815675, 0.87001215])

In [118]: d = np.random.randint(0, 10, 1000)

In [119]: d
Out[119]:
array([2, 3, 8, 1, 3, 3, 3, 7, 0, 1, 9, 9, 0, 4, 7, 3, 2, 7, 2, 0, 0, 4,
       5, 5, 6, 8, 4, 1, 4, 9, 8, 1, 1, 7, 9, 9, 3, 6, 7, 2, 0, 3, 5, 9,
       4, 4, 6, 4, 4, 3, 4, 4, 8, 4, 3, 7, 5, 5, 0, 1, 5, 9, 3, 0, 5, 0,
       1, 2, 4, 2, 0, 3, 2, 0, 7, 5, 9, 0, 2, 7, 2, 9, 2, 3, 3, 2, 3, 4,
       1, 2, 9, 1, 4, 6, 8, 2, 3, 0, 0, 6, 0, 6, 3, 3, 8, 8, 8, 2, 3, 2,
       0, 8, 8, 3, 8, 2, 8, 4, 3, 0, 4, 3, 6, 9, 8, 0, 8, 5, 9, 0, 9, 6,
       5, 3, 1, 8, 0, 4, 9, 6, 5, 7, 8, 8, 9, 2, 8, 6, 6, 9, 1, 6, 8, 8,
       3, 2, 3, 6, 3, 6, 5, 7, 0, 8, 4, 6, 5, 8, 2, 3, 9, 7, 5, 3, 4, 5,
       3, 3, 7, 9, 9, 9, 7, 3, 2, 3, 9, 7, 7, 5, 1, 2, 2, 8, 1, 5, 8, 4,
       0, 2, 5, 5, 0, 8, 1, 1, 0, 3, 8, 8, 4, 4, 0, 9, 3, 7, 3, 2, 1, 1,
       2, 1, 4, 2, 5, 5, 5, 2, 5, 7, 7, 6, 1, 6, 7, 2, 3, 1, 9, 5, 9, 9,
       2, 0, 9, 1, 9, 0, 6, 0, 4, 8, 4, 3, 3, 8, 8, 7, 0, 3, 8, 7, 7, 1,
       8, 4, 7, 0, 4, 9, 0, 6, 4, 2, 4, 6, 3, 3, 7, 8, 5, 0, 8, 5, 4, 7,
       4, 1, 3, 3, 9, 2, 5, 2, 3, 5, 7, 2, 7, 1, 6, 5, 0, 0, 3, 1, 9, 9,
       6, 6, 7, 8, 8, 7, 0, 8, 6, 8, 9, 8, 3, 6, 1, 7, 4, 9, 2, 0, 8, 2,
       7, 8, 4, 4, 1, 7, 6, 9, 4, 1, 5, 9, 7, 1, 3, 5, 7, 3, 6, 6, 7, 9,
       1, 9, 6, 0, 3, 8, 4, 1, 4, 5, 0, 3, 1, 4, 4, 4, 0, 0, 8, 4, 6, 9,
       3, 3, 2, 1, 2, 1, 3, 4, 1, 1, 0, 7, 8, 4, 3, 5, 6, 3, 2, 9, 8, 1,
       4, 0, 8, 3, 9, 5, 5, 1, 7, 8, 6, 4, 7, 3, 5, 3, 6, 4, 7, 3, 0, 5,
       9, 3, 7, 5, 5, 8, 0, 8, 3, 6, 9, 3, 2, 7, 0, 3, 0, 3, 6, 1, 9, 2,
       9, 4, 9, 1, 3, 2, 4, 9, 7, 4, 9, 4, 1, 2, 7, 2, 3, 9, 7, 6, 6, 2,
       3, 6, 0, 8, 0, 7, 6, 5, 9, 6, 5, 2, 7, 1, 9, 2, 2, 5, 6, 4, 2, 2,
       1, 0, 9, 0, 2, 8, 3, 0, 8, 8, 1, 0, 5, 8, 2, 3, 5, 3, 8, 6, 4, 6,
       3, 6, 2, 6, 5, 5, 9, 4, 6, 5, 1, 3, 3, 8, 9, 5, 5, 6, 0, 9, 7, 5,
       1, 5, 6, 6, 8, 7, 5, 3, 2, 9, 9, 3, 2, 5, 4, 1, 5, 8, 3, 5, 8, 4,
       1, 7, 8, 1, 2, 1, 1, 7, 5, 0, 4, 1, 1, 6, 6, 0, 2, 3, 7, 9, 2, 4,
       9, 0, 6, 9, 2, 4, 7, 3, 0, 5, 4, 0, 2, 3, 1, 7, 1, 3, 4, 1, 7, 4,
       0, 2, 7, 4, 0, 2, 6, 9, 2, 4, 9, 9, 5, 4, 4, 9, 8, 1, 5, 7, 0, 1,
       3, 9, 2, 8, 2, 4, 8, 2, 9, 8, 7, 8, 2, 3, 3, 6, 0, 3, 6, 3, 9, 6,
       3, 2, 2, 2, 6, 4, 6, 0, 4, 9, 2, 1, 6, 1, 7, 5, 6, 1, 6, 6, 6, 6,
       2, 5, 2, 2, 3, 2, 9, 3, 8, 5, 4, 5, 1, 5, 8, 2, 9, 9, 5, 6, 4, 0,
       8, 5, 5, 5, 1, 0, 0, 0, 0, 0, 7, 6, 3, 5, 4, 3, 4, 5, 1, 3, 6, 7,
       4, 0, 0, 7, 3, 3, 0, 0, 9, 4, 4, 5, 8, 8, 0, 1, 5, 9, 9, 6, 1, 4,
       0, 4, 7, 7, 7, 6, 2, 6, 0, 2, 7, 7, 2, 6, 1, 3, 7, 0, 5, 4, 5, 5,
       3, 8, 0, 1, 5, 4, 1, 5, 0, 6, 8, 8, 6, 3, 4, 4, 3, 6, 5, 9, 8, 1,
       3, 8, 1, 5, 8, 0, 3, 7, 1, 7, 8, 0, 7, 5, 9, 9, 6, 8, 7, 5, 9, 1,
       0, 0, 5, 6, 3, 6, 1, 7, 7, 0, 7, 6, 0, 4, 2, 7, 5, 2, 8, 5, 6, 6,
       4, 1, 5, 4, 5, 5, 6, 3, 8, 1, 4, 2, 9, 7, 4, 1, 8, 2, 3, 3, 4, 1,
       6, 2, 5, 4, 9, 1, 5, 9, 4, 5, 7, 4, 4, 2, 2, 1, 3, 0, 1, 9, 1, 6,
       9, 8, 6, 3, 0, 7, 3, 2, 5, 9, 7, 3, 4, 7, 6, 7, 3, 6, 9, 3, 7, 1,
       3, 7, 8, 8, 4, 5, 3, 6, 9, 6, 2, 9, 3, 5, 7, 9, 0, 7, 1, 2, 5, 0,
       5, 8, 9, 8, 2, 5, 3, 1, 7, 3, 8, 5, 5, 1, 9, 7, 2, 1, 0, 1, 0, 1,
       1, 6, 8, 8, 3, 2, 0, 7, 4, 6, 0, 5, 3, 3, 9, 4, 9, 0, 6, 5, 3, 0,
       0, 1, 2, 0, 2, 2, 9, 6, 7, 8, 9, 8, 2, 4, 7, 7, 5, 7, 2, 4, 1, 1,
       1, 7, 9, 0, 9, 0, 2, 1, 4, 6, 0, 6, 6, 2, 8, 6, 6, 5, 2, 5, 0, 3,
       9, 9, 7, 0, 4, 1, 3, 5, 7, 6])

In [120]: c = np.random.random(1000)

In [121]: f, ax = plt.subplots()

In [122]: ax.hist(c, bins=30)
Out[122]:
(array([31., 37., 25., 42., 32., 36., 30., 26., 36., 40., 33., 30., 37.,
        21., 36., 33., 29., 23., 26., 30., 25., 42., 27., 46., 42., 31.,
        38., 37., 40., 39.]),
 array([3.67343751e-04, 3.36820516e-02, 6.69967594e-02, 1.00311467e-01,
        1.33626175e-01, 1.66940883e-01, 2.00255591e-01, 2.33570298e-01,
        2.66885006e-01, 3.00199714e-01, 3.33514422e-01, 3.66829130e-01,
        4.00143837e-01, 4.33458545e-01, 4.66773253e-01, 5.00087961e-01,
        5.33402669e-01, 5.66717377e-01, 6.00032084e-01, 6.33346792e-01,
        6.66661500e-01, 6.99976208e-01, 7.33290916e-01, 7.66605623e-01,
        7.99920331e-01, 8.33235039e-01, 8.66549747e-01, 8.99864455e-01,
        9.33179162e-01, 9.66493870e-01, 9.99808578e-01]),
 <BarContainer object of 30 artists>)

In [123]: f, ax = plt.subplots()

In [124]: d.min()
Out[124]: 0

In [125]: d.max()
Out[125]: 9

In [126]: np.arange(0, 10+1)
Out[126]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10])

In [127]: edges = np.arange(0, 10+1)

In [128]: edges
Out[128]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10])

In [129]: ax.hist(d, bins=edges)
Out[129]:
(array([101.,  96.,  99., 119.,  99., 104.,  98.,  95.,  92.,  97.]),
 array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10]),
 <BarContainer object of 10 artists>)

In [130]: ax.hist(d, bins=30)
Out[130]:
(array([101.,   0.,   0.,  96.,   0.,   0.,  99.,   0.,   0.,   0., 119.,
          0.,   0.,  99.,   0.,   0., 104.,   0.,   0.,   0.,  98.,   0.,
          0.,  95.,   0.,   0.,  92.,   0.,   0.,  97.]),
 array([0. , 0.3, 0.6, 0.9, 1.2, 1.5, 1.8, 2.1, 2.4, 2.7, 3. , 3.3, 3.6,
        3.9, 4.2, 4.5, 4.8, 5.1, 5.4, 5.7, 6. , 6.3, 6.6, 6.9, 7.2, 7.5,
        7.8, 8.1, 8.4, 8.7, 9. ]),
 <BarContainer object of 30 artists>)

In [131]: mu, sigma = 0, 1

In [132]: np.random.normal?

In [133]: s = np.random.normal(loc=mu, scale=sigma, size=1000)

In [134]: s
Out[134]:
array([ 7.70836960e-01,  2.43168215e-01,  3.90364944e-01,  1.58853069e+00,
       -5.10926181e-01,  7.74728319e-01, -1.80814393e+00,  4.11334243e-01,
       -4.83249542e-01,  2.57118243e-03,  1.04008625e+00,  1.64643810e-01,
        8.85187541e-01,  1.47376482e+00,  3.89093969e-01,  1.17104106e+00,
       -3.26560978e-01, -8.20988227e-03, -5.22619416e-01,  1.04297759e+00,
        4.14091354e-01, -5.07234462e-01,  1.54668834e-01,  1.04156839e+00,
       -3.92679910e-02, -9.48932811e-01,  1.31911756e-01, -1.98056559e+00,
        7.68770644e-01, -4.21327587e-01, -4.69310736e-01,  8.75695679e-01,
       -1.36516288e+00,  1.94709864e+00, -4.80242042e-01, -5.23250943e-01,
        1.02122474e+00,  7.08695273e-01,  2.45122972e+00, -2.11205984e-01,
       -1.20406639e-01, -1.47931598e+00, -3.32102277e-01, -7.21431296e-01,
       -4.48767013e-01, -1.74418776e+00,  1.66060756e+00, -1.41660348e+00,
       -2.80220280e+00, -1.18842442e+00, -6.03839553e-01, -1.14955406e+00,
        1.09830354e+00, -1.37839179e-01,  2.53856044e-02,  6.10391764e-01,
        2.86012527e-01,  9.78567297e-01, -1.10947755e+00, -5.47518101e-01,
        6.65967146e-01, -2.53455446e+00, -1.37518448e+00,  5.00992232e-01,
       -4.80249035e-01,  9.36107550e-01,  8.09180297e-01, -1.19809288e+00,
        4.06657087e-01,  1.20169786e+00,  1.47434402e-01, -9.77464877e-01,
        8.79389942e-01,  6.35424527e-01,  5.42610783e-01,  7.15938893e-01,
       -2.99461286e+00,  8.80937561e-01,  1.80813181e+00,  4.36638475e-01,
        1.92728996e-01,  6.96438673e-01,  3.38225474e-01,  6.51781262e-01,
        1.47100025e-03, -7.66704855e-01, -1.00432271e+00, -9.98191728e-01,
       -1.37304255e+00, -1.06774201e+00,  1.76126613e+00,  7.54095664e-01,
       -6.25027391e-01, -3.90392694e-01,  1.12557531e-01, -6.55545029e-01,
        6.75168572e-02,  7.77604138e-01, -3.57427335e-02,  3.36015743e-01,
        8.86491539e-01, -2.72131756e-01,  2.84790599e-01, -3.09377593e-01,
       -2.85288698e-02, -3.24730265e-01, -5.28869854e-01,  1.73711853e-01,
        5.66545316e-01,  1.46304446e-01,  4.98726958e-01, -7.37931780e-01,
       -1.20373519e+00,  4.17043503e-01,  6.87881391e-01,  4.98572666e-02,
        1.34803578e+00,  9.07698798e-01,  2.68057084e+00, -2.00808514e-01,
       -9.98848796e-01, -7.40136791e-01, -5.65497806e-01,  4.76031383e-01,
       -2.15806856e+00,  1.31855102e+00, -2.39296591e-01, -2.46793558e-01,
       -1.07934317e+00, -1.14225551e-01,  1.32397677e-02, -1.21944928e-01,
        3.39059256e-01, -5.89632042e-01, -8.95815760e-01,  5.48328130e-01,
        9.86674538e-02,  1.97181055e-01,  1.05902725e+00, -1.02256439e+00,
       -8.55240457e-01,  1.25721965e+00, -1.48288336e+00, -1.30941215e+00,
        8.17861831e-01,  2.38200192e-01,  1.05232137e-01, -9.16594081e-02,
        3.12675470e-02, -9.21121147e-02,  1.35544270e+00, -3.98148129e-01,
       -1.61373536e-01,  1.79444881e+00,  2.75097020e-02,  2.23201639e+00,
       -1.04979701e-01,  1.36741498e+00, -1.65534404e+00,  1.53644461e-01,
       -1.58447356e+00,  8.44454307e-01, -1.21286782e+00,  2.83769554e-01,
       -2.82195877e-01, -1.15820319e+00, -1.61935998e+00, -5.11040464e-01,
        1.74062945e+00, -2.93485055e-01,  9.17221542e-01, -5.70428677e-02,
        8.76726774e-01, -1.82691138e+00, -4.03188307e-01,  9.49405524e-01,
       -1.63254949e-01, -8.64552827e-02, -4.30461912e-01,  1.14937938e+00,
        2.97514354e-01,  4.40222762e-02,  6.43054545e-01,  5.88224929e-01,
        2.12587046e-01,  1.54703150e+00, -6.02875336e-02,  2.78081048e-01,
       -6.42952553e-01,  1.50115227e-01,  1.58776152e+00, -6.43257602e-01,
       -1.13359283e+00,  9.96759643e-01, -1.48766152e-01,  9.60042050e-02,
       -4.51133037e-02,  7.91217239e-02,  8.50530684e-01, -8.39124191e-01,
       -1.01177408e+00,  8.49681370e-02, -1.60643969e+00, -1.37305354e+00,
        1.86668315e+00,  7.57468330e-01, -1.00564719e-02,  1.23800694e+00,
       -1.04059923e+00, -3.15603123e-01,  6.23453609e-01,  8.90671681e-01,
        5.12916847e-01, -2.54123881e+00, -9.68082118e-01,  4.77068092e-01,
       -3.55951493e-01,  2.54023162e+00,  9.26558301e-01,  5.58081881e-01,
       -1.11694955e+00, -3.52967396e-02,  2.41203964e-01,  1.12778363e+00,
        8.81131097e-01,  1.03298919e+00, -9.23912016e-01,  1.41215170e+00,
       -1.38043075e+00, -5.35914562e-01,  4.30771135e-01, -1.49891592e-01,
       -1.00603686e+00, -8.21549826e-01, -1.54825432e+00,  5.31974639e-01,
        1.26056885e+00, -1.00393503e-01, -4.00348815e-01, -1.47232293e+00,
        9.13201924e-01,  2.21130433e+00, -1.79745580e+00, -1.06343294e+00,
       -6.79593043e-01, -5.64317910e-01,  2.27345950e-01,  1.61424955e+00,
        1.00859729e+00,  5.27597383e-01, -7.23928704e-01, -1.11962823e+00,
       -7.96775306e-01,  1.54806680e+00, -6.17433015e-02, -4.46836254e-01,
       -1.83755730e-01,  8.24618220e-01, -1.31284967e+00,  1.41487414e+00,
        1.56476257e-01, -2.16343978e-01,  4.42846114e-01,  2.18397073e-01,
       -3.44196456e-01, -2.52710672e-01, -8.68862547e-01,  6.56390751e-01,
       -5.31993809e-01, -9.56258422e-01,  1.65863523e-01,  1.32914128e+00,
       -4.83446238e-02, -6.08101257e-01,  4.03896021e-01,  1.93671246e+00,
       -1.45190553e+00,  3.82202788e-01,  2.05086625e-01,  1.16153380e+00,
        9.90909174e-01, -1.86709112e-01, -1.68451726e+00,  8.06563768e-01,
       -8.35192690e-01, -9.46740411e-01,  1.14835058e+00, -9.10850378e-01,
        1.40284474e+00,  3.35844721e-01,  3.19118400e-01,  3.07264781e-01,
       -1.63842363e+00, -1.77638862e+00,  2.15553054e-01,  5.68007359e-01,
        8.26110322e-02, -8.21534517e-01,  1.89221039e-02, -8.20341531e-02,
       -9.57158098e-01,  1.01397215e+00, -1.73027606e+00,  5.88742407e-01,
        3.84323405e-01,  1.00971185e+00, -1.00531187e+00,  1.01407147e-01,
        2.17116495e+00,  6.62074289e-01,  1.00581209e-01,  5.39161274e-01,
        8.61768424e-02,  2.19089801e+00,  9.83636196e-01, -8.56149542e-02,
        2.52331431e-01, -3.90797996e-01,  1.20985013e+00, -1.40610477e+00,
       -1.60473853e+00,  1.45871475e+00,  2.15311979e+00,  4.68304908e-01,
        1.12737941e-01,  6.57267690e-01, -6.47053526e-01,  1.71243545e-01,
        3.89087059e-02,  6.26564251e-01, -1.55799853e+00, -5.07034770e-01,
        8.44995603e-01, -6.75593828e-01, -9.93361375e-01,  2.04207215e+00,
        3.81180002e-02, -5.78918140e-01, -1.69237044e+00,  7.29346346e-01,
        6.99136154e-01, -2.98759601e-01, -1.10223019e+00, -2.45494236e-02,
       -8.35856067e-01, -9.42093589e-01, -1.03212751e-01, -1.05139040e+00,
        2.46648955e-01,  6.07992509e-01, -8.39632447e-01, -1.36824510e+00,
        1.56127960e+00, -9.40270236e-01, -6.59942705e-01,  2.13017167e-01,
        5.99369373e-01, -2.56316894e-01,  4.60794328e-01, -4.00986158e-01,
       -9.71170665e-01,  1.42631686e+00,  2.48844161e+00,  1.69596953e+00,
        1.41806639e-01,  1.83343536e+00,  3.55703516e-01, -4.77286270e-01,
        4.66379574e-01, -9.43925064e-02, -9.83118184e-01, -8.98321971e-01,
        8.02051739e-01, -1.84653198e+00,  6.04136740e-01, -1.62958360e+00,
       -2.12117644e+00, -1.83884660e+00,  1.96676397e+00, -1.96233965e-01,
        8.65831802e-02,  1.41925505e+00,  9.34179748e-01, -1.39150527e+00,
        8.69006343e-01,  1.84181265e-01, -3.41678098e-01,  2.42909141e-02,
        1.27981202e+00, -8.85966482e-01,  4.00885679e-01, -9.65723653e-03,
       -1.79716462e+00, -8.02253172e-01,  1.93213553e-01,  1.29734209e+00,
        1.00133102e+00,  5.97212504e-01, -8.15275661e-01,  1.80121399e+00,
        2.15240468e-01, -1.00636552e+00, -1.82904981e-01,  8.96248425e-01,
        7.61749832e-03,  8.86864687e-01,  1.10369396e+00,  4.00530685e-01,
       -8.57702623e-01,  1.35454663e-01,  4.51658559e-02,  1.85934633e+00,
       -1.62632194e+00, -1.34822451e-01, -5.84093547e-01,  3.35105620e-01,
       -2.43756436e+00,  1.11492456e+00,  1.37484873e-02, -1.84470116e+00,
       -3.61113135e-01,  6.08962342e-01, -1.59144788e+00,  3.22221644e-03,
       -1.05747365e+00, -5.55985032e-01,  2.67383827e-02,  1.83450254e-01,
       -4.70742498e-01,  2.72796390e-01,  8.17977607e-01, -2.78914275e-01,
        1.43156776e+00,  1.46221417e+00, -4.28702066e-01, -6.37840556e-01,
       -1.66417299e+00, -1.26569332e-01, -3.63437780e-01,  7.79051220e-01,
       -1.50966161e+00, -2.77391392e-01,  9.68744393e-01, -7.30357096e-01,
       -7.62361537e-01, -1.44694033e+00,  2.62057385e+00, -7.47473178e-01,
       -1.30034683e+00, -8.03850404e-01, -7.74295080e-01, -2.69389778e-01,
        8.25372232e-01, -2.98323169e-01, -9.22823315e-01, -1.45133850e+00,
        2.18573582e-02,  4.25390740e-02,  1.53093235e+00,  9.24477355e-02,
       -9.90083113e-02, -1.05065384e+00, -3.05952575e-01, -4.38474458e-01,
       -3.70164165e-01, -9.59255393e-01,  5.38329603e-01, -1.42445418e-01,
       -2.00353480e-01, -1.71404612e+00,  4.93644088e-01,  4.87015326e-01,
       -8.39129403e-01,  9.90121384e-01, -1.36475823e+00, -2.18699088e-02,
       -2.71207340e-01, -1.31717479e+00,  1.89702612e-01,  1.70257015e+00,
        6.76342301e-02, -4.63021754e-01,  4.47024157e-01,  1.05719995e-01,
        2.77621316e-02, -4.25542213e-01,  1.42197556e+00,  4.56363363e-01,
       -5.28670659e-01, -1.08003837e-01, -7.40866704e-01, -6.08291150e-01,
       -6.40725724e-01, -1.13431159e+00,  7.77276964e-01, -2.91041463e-01,
        5.54127578e-01, -6.70125898e-01, -6.03624944e-02, -7.11040597e-01,
        7.19668171e-01, -2.48419307e-01, -7.30873586e-01, -1.64170323e+00,
        2.75666549e-01, -7.08385052e-01, -1.57792171e-02, -4.91730108e-01,
        9.54189581e-01,  5.44144752e-01,  4.47212087e-01, -6.16121123e-01,
        4.66290044e-01,  1.71483161e+00, -8.32186034e-01,  1.72339139e-01,
       -1.64921697e+00,  1.39856209e+00, -3.97912099e-01,  7.82578881e-01,
       -1.72322825e+00,  1.79753939e+00, -3.56871528e-01,  5.45657323e-01,
        1.50818206e-01, -2.55470786e-01,  1.68579230e+00, -1.64804621e+00,
        2.98713660e-01,  9.10645672e-01, -2.98561216e-02, -1.18170784e-01,
       -1.42687712e-01, -1.22763642e+00,  3.81273841e-02,  5.12717523e-01,
        6.85992275e-02, -2.72276101e-01, -4.89725022e-01, -2.79296669e-01,
        1.25774422e+00, -2.08663498e+00,  4.00714565e-02, -3.27754917e-01,
        1.45580795e+00,  5.54922254e-02,  1.48492560e+00, -2.12389002e+00,
        4.59584905e-01,  2.80057860e-01,  1.39053397e+00, -1.64134861e+00,
       -1.55035808e-01,  6.60602618e-02, -4.95795495e-01,  1.21657771e+00,
       -3.38682185e-01,  2.03476254e+00,  1.05417791e+00,  9.50833697e-01,
        5.59298981e-01, -1.06369559e+00, -4.31096338e-01,  5.72751367e-01,
        6.77557034e-01,  1.30718385e+00, -4.67441010e-01, -8.60153385e-01,
        8.59104193e-01, -8.09626576e-01,  8.73311836e-01,  1.19973618e+00,
        4.56153036e-01, -3.57579032e-01,  4.10822261e-02,  5.93465920e-01,
        1.01855187e-02,  2.19829634e+00, -9.90670931e-01, -1.00266859e+00,
       -9.76895387e-01, -5.89579923e-01, -2.17893152e+00, -6.29650427e-01,
       -6.53284702e-01,  7.85140252e-02,  4.17800583e-01, -1.24021634e+00,
        9.00054243e-01,  1.80224223e+00, -2.08285103e-01,  1.57437124e+00,
        1.98989494e-01,  1.98873192e+00,  1.11728347e+00, -1.56390463e+00,
        1.86273707e-02,  1.05432497e+00,  3.05465810e-02, -3.68835308e-02,
        1.26976475e+00, -7.09854182e-01,  1.75156133e-02,  3.23625765e-01,
       -3.33790960e-01, -2.01291039e-02,  7.75023263e-01,  4.32837621e-01,
       -8.08717532e-01, -1.10412399e+00, -7.89102180e-01,  1.24845579e-03,
       -1.59939788e-01, -8.31957493e-01, -5.98150453e-01, -1.52003929e+00,
        4.17853703e-01, -4.00187254e-02, -1.25978734e+00,  2.86205042e-02,
        1.34262201e+00, -7.39935853e-01,  1.31513767e+00, -3.23457472e-01,
        1.97828168e-01,  9.77508024e-02,  1.40152342e+00,  1.58433847e-01,
       -1.14190142e+00, -1.31097037e+00, -1.53292105e+00, -1.71197016e+00,
        4.61350590e-02, -9.58374480e-01, -8.08116129e-02, -7.03859036e-01,
       -7.70784301e-01, -4.80845341e-01,  7.03585555e-01,  9.29145148e-01,
        3.71172553e-01, -9.89822550e-01,  6.43631275e-01,  6.88896667e-01,
        2.74647204e-01, -6.03620436e-01,  7.08859575e-01,  4.22818575e-01,
       -3.11685659e+00,  6.44452033e-01, -1.91374267e+00,  6.63561577e-01,
       -1.54072398e-01,  1.19361168e+00, -9.81612112e-02, -8.86614260e-01,
       -1.47353665e-01,  1.05980629e+00,  2.62466179e-02, -1.14335160e-01,
        7.43553516e-01,  2.10359367e-01, -5.92740583e-03,  1.36606007e+00,
        1.55511403e+00,  6.13326226e-01, -2.85959151e-01,  1.49691099e+00,
        1.18311956e+00,  7.18897166e-01, -1.21607658e+00,  1.40671903e-01,
       -7.43672175e-01, -1.59012252e-01,  2.40056929e-01,  1.00159408e-01,
       -4.75175106e-01,  1.27295375e+00, -1.69613127e+00,  7.30183531e-01,
       -1.85748327e+00,  3.82598137e-01, -8.86904326e-01,  8.78303758e-01,
        8.64525240e-02,  2.47706378e-01, -1.01827933e+00, -6.54570135e-01,
        2.07217393e-01,  5.83569927e-01,  2.92909624e+00,  2.22858323e-01,
        9.76037525e-01, -1.55693393e+00, -1.32989186e+00, -3.55494775e-01,
       -1.19742770e+00,  1.48639925e+00, -4.10218693e-01,  1.38218189e+00,
        1.48678247e+00,  4.27797199e-02,  5.01799754e-01, -5.60994733e-02,
        5.38437000e-01,  4.83341852e-01, -1.23649626e-01,  5.04969981e-01,
        1.72369628e+00,  7.13016230e-01,  3.25799614e-01,  1.24769521e-01,
       -1.01267312e+00, -1.02729688e+00,  3.23356531e-01, -1.36939112e+00,
       -7.66327599e-01,  1.28151134e+00,  1.91422970e+00, -1.66595608e+00,
        1.62664956e+00, -2.11438291e-01, -1.50050870e-02, -1.13411631e-01,
        1.08054413e+00, -1.60767658e+00,  4.56163611e-01, -9.44870197e-01,
        5.70788529e-01,  1.54279634e+00, -4.17326413e-04,  3.74155086e-01,
        4.09551778e-01, -7.99593500e-01,  1.51163935e+00,  1.70646825e+00,
        7.01783372e-01,  7.32854320e-02, -4.61893815e-01, -6.26490223e-01,
        1.71083658e+00,  1.41441504e+00, -6.36614888e-02, -1.57993053e+00,
       -2.83201187e+00, -1.08342666e+00, -1.30620396e-01,  1.40068903e+00,
       -6.51656209e-01,  5.04815456e-01,  1.30318096e+00,  1.28536317e-01,
       -1.42447869e-01, -1.30876351e+00, -1.20247531e+00,  4.16099634e-01,
       -2.00907533e-01,  1.22531318e-01, -4.72777157e-02,  6.64144049e-01,
       -7.84687411e-01, -3.35580644e-01,  1.89618223e+00, -7.99786138e-01,
       -2.81575431e-01, -5.89386702e-01,  4.44781362e-01,  1.02239232e+00,
       -4.98211619e-01, -4.31414341e-01, -2.78981605e-01,  5.29833783e-01,
       -7.39395303e-01, -3.75959966e-01, -2.37219387e+00, -1.38174501e+00,
       -1.12443756e-01,  8.97864173e-01,  2.95075783e-01, -1.09876846e+00,
       -1.40025621e+00,  1.74680093e-01, -1.65280364e+00,  1.06592682e+00,
        6.38961917e-02, -1.60732016e+00, -9.65953859e-01, -7.24311319e-01,
       -7.73192510e-01, -1.48993301e+00, -8.74662522e-01, -6.84401556e-01,
       -7.11285756e-01,  1.12795662e+00,  1.04827803e-01, -9.93257217e-01,
       -3.34621606e-01, -8.79557097e-01, -3.00006659e-01,  8.75509153e-01,
        2.52270781e-01,  2.28560118e+00,  3.75927426e-01, -9.13594510e-01,
        8.09740731e-01,  1.07993122e+00,  1.09416699e+00, -1.09424095e+00,
       -1.47637415e-01,  1.13181196e+00, -1.68472896e+00, -4.99416761e-01,
       -1.42693769e+00, -9.32570230e-01, -1.01245715e+00,  1.25056983e+00,
       -2.34538035e-01, -8.63355581e-01, -1.03560573e+00,  1.41667165e-01,
       -1.11356273e-02,  1.34407437e+00,  5.00016696e-01, -1.43179778e+00,
       -6.28980708e-01,  1.07007251e+00, -6.21082698e-01,  1.73457217e+00,
       -1.09828943e+00,  5.72613353e-01, -8.61215553e-01, -5.09595133e-01,
        1.09858165e+00, -1.27067163e-01,  8.13452245e-01,  4.73290595e-01,
        7.53865684e-01, -8.88188211e-01, -2.21574398e-01,  4.24252618e-01,
       -8.49072873e-01,  1.62950004e+00, -7.77228042e-01, -3.00003577e-01,
       -1.00655906e+00, -2.14330807e+00,  1.79691852e+00, -2.04338937e-01,
       -4.47914838e-01, -1.98715062e-01,  1.41986397e+00, -9.65106608e-01,
        6.79567866e-01, -4.23788249e-01, -5.96670856e-01,  5.67058213e-01,
        9.88240574e-01, -5.13902950e-01, -7.68849160e-01, -1.16909575e+00,
        1.10350377e+00, -5.75255995e-01, -1.84913073e+00,  1.40995214e+00,
       -1.36985950e+00,  7.79460531e-01,  1.83428647e-01,  2.87915432e-01,
       -5.84375275e-01,  3.65591460e-01, -1.66777989e+00,  5.88037749e-01,
        1.55701004e+00,  8.84027197e-01, -2.01954009e+00, -9.84209002e-01,
       -1.87794922e-01,  4.86937305e-01, -1.06652674e-01, -4.93214387e-01,
        5.95300308e-01,  1.16415177e+00, -2.32294007e-01,  7.28929867e-01,
       -2.57905075e+00, -9.37509386e-01, -3.21258937e-01, -4.88566221e-01,
        3.32798217e-01,  1.01375055e+00,  5.06669026e-01, -6.22225472e-01,
       -1.52276809e+00,  5.56964121e-01, -1.83817674e+00,  6.53037283e-01,
       -1.88449082e-01, -1.17583499e+00,  2.87257312e-01, -2.87610266e-03,
       -3.65972929e-02, -8.42232965e-02,  4.19524108e-01,  9.24434022e-01,
        4.96615198e-01,  1.01213319e+00, -4.41397188e-02,  1.61845932e+00,
        5.71109822e-01, -5.43694030e-01, -1.09389506e+00,  2.05796804e-01,
       -1.30652152e+00, -9.73375968e-01,  2.39087080e-01, -6.07887446e-01,
       -9.33316240e-01, -3.44750461e-02,  7.26778991e-02, -2.05834025e-01,
       -3.77546919e-01,  8.54642729e-01,  3.42427351e-01, -2.23426112e-01,
        2.46432193e+00,  1.93831737e-01,  1.13200513e+00, -5.60981003e-01,
       -1.36294095e+00, -7.91756516e-01, -2.68009783e-01, -4.96608210e-01,
        1.33638618e+00, -1.20041122e-01,  4.61468877e-01, -4.64811560e-02,
       -4.33554333e-01,  3.79960135e-02,  1.71405147e+00, -7.67948592e-01,
        7.66990451e-01, -1.02600725e+00, -4.59626442e-01,  3.58320595e-03,
        3.26375090e-01,  1.48312863e+00, -5.00826415e-02, -8.43615607e-01,
        6.50041973e-01, -3.64169809e-01,  2.38681571e-01, -1.16222440e-01,
       -1.94345685e+00,  5.08299186e-01,  5.83368007e-01,  9.26604768e-01,
        1.80046276e+00, -1.19510377e+00,  5.16507444e-01,  4.09294997e-01,
       -4.19081993e-01,  3.97106236e-01,  4.99646955e-01, -1.21868383e+00,
        2.46222761e-01, -9.17984306e-01, -6.51856500e-01, -1.77474482e+00,
       -4.73360926e-01, -2.03570671e-01,  5.49856867e-01,  8.99926671e-04,
       -1.54228815e+00,  8.62148057e-01, -1.18586624e-01,  4.88370590e-01,
        9.65936118e-01,  1.42260475e+00,  1.96122699e+00, -7.22387587e-02,
        3.11124446e-01, -1.07836109e+00,  1.06160017e+00, -1.18488744e+00,
       -1.80525169e+00,  8.30386005e-01, -5.21696525e-01,  7.77607281e-01,
        4.08074649e-01, -1.63000265e+00, -2.71967936e+00, -1.09660175e+00,
        1.64914870e-02, -1.22177633e+00, -6.52761449e-01, -1.45894073e+00,
        1.69877960e-01,  9.08259270e-02, -4.81392624e-01,  1.39706530e+00])

In [135]: f, ax = plt.subplots()

In [136]: ax.hist(s, bins=30)
Out[136]:
(array([  2.,   3.,   3.,   2.,   5.,   5.,  18.,  34.,  32.,  27.,  61.,
         62.,  58.,  70.,  78., 103.,  71.,  74.,  64.,  58.,  46.,  29.,
         36.,  22.,  16.,   7.,   7.,   3.,   3.,   1.]),
 array([-3.11685659, -2.91532483, -2.71379307, -2.51226131, -2.31072955,
        -2.10919779, -1.90766602, -1.70613426, -1.5046025 , -1.30307074,
        -1.10153898, -0.90000722, -0.69847546, -0.4969437 , -0.29541194,
        -0.09388017,  0.10765159,  0.30918335,  0.51071511,  0.71224687,
         0.91377863,  1.11531039,  1.31684215,  1.51837391,  1.71990568,
         1.92143744,  2.1229692 ,  2.32450096,  2.52603272,  2.72756448,
         2.92909624]),
 <BarContainer object of 30 artists>)

In [137]: s = np.random.normal(loc=mu, scale=sigma, size=100000)

In [138]: ax.hist(s, bins=30)
Out[138]:
(array([2.0000e+00, 1.0000e+00, 2.0000e+00, 7.0000e+00, 3.1000e+01,
        8.2000e+01, 2.0600e+02, 4.6000e+02, 8.9500e+02, 1.7140e+03,
        2.9640e+03, 4.7380e+03, 6.7930e+03, 8.9600e+03, 1.0959e+04,
        1.2022e+04, 1.1989e+04, 1.0800e+04, 9.1470e+03, 7.0530e+03,
        4.7260e+03, 3.0380e+03, 1.6870e+03, 9.5400e+02, 4.5000e+02,
        1.8900e+02, 8.2000e+01, 3.1000e+01, 1.6000e+01, 2.0000e+00]),
 array([-4.85211765e+00, -4.54898800e+00, -4.24585835e+00, -3.94272870e+00,
        -3.63959904e+00, -3.33646939e+00, -3.03333974e+00, -2.73021009e+00,
        -2.42708044e+00, -2.12395078e+00, -1.82082113e+00, -1.51769148e+00,
        -1.21456183e+00, -9.11432175e-01, -6.08302522e-01, -3.05172870e-01,
        -2.04321794e-03,  3.01086434e-01,  6.04216086e-01,  9.07345739e-01,
         1.21047539e+00,  1.51360504e+00,  1.81673470e+00,  2.11986435e+00,
         2.42299400e+00,  2.72612365e+00,  3.02925330e+00,  3.33238296e+00,
         3.63551261e+00,  3.93864226e+00,  4.24177191e+00]),
 <BarContainer object of 30 artists>)

In [139]: ax.hist(s, bins=100)
Out[139]:
(array([1.000e+00, 0.000e+00, 1.000e+00, 0.000e+00, 1.000e+00, 0.000e+00,
        0.000e+00, 0.000e+00, 0.000e+00, 2.000e+00, 1.000e+00, 1.000e+00,
        3.000e+00, 9.000e+00, 9.000e+00, 4.000e+00, 1.700e+01, 2.100e+01,
        1.800e+01, 3.700e+01, 4.800e+01, 5.800e+01, 7.300e+01, 1.010e+02,
        1.280e+02, 1.530e+02, 1.740e+02, 2.180e+02, 2.570e+02, 3.510e+02,
        4.220e+02, 4.760e+02, 5.820e+02, 7.200e+02, 8.120e+02, 9.570e+02,
        1.112e+03, 1.272e+03, 1.458e+03, 1.605e+03, 1.734e+03, 2.001e+03,
        2.274e+03, 2.425e+03, 2.620e+03, 2.813e+03, 2.906e+03, 3.232e+03,
        3.287e+03, 3.420e+03, 3.559e+03, 3.597e+03, 3.628e+03, 3.591e+03,
        3.683e+03, 3.624e+03, 3.506e+03, 3.271e+03, 3.285e+03, 3.067e+03,
        3.010e+03, 2.728e+03, 2.599e+03, 2.440e+03, 2.171e+03, 2.043e+03,
        1.776e+03, 1.587e+03, 1.402e+03, 1.170e+03, 1.041e+03, 9.540e+02,
        8.020e+02, 6.570e+02, 5.300e+02, 4.810e+02, 4.030e+02, 3.270e+02,
        2.700e+02, 2.140e+02, 1.670e+02, 1.360e+02, 1.080e+02, 9.500e+01,
        5.400e+01, 5.300e+01, 3.800e+01, 3.200e+01, 2.200e+01, 1.600e+01,
        1.300e+01, 1.100e+01, 4.000e+00, 8.000e+00, 5.000e+00, 5.000e+00,
        1.000e+00, 1.000e+00, 0.000e+00, 1.000e+00]),
 array([-4.85211765, -4.76117876, -4.67023986, -4.57930097, -4.48836207,
        -4.39742317, -4.30648428, -4.21554538, -4.12460649, -4.03366759,
        -3.9427287 , -3.8517898 , -3.76085091, -3.66991201, -3.57897311,
        -3.48803422, -3.39709532, -3.30615643, -3.21521753, -3.12427864,
        -3.03333974, -2.94240084, -2.85146195, -2.76052305, -2.66958416,
        -2.57864526, -2.48770637, -2.39676747, -2.30582857, -2.21488968,
        -2.12395078, -2.03301189, -1.94207299, -1.8511341 , -1.7601952 ,
        -1.66925631, -1.57831741, -1.48737851, -1.39643962, -1.30550072,
        -1.21456183, -1.12362293, -1.03268404, -0.94174514, -0.85080624,
        -0.75986735, -0.66892845, -0.57798956, -0.48705066, -0.39611177,
        -0.30517287, -0.21423397, -0.12329508, -0.03235618,  0.05858271,
         0.14952161,  0.2404605 ,  0.3313994 ,  0.4223383 ,  0.51327719,
         0.60421609,  0.69515498,  0.78609388,  0.87703277,  0.96797167,
         1.05891056,  1.14984946,  1.24078836,  1.33172725,  1.42266615,
         1.51360504,  1.60454394,  1.69548283,  1.78642173,  1.87736063,
         1.96829952,  2.05923842,  2.15017731,  2.24111621,  2.3320551 ,
         2.422994  ,  2.5139329 ,  2.60487179,  2.69581069,  2.78674958,
         2.87768848,  2.96862737,  3.05956627,  3.15050516,  3.24144406,
         3.33238296,  3.42332185,  3.51426075,  3.60519964,  3.69613854,
         3.78707743,  3.87801633,  3.96895523,  4.05989412,  4.15083302,
         4.24177191]),
 <BarContainer object of 100 artists>)

In [140]: s1 = np.random.normal(loc=0, scale=1, size=1000)

In [141]: s2 = np.random.normal(loc=5, scale=0.5, size=1000)

In [142]: s1.mean()
Out[142]: 0.03886689160573707

In [143]: s1.std()
Out[143]: 0.9927798989067755

In [144]: s2.mean()
Out[144]: 5.023146273620431

In [145]: s2.std()
Out[145]: 0.48701567061115647

In [146]: type(s1)
Out[146]: numpy.ndarray

In [147]: s1 + s2
Out[147]:
array([4.71200054, 5.72285323, 5.71347255, 5.21531168, 5.95412105,
       5.78790178, 4.67226683, 3.21060552, 4.83851953, 5.60310345,
       3.43833383, 5.6425653 , 4.4923501 , 5.33318496, 3.21796021,
       3.14324819, 5.21322841, 5.09974503, 7.50622548, 5.15478069,
       5.1760469 , 6.7782394 , 4.04825239, 5.90424533, 5.12846745,
       5.2494436 , 4.94768005, 4.75534121, 4.30448904, 4.92283161,
       5.27419595, 5.11845844, 6.80468735, 4.58757351, 3.93495832,
       4.78919477, 4.95251704, 4.12353711, 5.8181443 , 4.56881474,
       5.9054606 , 5.09773035, 4.99449486, 5.0507321 , 3.90922269,
       5.02323091, 6.05998259, 4.99425799, 5.97574062, 3.89588213,
       5.98344368, 7.04279443, 4.71553906, 4.63603834, 5.05163902,
       3.84776621, 7.12950999, 5.27255637, 7.07143527, 5.83978509,
       6.49986737, 4.13298553, 3.84196022, 4.76586017, 3.52758996,
       5.22691691, 3.60172778, 4.8244331 , 5.86118784, 5.2981968 ,
       4.37427499, 5.01356302, 2.95818781, 5.61593283, 5.73206625,
       6.20658768, 4.89783171, 4.95675474, 5.39180149, 3.3580966 ,
       5.38281063, 4.803718  , 6.56206081, 7.22209808, 5.84219665,
       5.37198676, 5.72739519, 4.39335732, 5.16472118, 4.14076794,
       5.47666104, 4.77229165, 5.19311423, 4.09475198, 5.55524311,
       7.25954449, 5.54771067, 3.49476294, 4.81440931, 4.91784615,
       6.74456675, 7.54385945, 4.90174301, 4.35554397, 4.55442008,
       5.29018683, 3.85614875, 2.92061369, 3.44031155, 3.6226457 ,
       4.65314196, 6.65316033, 4.62644334, 6.06888703, 5.76808413,
       5.73620689, 5.09972381, 5.97613017, 3.75126838, 5.26738439,
       3.75942496, 5.38073703, 5.49325441, 4.62251161, 4.01016152,
       4.48432327, 6.42020105, 4.65622512, 4.47675593, 4.86560705,
       5.0672813 , 5.97667967, 6.67242422, 5.50995584, 4.71001635,
       5.03464108, 6.70700335, 4.05168721, 4.60960942, 4.84203907,
       6.15270607, 4.43641956, 5.55713434, 4.14269995, 6.96908295,
       3.86721106, 3.70635117, 5.11487045, 4.77764969, 3.90198619,
       5.94046748, 5.05790091, 6.34622308, 3.14974541, 6.20236088,
       6.03673587, 5.39180175, 4.88853404, 5.3165615 , 5.47985014,
       7.28464298, 6.00647398, 5.94663882, 4.06509234, 4.09975547,
       6.12905075, 4.79956208, 5.49852981, 5.26884255, 3.60521932,
       4.29986574, 4.61249762, 6.29285504, 5.09145521, 5.01967542,
       4.34261844, 5.92320626, 5.0671886 , 7.43571243, 4.33931142,
       4.31614884, 4.53508601, 2.83790924, 4.76252266, 5.16127982,
       6.95768967, 3.42022596, 5.19124667, 4.35081003, 5.58324173,
       4.33876716, 4.36241434, 5.06699091, 3.55953726, 4.72523189,
       5.54966589, 7.16520295, 4.42669743, 4.12700812, 5.16717705,
       6.00995018, 5.23188014, 4.39874916, 5.93108859, 3.85944117,
       3.92467575, 5.28215144, 4.91431544, 4.43149143, 5.54788156,
       7.91476383, 4.2412385 , 5.3206001 , 6.7297436 , 3.2436591 ,
       3.27715757, 4.04508978, 3.62034306, 2.95771808, 4.6718538 ,
       3.6400702 , 6.62202145, 6.08485898, 5.70631036, 4.44864268,
       4.38104371, 4.53048641, 4.89268995, 5.43670368, 3.91224839,
       5.84644516, 6.2173986 , 4.69023421, 5.35944054, 4.93836472,
       4.91168494, 5.14694325, 6.1899777 , 5.9934892 , 3.56026735,
       8.08201697, 6.48902562, 4.18259519, 4.90842997, 4.56100503,
       4.01001859, 5.63657843, 4.40251626, 5.67803744, 3.97210649,
       6.73276927, 4.68237746, 4.17145719, 3.58495867, 5.53061383,
       4.09651692, 3.96675368, 5.24912581, 6.24136932, 6.08392728,
       5.95007051, 4.75670762, 6.36569664, 4.47164239, 3.13121361,
       3.91175342, 4.80021768, 6.30360318, 5.37360883, 4.94018481,
       4.34659828, 7.80247307, 6.0616338 , 4.30801923, 3.77135574,
       5.82243308, 6.8135693 , 6.41010465, 4.49260251, 4.3453859 ,
       5.1308791 , 6.29010229, 4.13239805, 4.99688057, 4.02700134,
       2.81867277, 6.278899  , 2.8197585 , 3.46912127, 4.25091709,
       5.01191904, 2.87310813, 5.78482455, 6.40548864, 4.31918582,
       3.77792479, 7.38487374, 6.35450992, 3.87752624, 4.94188247,
       6.34863893, 3.27774559, 3.82276054, 4.78003813, 4.50710164,
       3.67857333, 6.08830983, 4.04784498, 5.7044158 , 7.8631144 ,
       6.10640474, 4.94152628, 4.81626246, 4.33038612, 5.84562976,
       4.91928288, 4.94864552, 3.80462487, 5.27868769, 5.06784184,
       3.70587523, 4.25814171, 3.26824407, 6.73335852, 6.75903776,
       5.3469444 , 4.90714576, 4.78189317, 6.64821452, 6.08029527,
       6.18280709, 5.37656259, 6.89501923, 3.53613724, 4.5417382 ,
       5.6469816 , 5.64841422, 3.85968399, 4.61420772, 5.15565059,
       5.83794747, 6.24122817, 3.48502825, 5.56475599, 5.08842526,
       6.11987987, 3.24652711, 3.61807281, 4.49588565, 5.07465459,
       4.90211794, 5.08846906, 3.8386241 , 5.231978  , 4.66138146,
       6.62801488, 5.2395005 , 4.3072919 , 7.22421589, 5.34129399,
       6.45257217, 7.01506675, 5.75102426, 4.50819704, 6.86317356,
       5.11417106, 5.24720949, 6.2475487 , 5.45458768, 5.43137656,
       3.7418352 , 3.57462221, 6.59031609, 4.80869651, 4.79425901,
       7.78577582, 5.14182712, 5.70999175, 3.03710542, 3.84156591,
       4.36543207, 3.04032354, 4.96788903, 6.47035718, 6.19859991,
       5.77099218, 5.89859232, 4.08561691, 5.14555204, 5.96265704,
       4.33630383, 5.86443027, 3.93631773, 5.65818171, 5.87898817,
       5.21723641, 4.57618689, 2.54672944, 3.67521731, 4.58169322,
       5.25026099, 5.3612868 , 5.50639388, 4.71801152, 4.30599702,
       5.3314015 , 5.94191468, 7.90930272, 5.24716462, 4.74526425,
       2.42225067, 3.35646299, 5.34478121, 6.27750625, 5.36969202,
       3.91737398, 6.6965164 , 5.29705032, 6.3276459 , 6.88699448,
       4.24821156, 6.21872409, 4.07963993, 4.87332509, 5.21513443,
       5.08849502, 5.97108268, 3.93828743, 4.64741036, 4.0853715 ,
       7.03989547, 2.59257329, 4.0212182 , 7.09655562, 6.12301765,
       4.73242236, 3.51368807, 5.90084803, 5.16916198, 5.05169751,
       3.80644364, 4.38902001, 4.37251169, 6.22152633, 4.99149503,
       6.01291687, 4.77890157, 6.15173488, 4.16657372, 4.9611467 ,
       3.54860171, 4.79574635, 6.44345261, 4.48068321, 5.63107624,
       2.71135796, 4.90862362, 5.08786824, 3.9976279 , 5.1006069 ,
       4.02449347, 5.38807204, 5.05171497, 5.34804968, 5.69741637,
       4.86392402, 5.93715473, 6.91534931, 3.38968825, 5.08079341,
       3.72207834, 5.94379252, 4.33568385, 3.01934462, 6.23989859,
       5.99506914, 5.22999689, 3.86445838, 3.60439797, 7.87432833,
       5.47834869, 5.31574997, 5.40894897, 5.44652642, 5.11305415,
       4.45546701, 3.80298628, 3.98725243, 4.4161121 , 6.68050958,
       4.84997162, 5.54006542, 3.02081954, 6.24778044, 4.77230721,
       3.73537807, 4.95468475, 5.14189003, 5.78375624, 3.17331043,
       5.93768649, 4.08237779, 3.88311877, 5.62287101, 3.38708799,
       5.25514327, 5.95711612, 4.66248087, 2.88245321, 6.59920285,
       4.23868822, 5.01671875, 3.10406722, 6.93082019, 6.37395754,
       3.3491388 , 3.68886513, 3.33817361, 5.29565726, 4.07043124,
       5.77861741, 5.74236485, 7.79248966, 3.36866418, 4.61150154,
       4.10783206, 5.89451393, 7.35576421, 8.04859859, 7.20085982,
       3.24372297, 4.24101128, 3.62076829, 6.19872236, 5.33326068,
       6.99983975, 3.70792506, 5.49396877, 5.7104395 , 6.64873043,
       3.33209694, 6.55382714, 3.79832541, 6.46046801, 4.64523843,
       4.11807892, 6.25325087, 7.94795113, 4.69788626, 5.43935266,
       5.90602424, 5.24584957, 5.65388488, 5.06159725, 6.59860745,
       6.02241026, 5.7965173 , 5.04505932, 4.89079235, 5.68459656,
       4.89071049, 6.2487895 , 6.11956686, 5.58716868, 6.92262128,
       4.87623114, 4.91969952, 8.02360036, 4.23105773, 6.48300338,
       3.52035031, 5.12320643, 6.10164336, 3.66562056, 3.07588016,
       5.85361718, 4.95006409, 4.93597758, 4.97662529, 4.04713339,
       4.56016956, 6.41455847, 4.34257146, 6.45132771, 4.35716308,
       3.38884036, 5.58798622, 4.74566388, 3.38822496, 4.00473864,
       5.89775951, 5.71109774, 4.48834766, 5.9931217 , 6.53495571,
       3.78923635, 4.95947579, 4.79805813, 5.92509731, 6.02290026,
       4.42458795, 3.46496304, 5.81519933, 2.80725132, 4.80628748,
       5.94213236, 8.03184762, 5.42817406, 4.93241626, 5.08500939,
       5.37493573, 3.43834245, 5.95950341, 7.45183748, 2.89943811,
       4.22905585, 4.86329576, 6.04265786, 4.61277159, 5.11503639,
       3.62780671, 4.78274655, 3.8327713 , 4.97458966, 5.02890557,
       5.54412902, 2.8518127 , 4.20325273, 4.08009185, 3.67078702,
       4.96232614, 5.37979303, 5.6790379 , 4.47471079, 3.54178328,
       4.69045348, 4.33214505, 5.32434104, 6.0459639 , 6.07698781,
       4.89143145, 4.94189476, 5.56733725, 5.82097865, 4.83747359,
       4.61187538, 4.15033432, 6.97631593, 4.56747099, 3.60749253,
       3.92300983, 6.18449431, 3.92828796, 4.35885127, 4.09864479,
       3.36354255, 6.84763388, 5.03898698, 4.29434894, 4.16028226,
       4.28060156, 5.42954953, 5.02938527, 5.44243621, 5.34900965,
       4.10165057, 4.61557673, 5.20886396, 5.85513165, 5.74065545,
       4.98772989, 5.47922613, 4.59878494, 4.69173225, 5.07348958,
       5.10204272, 3.12993647, 4.48506944, 3.65672955, 5.13213778,
       5.06937387, 4.84660161, 4.84805706, 2.28903131, 4.47952187,
       5.57487637, 5.15159252, 6.04099594, 3.7164512 , 4.60426166,
       5.66327423, 4.98154469, 6.51246   , 5.37216233, 5.7366892 ,
       5.98790072, 5.17901475, 3.7426763 , 7.81666671, 4.68234413,
       3.2375774 , 3.77973415, 6.5113342 , 2.88190601, 5.84247515,
       5.16565004, 4.83499268, 3.96676414, 3.8431182 , 5.15841951,
       3.48713064, 4.52383765, 3.76775421, 7.95306262, 4.42315387,
       3.7368196 , 2.54527915, 7.02946642, 5.83698217, 4.79478147,
       4.74853194, 4.06172555, 3.50169166, 4.91313345, 4.35705174,
       5.29012729, 5.85978296, 5.31685668, 4.78968016, 5.20436911,
       5.65018955, 5.96020164, 6.5135694 , 5.69148865, 2.57612178,
       6.00873546, 5.22422191, 6.40162591, 7.12751891, 4.73636103,
       4.64692967, 3.81891548, 2.68369451, 4.05692057, 3.48139595,
       6.89474955, 3.78370861, 4.15421933, 5.34710073, 7.51883714,
       8.15929038, 6.41758802, 6.17232012, 4.56581488, 3.08452675,
       4.44008232, 6.01836336, 5.31621272, 6.01451346, 7.6837841 ,
       5.30131637, 3.88638523, 4.67368576, 4.56263772, 3.58408272,
       5.46982808, 2.54506708, 4.84425498, 4.42457709, 4.01781077,
       6.38917066, 4.30092026, 4.45769813, 6.1982191 , 5.40497263,
       5.24910388, 7.23746351, 4.4644034 , 5.14318115, 5.93110869,
       5.26929259, 5.59058835, 5.48301934, 5.37471386, 5.97252749,
       4.57705497, 5.68377554, 6.41423073, 7.43280435, 5.49999318,
       4.18848141, 3.78062372, 4.61282308, 4.06565726, 5.47867474,
       4.96568006, 3.71922305, 5.17417526, 5.37724395, 4.27275321,
       4.43284488, 5.24956833, 5.14231265, 4.53796341, 4.24742232,
       4.69847947, 3.861026  , 4.997643  , 5.23310378, 4.02209552,
       4.71991121, 4.93373697, 5.98438934, 6.11316374, 4.54318114,
       5.05372274, 4.22054621, 6.91454454, 5.7593125 , 5.80102815,
       2.08470587, 5.69391115, 4.14333597, 4.74055796, 3.82270018,
       5.64506293, 3.94644184, 4.52147497, 7.64687548, 7.19200819,
       5.23958874, 4.6591769 , 6.08416742, 6.32417314, 4.61817347,
       4.25331017, 6.27602527, 5.62122459, 4.26939824, 5.22947124,
       3.25206405, 5.33910215, 4.45353533, 5.81821594, 5.77078943,
       4.72785089, 2.93381843, 5.58626507, 5.1762202 , 4.19812047,
       3.96202345, 5.88047574, 6.86525533, 5.30448568, 4.92020017,
       6.41749952, 4.5596107 , 4.84925009, 4.49893967, 6.0959335 ,
       6.15646795, 6.33377555, 5.62092422, 4.11104604, 5.21145624,
       4.68133124, 4.73105105, 5.10783881, 4.13495189, 3.38624036,
       4.57170165, 4.56715406, 5.78290123, 4.69497025, 4.21682533,
       5.8470471 , 1.51711265, 5.22561337, 2.97512515, 3.23232119,
       5.30645889, 4.25384707, 6.05135556, 5.50327997, 5.77304287,
       5.31530335, 5.62804151, 4.4558996 , 4.29041591, 3.72146495,
       4.76835616, 3.88936754, 5.42900183, 4.54769964, 4.02291814,
       4.50712921, 4.49840862, 5.31264677, 5.26845063, 5.32640206,
       6.33148485, 3.37484868, 7.55189451, 5.96177507, 6.10966337,
       3.93681563, 5.52180491, 5.61488562, 3.66042379, 5.24386863,
       3.80933476, 5.79472581, 6.70237949, 6.02175241, 4.55074128,
       6.53527326, 6.61238264, 5.11608957, 5.92750424, 6.11349088,
       3.61884127, 4.58508979, 6.21778428, 6.79286955, 6.41809738,
       4.61126313, 4.74680523, 4.45842668, 3.92920372, 5.807368  ,
       5.52750762, 6.17655231, 3.913563  , 5.11124294, 5.80460169,
       4.87746435, 5.0886535 , 7.83822168, 8.27862694, 4.80446291,
       4.09480799, 6.47493976, 4.42156757, 6.64246043, 6.39455384,
       5.85071743, 5.10198967, 5.87231736, 4.50587235, 5.00957406,
       4.72030151, 2.77867805, 6.66101592, 5.42219598, 4.94551744,
       7.3539867 , 3.95719932, 5.51463316, 4.16070803, 5.47105333,
       4.50136659, 3.06868533, 6.4115025 , 6.27070729, 5.06798332,
       5.48872404, 3.44354831, 4.6925367 , 4.31316298, 5.39561359,
       6.01263792, 6.42361073, 6.00538951, 4.83224873, 3.02626944,
       7.66564162, 6.91023399, 4.16166426, 3.47823426, 6.2659869 ,
       6.13571632, 4.98584163, 4.46889168, 4.62194245, 5.95379274,
       5.97208366, 4.40674537, 4.11160011, 4.81832306, 5.35404205,
       5.65933521, 4.88968703, 5.27765764, 4.80047331, 6.59711592,
       6.37761801, 5.23405588, 3.43244307, 3.27041738, 5.78103898])

In [148]: s1.shape
Out[148]: (1000,)

In [149]: s2.shape
Out[149]: (1000,)

In [150]: (s1+s2).shape
Out[150]: (1000,)

In [151]: np.concatenate([s1, s2])
Out[151]:
array([ 0.23412959, -0.18519581,  0.87757063, ...,  4.60827906,
        4.22614858,  4.37141346])

In [152]: bimodal = np.concatenate([s1, s2])

In [153]: bimodal.shape
Out[153]: (2000,)

In [154]: f, ax = plt.subplots()

In [155]: ax.hist(bimodal, bins=30)
Out[155]:
(array([  1.,   8.,  14.,  26.,  50.,  77.,  84., 116., 128., 132., 113.,
         91.,  57.,  46.,  25.,  20.,   5.,   5.,   1.,   2.,   6.,  35.,
        117., 223., 242., 216., 109.,  39.,   9.,   3.]),
 array([-2.84820915, -2.52707185, -2.20593455, -1.88479725, -1.56365995,
        -1.24252265, -0.92138535, -0.60024805, -0.27911075,  0.04202656,
         0.36316386,  0.68430116,  1.00543846,  1.32657576,  1.64771306,
         1.96885036,  2.28998766,  2.61112496,  2.93226226,  3.25339956,
         3.57453687,  3.89567417,  4.21681147,  4.53794877,  4.85908607,
         5.18022337,  5.50136067,  5.82249797,  6.14363527,  6.46477257,
         6.78590987]),
 <BarContainer object of 30 artists>)

In [156]: bimodal.mean()
Out[156]: 2.531006582613084

In [157]: bimodal.std()
Out[157]: 2.6119261733520123

In [158]: plt.hist?

In [159]: np.histogram?

In [160]: np.histogram(bimodal, bins=30)
Out[160]:
(array([  1,   8,  14,  26,  50,  77,  84, 116, 128, 132, 113,  91,  57,
         46,  25,  20,   5,   5,   1,   2,   6,  35, 117, 223, 242, 216,
        109,  39,   9,   3]),
 array([-2.84820915, -2.52707185, -2.20593455, -1.88479725, -1.56365995,
        -1.24252265, -0.92138535, -0.60024805, -0.27911075,  0.04202656,
         0.36316386,  0.68430116,  1.00543846,  1.32657576,  1.64771306,
         1.96885036,  2.28998766,  2.61112496,  2.93226226,  3.25339956,
         3.57453687,  3.89567417,  4.21681147,  4.53794877,  4.85908607,
         5.18022337,  5.50136067,  5.82249797,  6.14363527,  6.46477257,
         6.78590987]))

In [161]: n, edges = np.histogram(bimodal, bins=30)

In [162]: n
Out[162]:
array([  1,   8,  14,  26,  50,  77,  84, 116, 128, 132, 113,  91,  57,
        46,  25,  20,   5,   5,   1,   2,   6,  35, 117, 223, 242, 216,
       109,  39,   9,   3])

In [163]: n.max()
Out[163]: 242

In [164]: n.argmax()
Out[164]: 24

In [165]: from scipy import stats

In [166]: stats
Out[166]: <module 'scipy.stats' from '/usr/local/lib/python3.8/dist-packages/scipy/stats/__init__.py'>

In [167]: rv = stats.norm(loc=2, scale=10)

In [168]: rv
Out[168]: <scipy.stats._distn_infrastructure.rv_frozen at 0x7fe664d19190>

In [169]: rv.rvs?
Signature: rv.rvs(size=None, random_state=None)
Docstring: <no docstring>
File:      /usr/local/lib/python3.8/dist-packages/scipy/stats/_distn_infrastructure.py
Type:      method

In [170]: s = rv.rvs(50)

In [171]: s
Out[171]:
array([ 15.13210164,  18.22708656,   0.82689001,   9.30507158,
         5.54795728,  13.27562775, -11.42834371,   3.34758925,
        -0.2344537 , -14.52801001,  13.48586588,  15.28519931,
       -20.82661909,   4.09736049,   9.69144349,  -1.66310957,
        -7.10532475, -19.86237555,   6.14234452, -10.45986894,
        -3.91996154,  -9.26380355,  -5.21903534, -10.8447632 ,
        -4.31931502,   6.25567982,  -7.71079101,   0.45346311,
        -7.67104551,  10.40849356,   6.94468948,  -7.4993181 ,
        -7.60643917, -14.23658846,   1.23492694,   3.45409513,
        -4.72536387,  17.02885171,   5.38223028,  11.94775801,
       -13.23067624,   5.3058491 ,  12.09505983, -10.32318709,
        -7.12906723,  -4.49097059,   9.62777079, -13.04223252,
        21.20562076,   8.99077934])

In [172]: plt.close('all')

In [173]: f, ax = plt.subplots()

In [174]: ax.hist(s, bins='auto')
Out[174]:
(array([ 2.,  9., 11.,  5., 10.,  9.,  4.]),
 array([-20.82661909, -14.8220134 ,  -8.8174077 ,  -2.81280201,
          3.19180368,   9.19640937,  15.20101507,  21.20562076]),
 <BarContainer object of 7 artists>)

In [175]: stats.ttest_1samp?

In [176]: t, p = stats.ttest_1samp(s, 0)

In [177]: p
Out[177]: 0.8172447834809734

In [178]: s = rv.rvs(500)

In [179]: f, ax = plt.subplots()

In [180]: ax.hist(s, bins='auto')
Out[180]:
(array([ 2.,  1.,  1., 14., 17., 24., 50., 60., 59., 67., 59., 45., 47.,
        27., 11.,  9.,  3.,  4.]),
 array([-28.87965193, -25.59999075, -22.32032957, -19.04066839,
        -15.76100721, -12.48134603,  -9.20168485,  -5.92202367,
         -2.64236249,   0.63729868,   3.91695986,   7.19662104,
         10.47628222,  13.7559434 ,  17.03560458,  20.31526576,
         23.59492694,  26.87458812,  30.15424929]),
 <BarContainer object of 18 artists>)

In [181]: t, p = stats.ttest_1samp(s, 0)

In [182]: p
Out[182]: 2.9159120584645394e-05

In [183]: rv = stats.norm(loc=4, scale=5)

In [184]: s = rv.rvs(50)

In [185]: ax.hist(s, bins='auto')
Out[185]:
(array([ 5., 10.,  9., 12., 11.,  1.,  2.]),
 array([-5.61089769, -2.56921204,  0.47247361,  3.51415925,  6.5558449 ,
         9.59753054, 12.63921619, 15.68090183]),
 <BarContainer object of 7 artists>)

In [186]: f, ax = plt.subplots()

In [187]: ax.hist(s, bins='auto')
Out[187]:
(array([ 5., 10.,  9., 12., 11.,  1.,  2.]),
 array([-5.61089769, -2.56921204,  0.47247361,  3.51415925,  6.5558449 ,
         9.59753054, 12.63921619, 15.68090183]),
 <BarContainer object of 7 artists>)

In [188]: t, p = stats.ttest_1samp(s, 0)

In [189]: p
Out[189]: 8.420997186140269e-06

In [190]: s1 = stats.norm.rvs(loc=0, scale=1, size=1000)

In [191]: s2 = stats.norm.rvs(loc=0.5, scale=1, size=500)

In [192]: stats.ttest_ind?

In [193]: f, ax = plt.subplots()

In [194]: ax.hist(s1, bins='auto')
Out[194]:
(array([  4.,   3.,   5.,  15.,  20.,  41.,  41.,  54.,  83.,  91., 106.,
        103., 104.,  88.,  69.,  59.,  49.,  23.,  16.,  10.,   7.,   5.,
          1.,   3.]),
 array([-3.05116459, -2.78044266, -2.50972073, -2.2389988 , -1.96827686,
        -1.69755493, -1.426833  , -1.15611107, -0.88538914, -0.6146672 ,
        -0.34394527, -0.07322334,  0.19749859,  0.46822052,  0.73894246,
         1.00966439,  1.28038632,  1.55110825,  1.82183019,  2.09255212,
         2.36327405,  2.63399598,  2.90471791,  3.17543985,  3.44616178]),
 <BarContainer object of 24 artists>)

In [195]: ax.hist(s2, bins='auto')
Out[195]:
(array([ 4.,  5.,  9.,  7., 26., 41., 48., 57., 64., 72., 52., 36., 36.,
        15., 13.,  8.,  4.,  3.]),
 array([-2.41268172, -2.0793188 , -1.74595587, -1.41259295, -1.07923002,
        -0.7458671 , -0.41250417, -0.07914125,  0.25422168,  0.5875846 ,
         0.92094753,  1.25431045,  1.58767338,  1.9210363 ,  2.25439923,
         2.58776215,  2.92112508,  3.254488  ,  3.58785093]),
 <BarContainer object of 18 artists>)

In [196]: t, p = stats.ttest_ind(s1, s2, equal_var=True)

In [197]: p
Out[197]: 4.546895332157896e-18

In [198]: t, p = stats.ttest_ind(s1, s2, equal_var=False)

In [199]: p
Out[199]: 5.426402372082865e-18

In [200]: stats.ks_2samp?

In [201]: d, kp = stats.ks_2samp(s1, s2)

In [202]: kp
Out[202]: 1.4224195144416726e-12

In [203]: u, up = stats.mannwhitneyu(s1, s2)

In [204]: up
Out[204]: 2.225488921726214e-17

In [205]: stats.ktest?
Object `stats.ktest` not found.

In [206]: stats.kstest?

In [207]: stats.kstest?

In [208]: bimodal
Out[208]:
array([ 0.23412959, -0.18519581,  0.87757063, ...,  4.60827906,
        4.22614858,  4.37141346])

In [209]: bimodal.mean()
Out[209]: 2.531006582613084

In [210]: bimodal.std()
Out[210]: 2.6119261733520123

In [211]: mu = bimodal.mean()

In [212]: sigma = bimodal.mean()

In [213]: d, p = stats.kstest(bimodal, 'norm', args=(mu, sigma))

In [214]: p
Out[214]: 3.200661724166729e-93

In [215]: s = stats.norm.rvs(loc=-2, scale=2, size=200)

In [216]: d, p = stats.kstest(s, 'norm', args=(-2, 2))

In [217]: p
Out[217]: 0.2884519485631446

In [218]: stats.shapiro
Out[218]: <function scipy.stats._morestats.shapiro(x)>

In [219]: stats.shapiro?

In [220]: f
Out[220]: <Figure size 700x700 with 1 Axes>

In [221]: f.savefig?

In [222]: ls
09_history.txt  DataFrame_exercise_solutions.py  exp.xlsx    spike_times.npy
09_pandas.md    exp1.csv                         Galton.csv  t.npy
09_pandas.pdf   exp2.csv                         spikes.png  V.npy

In [223]: pwd
Out[223]: '/home/mspacek/SciPyCourse2022/notes/09_pandas'

In [224]: cd ..
/home/mspacek/SciPyCourse2022/notes

In [225]: cd 10_stats/
/home/mspacek/SciPyCourse2022/notes/10_stats

In [226]: ls
10_history.txt  10_stats.pdf   stats.csv     stats.png
10_stats.md     KS_vs_MWU.txt  stats.csv.py

In [227]: df = pd.read_csv('stats.csv')

In [228]: df
Out[228]:
      control  treatment
0    0.675131  -0.680471
1   -0.158436  -1.185001
2    0.604462  -0.258454
3   -0.120994  -1.133002
4    0.355281   1.664425
..        ...        ...
595       NaN  -1.470002
596       NaN  -3.203882
597       NaN  -2.743236
598       NaN   3.742266
599       NaN  -1.796751

[600 rows x 2 columns]

In [229]: df.dropna()
Out[229]:
      control  treatment
0    0.675131  -0.680471
1   -0.158436  -1.185001
2    0.604462  -0.258454
3   -0.120994  -1.133002
4    0.355281   1.664425
..        ...        ...
495  0.650257   2.008577
496 -0.514232  -2.201475
497  0.681779   1.900845
498 -0.465943  -1.898758
499 -0.566754  -3.804355

[500 rows x 2 columns]

In [230]: df['control']
Out[230]:
0      0.675131
1     -0.158436
2      0.604462
3     -0.120994
4      0.355281
         ...
595         NaN
596         NaN
597         NaN
598         NaN
599         NaN
Name: control, Length: 600, dtype: float64

In [231]: df['control'].dropna()
Out[231]:
0      0.675131
1     -0.158436
2      0.604462
3     -0.120994
4      0.355281
         ...
495    0.650257
496   -0.514232
497    0.681779
498   -0.465943
499   -0.566754
Name: control, Length: 500, dtype: float64

In [232]: control = df['control'].dropna().values

In [233]: control
Out[233]:
array([ 6.75130984e-01, -1.58435780e-01,  6.04461529e-01, -1.20993687e-01,
        3.55281281e-01,  1.94462573e-01,  2.82313992e-01,  5.47550363e-01,
       -7.04686313e-01,  2.38139075e-01, -9.53855799e-02, -2.09826336e-01,
        3.37974923e-02, -6.93066537e-01,  4.31875684e-01, -2.29840528e-01,
        4.68202401e-01,  3.98265305e-01,  6.03289969e-01, -7.39247478e-01,
       -4.67725154e-02, -8.48417695e-01,  1.22518454e-01,  1.65342357e-01,
       -3.36212473e-01, -5.15651979e-02, -9.79860621e-01,  1.79870971e-01,
        3.18006585e-01, -3.07220701e-01,  3.61583027e-01, -6.91123259e-01,
        1.70160081e-02,  4.06283614e-03,  4.36911245e-01,  4.04220977e-01,
        4.51984520e-01,  5.10144467e-01,  3.40727958e-01, -1.96687634e-01,
        8.14729689e-01, -5.87873950e-01, -5.84859353e-02, -2.21903153e-01,
        1.55662182e-02,  2.88662705e-02, -2.35390988e-02,  1.28035846e-01,
       -1.93001439e-01,  9.42036073e-01,  4.13695302e-01,  2.11621988e-01,
       -5.26340623e-01, -1.82161069e-02, -3.38980050e-01,  6.50612620e-02,
        3.21809105e-01, -8.24384989e-01, -5.03679068e-02, -5.06932399e-01,
        7.26611599e-01, -3.78767392e-01,  5.66074391e-01,  6.26190511e-01,
       -2.12629771e-01, -1.31410191e-01, -3.00185847e-01,  6.47495006e-01,
        2.67139689e-01,  1.49568179e-01, -2.04654984e-01,  2.89764010e-01,
       -1.94556302e-01,  1.42994009e-01,  3.72985169e-01, -1.64539471e-01,
        3.27707171e-02, -3.64876361e-01, -3.78092956e-01,  3.77675926e-01,
        1.94393337e-01,  4.55300329e-01, -1.77946543e-02, -6.37745651e-01,
       -6.24488716e-01,  7.03810016e-01, -4.19630715e-01,  1.60299908e+00,
       -7.12956650e-01, -1.34617640e+00, -1.97059666e-01, -3.45040517e-01,
       -4.88967676e-01,  9.16493946e-01,  3.07328850e-01,  5.04474189e-01,
        4.49326620e-01,  1.17099183e-01,  6.48028760e-02,  5.50585699e-02,
       -5.28374577e-01, -3.49943377e-02,  4.42731322e-01, -3.76792103e-01,
        7.15929470e-01, -2.76873801e-01, -3.75949488e-01, -7.46310554e-02,
        1.91184481e-01, -7.00322644e-03,  9.29943303e-04, -5.25463833e-01,
        1.77506268e-01, -4.05824938e-01,  1.05471103e-01,  5.89765037e-01,
        1.02961538e+00,  3.35818741e-01, -1.20969487e+00, -1.37413998e+00,
        1.20016362e-01,  7.68262085e-01,  2.58416264e-01, -7.63174982e-02,
        3.62232413e-01, -1.01608099e-02,  6.35132518e-01,  3.56440441e-01,
       -3.59590042e-01, -5.59717834e-01,  1.36722781e-01,  7.51942763e-02,
        5.75691669e-01, -4.98675172e-01,  5.54154261e-01, -7.81628461e-01,
        7.92405606e-03,  7.38007964e-01,  5.35878429e-01, -2.83474156e-01,
       -7.28655555e-01,  8.76536057e-01,  5.62473955e-01, -4.34830623e-01,
        4.55983118e-01, -4.70402587e-01, -2.09853661e-01, -2.14518840e-01,
       -2.93732415e-01, -8.08125627e-01,  6.54178888e-02, -4.83416202e-01,
       -4.76516226e-01, -2.18719194e-01,  1.81893768e-01, -1.41054907e-01,
       -5.10425286e-01, -4.85853359e-02, -1.60791100e-01, -9.26346812e-03,
       -7.90260587e-01,  2.62410634e-01, -3.01182726e-01,  4.10195657e-02,
       -7.51145948e-01,  1.44427727e+00, -2.73902262e-01,  1.97922539e-01,
        7.36383320e-01,  1.01380686e+00, -1.30437905e-01, -6.12776702e-02,
        3.19838911e-01,  2.37610498e-01,  8.70277307e-01, -5.64844937e-01,
       -1.94838144e-01, -8.43392332e-02, -3.98929970e-01,  6.74624474e-01,
        3.16294212e-01, -3.47287725e-02, -1.28708522e-01, -9.53707242e-02,
       -1.49636182e-01, -8.99217807e-01,  6.45913345e-01, -8.23083439e-01,
       -1.91290259e-01, -3.18199742e-02, -9.69833821e-01,  6.90976720e-01,
       -7.37745154e-02, -6.53478335e-01,  4.82732514e-01,  1.68494267e-01,
       -7.01766019e-02,  7.79863042e-01,  6.07824016e-01,  5.38141167e-01,
       -1.26198296e-01,  4.49703605e-01, -9.80822111e-01,  1.22427290e-02,
        2.57584364e-01,  4.12416024e-01,  1.16733468e+00,  1.32324358e+00,
       -1.43340207e-01, -3.93877324e-01,  9.72301712e-02,  9.48660127e-01,
        1.47081547e-01, -3.24360403e-01,  8.78677773e-01, -3.55244928e-01,
       -7.81452646e-01,  1.36822398e-01, -6.98203025e-01,  1.09621136e+00,
       -2.63656631e-01,  1.73992261e-01, -3.96705627e-01,  6.66413287e-02,
       -6.58857695e-01, -7.70707956e-01,  1.05807784e+00, -3.58357519e-01,
       -3.58020187e-01,  2.23613667e-01, -4.15649848e-01,  6.91095055e-01,
       -6.60754304e-01, -5.78541247e-01, -8.24345756e-03, -4.61221875e-01,
       -4.48163383e-02, -1.73873384e-01, -9.03641992e-01, -4.58784159e-01,
        5.31341256e-01,  3.11584378e-01, -5.73685408e-01,  1.59478723e-01,
       -8.00100983e-02, -5.43109627e-01, -6.09203854e-01, -1.10317387e+00,
        1.04024192e+00, -4.16470441e-01,  2.54301459e-01, -1.04648669e-02,
        4.30238113e-01,  4.55116668e-01, -3.19450236e-01,  1.04945475e+00,
       -9.89411362e-01, -7.24209651e-01,  7.87409443e-03,  2.23126425e-01,
       -7.11740242e-01,  1.05743718e+00, -6.50620747e-01, -1.92327606e-01,
       -1.56992729e-02, -5.76540529e-01, -5.11327390e-02, -5.77057935e-01,
        2.84445085e-01, -6.70314189e-02,  7.73344606e-02,  2.53827968e-01,
       -1.92560415e-01, -9.47623347e-02, -2.62765497e-01,  7.62490961e-01,
        1.23236404e-01,  6.21846231e-01, -1.07037108e-01,  1.03198357e-01,
       -6.88173310e-01,  3.92999033e-01, -2.05308310e-01,  2.64865032e-01,
        3.34488862e-01, -1.08313360e+00, -1.67685024e-01,  1.14817248e-01,
        2.14304000e-01, -7.69891670e-02, -9.89951072e-03, -1.23082724e-01,
        3.41552807e-01,  3.10373246e-01, -8.57793984e-02, -6.61458665e-01,
       -2.22494710e-01, -1.89426055e-01,  4.29191624e-01,  3.22661024e-02,
        8.10466614e-01, -1.29317595e+00, -2.90907482e-01, -4.72674465e-01,
        1.12306272e-01,  4.33392963e-01,  2.37848274e-01,  3.07782635e-01,
       -3.11089550e-01, -7.67989758e-01,  1.17786279e-01,  3.39527604e-01,
       -1.57732827e-01, -1.56299010e-01, -8.03449968e-01,  4.00185892e-01,
        4.97207860e-01, -1.31621114e-01,  4.57162263e-01,  5.68140613e-01,
        8.42145214e-01, -3.70353568e-01,  1.14918599e-01, -1.15259565e-01,
       -5.94878509e-01,  5.15884495e-01,  1.58839199e-01, -2.91593874e-02,
       -6.06615148e-01, -5.04504078e-01,  8.69601157e-01, -2.70939593e-01,
        8.61806501e-01, -4.07379829e-01, -1.93336413e-01,  1.23064886e-01,
       -3.69770835e-01, -8.79493262e-03,  1.06610025e+00,  1.50697277e-01,
       -1.26513843e+00, -5.23421232e-01,  8.75219337e-02,  5.21330036e-01,
       -4.80678333e-01, -3.60553974e-01,  1.19628354e-01, -9.90819279e-01,
        3.56367509e-01, -7.65279331e-01, -2.06988398e-01,  1.08298210e+00,
        4.87515430e-01,  1.71939379e-02, -4.03986129e-01, -2.63298740e-01,
        1.83983317e-01, -7.57340055e-01, -5.04240253e-01,  7.24000145e-01,
        8.48106294e-01, -3.92274166e-02, -3.14642956e-02,  4.54502498e-01,
       -5.32520775e-02,  4.19062505e-01,  1.54054778e-01,  2.57260518e-01,
        5.19666115e-01,  5.89879114e-01, -3.62042065e-01, -4.14599625e-01,
        2.95255371e-01,  3.75554824e-01, -3.19296427e-01, -2.37391680e-01,
        1.06167911e-01, -1.67790948e-01,  1.18610169e-01,  2.40760470e-01,
        2.87603250e-01, -5.61951231e-02,  9.92804602e-01, -1.73789033e-01,
       -6.35260304e-01,  6.34786596e-01, -6.25487270e-02, -3.92941525e-02,
       -4.80768402e-01,  2.75631915e-01, -1.73466873e-01, -1.19641496e+00,
        7.99781769e-01,  4.81581873e-01,  2.15332694e-01, -6.15848146e-01,
       -2.30511124e-01, -6.79717846e-01, -4.47422229e-01, -1.13590545e-01,
        7.51727944e-01, -1.86276049e-02, -5.20374399e-02, -6.43525481e-01,
        4.58543079e-02, -4.11629523e-01,  5.18815343e-01, -1.18638116e+00,
        5.22952363e-01,  2.37192905e-01,  5.08942152e-01,  2.24717011e-01,
        4.89468592e-01, -1.83645700e-01, -8.50077497e-03,  4.24614761e-01,
       -9.46961127e-01,  2.02679735e-01,  4.51633966e-01,  6.63177199e-01,
       -1.10984511e-01, -9.32998919e-02, -4.82941281e-01, -7.05781445e-01,
        7.79029392e-01,  1.80707526e-01,  6.64729558e-03,  6.10396673e-02,
        2.15587567e-01,  4.27733578e-02, -2.90264312e-01, -7.34797912e-02,
       -1.24698843e-01,  4.99181961e-02,  8.11412066e-01,  6.74537226e-01,
       -5.78561661e-01, -8.44454033e-01, -9.32244528e-02,  6.77273988e-01,
        2.20972151e-02, -5.80681067e-01,  6.41388651e-01,  7.82851489e-01,
       -5.38222734e-02, -2.16610484e-01, -2.90929542e-01,  2.95635979e-01,
       -5.18503455e-02, -4.86301986e-01,  8.04381214e-01,  3.61259784e-01,
       -3.56044307e-01,  2.19542354e-01,  1.73187510e-01, -9.60288112e-02,
       -1.90989101e-01, -5.63509031e-01,  1.10276025e+00,  6.70185507e-03,
       -1.36611007e-01,  2.23854011e-01, -6.28945739e-02,  1.34367838e-02,
        3.51257601e-01, -1.37713607e-01,  6.92686435e-01,  2.48516023e-01,
       -1.85328278e-01, -6.20191834e-01, -5.87462130e-01, -2.85950101e-01,
        1.45952092e-01, -3.01988040e-01,  3.56650442e-01, -4.77447240e-01,
       -2.32521972e-01, -4.90301385e-01,  1.66338688e-01, -7.33560015e-01,
        1.37015334e-01,  6.97682215e-01,  1.73194815e-01, -4.14559662e-01,
        1.02598365e-01,  8.15780546e-01, -1.91374938e-03, -6.42785256e-01,
        3.23792586e-01,  1.64089156e-01, -2.06873958e-01,  7.13647309e-01,
        6.81114221e-01,  8.64658089e-01, -5.72103467e-01,  6.50257139e-01,
       -5.14231879e-01,  6.81778665e-01, -4.65942930e-01, -5.66753809e-01])

In [234]: treatment = df['treatment'].dropna().values

In [235]: len(control)
Out[235]: 500

In [236]: len(treatment)
Out[236]: 600

In [237]: f, ax = plt.subplots()

In [238]: control.min()
Out[238]: -1.3741399831478271

In [239]: control.max()
Out[239]: 1.602999080730232

In [240]: treatment.max()
Out[240]: 5.585720188746626

In [241]: treatment.min()
Out[241]: -4.745023328007855

In [242]: ax.hist(control, bins=30, label='control')
Out[242]:
(array([ 3.,  4.,  2.,  4.,  4.,  9., 18., 18., 26., 23., 31., 35., 35.,
        52., 27., 40., 33., 25., 28., 19., 20., 14., 12.,  4., 10.,  1.,
         0.,  1.,  1.,  1.]),
 array([-1.37413998, -1.27490201, -1.17566405, -1.07642608, -0.97718811,
        -0.87795014, -0.77871217, -0.6794742 , -0.58023623, -0.48099826,
        -0.3817603 , -0.28252233, -0.18328436, -0.08404639,  0.01519158,
         0.11442955,  0.21366752,  0.31290549,  0.41214346,  0.51138142,
         0.61061939,  0.70985736,  0.80909533,  0.9083333 ,  1.00757127,
         1.10680924,  1.20604721,  1.30528517,  1.40452314,  1.50376111,
         1.60299908]),
 <BarContainer object of 30 artists>)

In [243]: ax.hist(treatment, bins=30, label='treatment')
Out[243]:
(array([ 2.,  4.,  6., 12., 19., 26., 44., 34., 41., 28., 40., 18., 13.,
        17., 20., 21., 26., 24., 34., 36., 49., 27., 24., 14.,  9.,  6.,
         5.,  0.,  0.,  1.]),
 array([-4.74502333, -4.40066521, -4.05630709, -3.71194898, -3.36759086,
        -3.02323274, -2.67887462, -2.33451651, -1.99015839, -1.64580027,
        -1.30144216, -0.95708404, -0.61272592, -0.2683678 ,  0.07599031,
         0.42034843,  0.76470655,  1.10906466,  1.45342278,  1.7977809 ,
         2.14213902,  2.48649713,  2.83085525,  3.17521337,  3.51957149,
         3.8639296 ,  4.20828772,  4.55264584,  4.89700395,  5.24136207,
         5.58572019]),
 <BarContainer object of 30 artists>)

In [244]: edges = np.arange(-6, 6, 0.25)

In [245]: edges
Out[245]:
array([-6.  , -5.75, -5.5 , -5.25, -5.  , -4.75, -4.5 , -4.25, -4.  ,
       -3.75, -3.5 , -3.25, -3.  , -2.75, -2.5 , -2.25, -2.  , -1.75,
       -1.5 , -1.25, -1.  , -0.75, -0.5 , -0.25,  0.  ,  0.25,  0.5 ,
        0.75,  1.  ,  1.25,  1.5 ,  1.75,  2.  ,  2.25,  2.5 ,  2.75,
        3.  ,  3.25,  3.5 ,  3.75,  4.  ,  4.25,  4.5 ,  4.75,  5.  ,
        5.25,  5.5 ,  5.75])

In [246]: f, ax = plt.subplots()

In [247]: ax.hist(control, bins=edges, label='control')
Out[247]:
(array([  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   4.,   5.,  22.,  51.,
         66., 108.,  89.,  69.,  48.,  24.,  11.,   2.,   1.,   0.,   0.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
          0.,   0.,   0.]),
 array([-6.  , -5.75, -5.5 , -5.25, -5.  , -4.75, -4.5 , -4.25, -4.  ,
        -3.75, -3.5 , -3.25, -3.  , -2.75, -2.5 , -2.25, -2.  , -1.75,
        -1.5 , -1.25, -1.  , -0.75, -0.5 , -0.25,  0.  ,  0.25,  0.5 ,
         0.75,  1.  ,  1.25,  1.5 ,  1.75,  2.  ,  2.25,  2.5 ,  2.75,
         3.  ,  3.25,  3.5 ,  3.75,  4.  ,  4.25,  4.5 ,  4.75,  5.  ,
         5.25,  5.5 ,  5.75]),
 <BarContainer object of 47 artists>)

In [248]: ax.hist(treatment, bins=edges, label='treatment')
Out[248]:
(array([ 0.,  0.,  0.,  0.,  0.,  1.,  1.,  5.,  4.,  7., 15., 13., 17.,
        30., 25., 29., 28., 29., 17., 28., 18.,  9., 14., 10., 13., 17.,
        14., 18., 16., 21., 24., 32., 25., 34., 19., 20., 16.,  8.,  9.,
         5.,  4.,  4.,  0.,  0.,  0.,  0.,  1.]),
 array([-6.  , -5.75, -5.5 , -5.25, -5.  , -4.75, -4.5 , -4.25, -4.  ,
        -3.75, -3.5 , -3.25, -3.  , -2.75, -2.5 , -2.25, -2.  , -1.75,
        -1.5 , -1.25, -1.  , -0.75, -0.5 , -0.25,  0.  ,  0.25,  0.5 ,
         0.75,  1.  ,  1.25,  1.5 ,  1.75,  2.  ,  2.25,  2.5 ,  2.75,
         3.  ,  3.25,  3.5 ,  3.75,  4.  ,  4.25,  4.5 ,  4.75,  5.  ,
         5.25,  5.5 ,  5.75]),
 <BarContainer object of 47 artists>)

In [249]: ax.legend()
Out[249]: <matplotlib.legend.Legend at 0x7fe6b69483a0>

In [250]: f.savefig('stats.png')

In [251]: stats.ks_2samp(control, treatment)
Out[251]: KstestResult(statistic=0.407, pvalue=6.393211255674692e-41)

In [252]: stats.ttest_ind(control, treatment, equal_var=False)
Out[252]: Ttest_indResult(statistic=0.18008617816002173, pvalue=0.8571390941091492)

In [253]: control.mean()
Out[253]: 0.008304453009214518

In [254]: treatment.mean()
Out[254]: -0.008446414205792034

In [255]: control.std()
Out[255]: 0.5049476620857668

In [256]: treatment.std()
Out[256]: 2.208267926505711

In [257]: stats.ttest_ind?

In [258]: stats.ktest(control, 'norm', args=(control.mean(), control.std()))
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Input In [258], in <cell line: 1>()
----> 1 stats.ktest(control, 'norm', args=(control.mean(), control.std()))

AttributeError: module 'scipy.stats' has no attribute 'ktest'
> <ipython-input-258-34c1c3d067be>(1)<cell line: 1>()
----> 1 stats.ktest(control, 'norm', args=(control.mean(), control.std()))

ipdb> c

In [259]: stats.kstest(control, 'norm', args=(control.mean(), control.std()))
Out[259]: KstestResult(statistic=0.026977077674807393, pvalue=0.8501166305752712)

In [260]: stats.kstest(treatment, 'norm', args=(treatment.mean(), treatment.std
     ...: ()))
Out[260]: KstestResult(statistic=0.09458846481437089, pvalue=4.010923227537854e-05)

In [261]:
