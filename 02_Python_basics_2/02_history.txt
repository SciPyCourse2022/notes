
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> genius = 2 + 2
>>> genius
4
>>> for i in range(9):
...     print(i)
...
0
1
2
3
4
5
6
7
8
>>> for i in range(10):
...    print(i)
...
0
1
2
3
4
5
6
7
8
9
>>> for i in range(0, 10):
...     print(i)
...
0
1
2
3
4
5
6
7
8
9
>>> help(range)

>>> for i in range(0, 10, 1):
...     print(i)
...
0
1
2
3
4
5
6
7
8
9
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ls
02_history.txt          example_functions.py
02_Python_basics_2.md   example_homework.py
02_Python_basics_2.pdf  fenceposts_vs_fence_segments.png
basics.py               hellos.py
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
2
3
4
5
6
7
8
9
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
4
9
16
25
36
49
64
81
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
4
9
16
25
36
49
64
81
45
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python
Python 2.7.18 (default, Mar  8 2021, 13:02:45)
[GCC 9.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> sum(list(range(10))
...
...
...
KeyboardInterrupt
>>> sum(list(range(10)))
45
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0.0
1.0
1.4142135623730951
1.7320508075688772
2.0
2.23606797749979
2.449489742783178
2.6457513110645907
2.8284271247461903
3.0
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
2
3
4
5
6
7
seven
8
9
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
2
3
three
4
5
6
7
seven
8
9
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python
Python 2.7.18 (default, Mar  8 2021, 13:02:45)
[GCC 9.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> 4 % 2
0
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0 is even
1 is odd
2 is even
3 is odd
4 is even
5 is odd
6 is even
7 is odd
8 is even
9 is odd
10 is even
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0 is even
1 is odd
2 is even
3 is odd
4 is even
5 is odd
6 is even
7
8 is even
9 is odd
10 is even
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0 is even
1 is odd
2 is even
3 is odd
4 is even
5 is odd
6 is even
7
8 is even
9 is odd
10 is even
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
10 is even
9 is odd
8 is even
7
6 is even
5 is odd
4 is even
3 is odd
2 is even
1 is odd
0 is even
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python
Python 2.7.18 (default, Mar  8 2021, 13:02:45)
[GCC 9.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
2
3
4
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
2
3
4
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3 basics.py
0
1
3
4
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> for i in range(10):
...     print(i)
...
0
1
2
3
4
5
6
7
8
9
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ python3
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: a = 1

In [2]: a
Out[2]: 1

In [3]: _2
Out[3]: 1

In [4]: help(print)


In [5]: print?
Docstring:
print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)

Prints the values to a stream, or to sys.stdout by default.
Optional keyword arguments:
file:  a file-like object (stream); defaults to the current sys.stdout.
sep:   string inserted between values, default a space.
end:   string appended after the last value, default a newline.
flush: whether to forcibly flush the stream.
Type:      builtin_function_or_method

In [6]: help(print)


In [7]: help(print)


In [8]: print?
Docstring:
print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)

Prints the values to a stream, or to sys.stdout by default.
Optional keyword arguments:
file:  a file-like object (stream); defaults to the current sys.stdout.
sep:   string inserted between values, default a space.
end:   string appended after the last value, default a newline.
flush: whether to forcibly flush the stream.
Type:      builtin_function_or_method

In [9]: something = 1

In [10]: something
Out[10]: 1

In [11]: something_really_long = 2

In [12]: something_really_long
Out[12]: 2

In [13]: print('hi')
hi

In [14]: whos
Variable                Type      Data/Info
-------------------------------------------
a                       int       1
np                      module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt                     module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>
something               int       1
something_really_long   int       2

In [15]: del a

In [16]: a
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [16], in <cell line: 1>()
----> 1 a

NameError: name 'a' is not defined
> <ipython-input-16-3f786850e387>(1)<cell line: 1>()
----> 1 a

ipdb> c

In [17]: whos
Variable                Type      Data/Info
-------------------------------------------
np                      module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt                     module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>
something               int       1
something_really_long   int       2

In [18]: reset
Once deleted, variables cannot be recovered. Proceed (y/[n])? y

In [19]: whos
Interactive namespace is empty.

In [20]:
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: whos
Variable   Type      Data/Info
------------------------------
np         module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt        module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>

In [2]: whos
Variable   Type      Data/Info
------------------------------
np         module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt        module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>

In [3]: for i in [0, 1, 3, 4]:
   ...:         print(i)
   ...:
0
1
3
4

In [4]: for i in range(5):
   ...:     print(i)
   ...:
0
1
2
3
4

In [5]: whos
Variable   Type      Data/Info
------------------------------
i          int       4
np         module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt        module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>

In [6]: del a
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [6], in <cell line: 1>()
----> 1 del a

NameError: name 'a' is not defined
> <ipython-input-6-84acad089b3e>(1)<cell line: 1>()
----> 1 del a

ipdb> c

In [7]: del i

In [8]: whos
Variable   Type      Data/Info
------------------------------
np         module    <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt        module    <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>

In [9]: reset
Once deleted, variables cannot be recovered. Proceed (y/[n])? y

In [10]: whos
Interactive namespace is empty.

In [11]: ls
02_history.txt          example_functions.py
02_Python_basics_2.md   example_homework.py
02_Python_basics_2.pdf  fenceposts_vs_fence_segments.png
basics.py               hellos.py

In [12]: pwd
Out[12]: '/home/mspacek/SciPyCourse2022/notes/02_Python_basics_2'

In [13]: cd ..
/home/mspacek/SciPyCourse2022/notes

In [14]: cd 02_Python_basics_2/
/home/mspacek/SciPyCourse2022/notes/02_Python_basics_2

In [15]: run hellos
hello!
hello!
hello!
hello!
hello!

In [16]: whos
Variable   Type    Data/Info
----------------------------
i          int     4
test       int     123

In [17]: test = 123

In [18]: for i in range(5):
    ...:         print('hello!')
    ...:
hello!
hello!
hello!
hello!
hello!

In [19]: run hellos
hello!
hello!
hello!
hello!
hello!

In [20]: a = 1

In [21]: run hellos
hello!
hello!
hello!
hello!
hello!
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
File ~/SciPyCourse2022/notes/02_Python_basics_2/hellos.py:4, in <module>
      2 for i in range(5):
      3     print('hello!')
----> 4 print(a)

NameError: name 'a' is not defined
> /home/mspacek/SciPyCourse2022/notes/02_Python_basics_2/hellos.py(4)<module>()
      1 test = 123
      2 for i in range(5):
      3     print('hello!')
----> 4 print(a)

ipdb> c

In [22]: run -i hellos
hello!
hello!
hello!
hello!
hello!
1

In [23]: whos
Variable   Type    Data/Info
----------------------------
a          int     1
i          int     4
test       int     123

In [24]: whos
Variable   Type    Data/Info
----------------------------
a          int     1
i          int     4
test       int     123

In [25]: a
Out[25]: 1

In [26]: run hellos
hello!
hello!
hello!
hello!
hello!
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
File ~/SciPyCourse2022/notes/02_Python_basics_2/hellos.py:4, in <module>
      2 for i in range(5):
      3     print('hello!')
----> 4 print(a)

NameError: name 'a' is not defined
> /home/mspacek/SciPyCourse2022/notes/02_Python_basics_2/hellos.py(4)<module>()
      1 test = 123
      2 for i in range(5):
      3     print('hello!')
----> 4 print(a)

ipdb> c

In [27]: run -i hellos
hello!
hello!
hello!
hello!
hello!
1

In [28]: exit
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: quit
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]:
mspacek@Godel:~/SciPyCourse2022/notes/02_Python_basics_2$ ipython
Python 3.8.10 (default, Mar 15 2022, 12:22:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: "string"
Out[1]: 'string'

In [2]: "hello"
Out[2]: 'hello'

In [3]: s = ''

In [4]: type(s)
Out[4]: str

In [5]: len(s)
Out[5]: 0

In [6]: len('hi')
Out[6]: 2

In [7]: s = 'Hello' + ' ' + 'world'

In [8]: s
Out[8]: 'Hello world'

In [9]: s = 'Hello ' + 'world'

In [10]: s
Out[10]: 'Hello world'

In [11]: s = 'Hello world'

In [12]: s
Out[12]: 'Hello world'

In [13]: s
Out[13]: 'Hello world'

In [14]: s += '!'

In [15]: s
Out[15]: 'Hello world!'

In [16]: s
Out[16]: 'Hello world!'

In [17]: ss = s * 2

In [18]: ss
Out[18]: 'Hello world!Hello world!'

In [19]: s * 3
Out[19]: 'Hello world!Hello world!Hello world!'

In [20]: "hello world! " * 3
Out[20]: 'hello world! hello world! hello world! '

In [21]: "hello world! " - " "
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [21], in <cell line: 1>()
----> 1 "hello world! " - " "

TypeError: unsupported operand type(s) for -: 'str' and 'str'
> <ipython-input-21-4ac0b75b3345>(1)<cell line: 1>()
----> 1 "hello world! " - " "

ipdb> c

In [22]: s
Out[22]: 'Hello world!'

In [23]: s * 3
Out[23]: 'Hello world!Hello world!Hello world!'

In [24]: s
Out[24]: 'Hello world!'

In [25]: s -= '!'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [25], in <cell line: 1>()
----> 1 s -= '!'

TypeError: unsupported operand type(s) for -=: 'str' and 'str'
> <ipython-input-25-e37360c28574>(1)<cell line: 1>()
----> 1 s -= '!'

ipdb> c

In [26]: '\n'
Out[26]: '\n'

In [27]: print('\n')



In [28]: print()


In [29]: print('Hi\nthere!')
Hi
there!

In [30]: print('Hi\tthere!')
Hi  there!

In [31]: print('Hi\nthere!')
Hi
there!

In [32]: thing = 'world'

In [33]: thing
Out[33]: 'world'

In [34]: 'Hello %s' % thing
Out[34]: 'Hello world'

In [35]: thing = 5

In [36]: 'Hello %s' % thing
Out[36]: 'Hello 5'

In [37]: 'Hello %d' % thing
Out[37]: 'Hello 5'

In [38]: thing = 3.14

In [39]: 'Hello %f' % thing
Out[39]: 'Hello 3.140000'

In [40]: 'Hello %.2f' % thing
Out[40]: 'Hello 3.14'

In [41]: 'Hello %.10f' % thing
Out[41]: 'Hello 3.1400000000'

In [42]: thing = 3.14159

In [43]: 'Hello %.f' % thing
Out[43]: 'Hello 3'

In [44]: 'Hello %f' % thing
Out[44]: 'Hello 3.141590'

In [45]: 'Hello %g' % thing
Out[45]: 'Hello 3.14159'

In [46]: 'Hello %g' % 'world'
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [46], in <cell line: 1>()
----> 1 'Hello %g' % 'world'

TypeError: must be real number, not str
> <ipython-input-46-8f6359b6a185>(1)<cell line: 1>()
----> 1 'Hello %g' % 'world'

ipdb> c

In [47]: 'Hello %g' % thing
Out[47]: 'Hello 3.14159'

In [48]: thing = 3.14158129379

In [49]: 'Hello %g' % thing
Out[49]: 'Hello 3.14158'

In [50]: 'Hello %.10g' % thing
Out[50]: 'Hello 3.141581294'

In [51]: 'Hello %.15g' % thing
Out[51]: 'Hello 3.14158129379'

In [52]: 'Hello %.3f' % thing
Out[52]: 'Hello 3.142'

In [53]: 'The date is %s %d, %d' % ('May', 17, 2022)
Out[53]: 'The date is May 17, 2022'

In [54]: 'The date is %s %d, %d.' % ('May', 17, 2022)
Out[54]: 'The date is May 17, 2022.'

In [55]: s = 'abcdefg'

In [56]: len(s)
Out[56]: 7

In [57]: s[3]
Out[57]: 'd'

In [58]: s[6]
Out[58]: 'g'

In [59]: s[-1]
Out[59]: 'g'

In [60]: s[-7]
Out[60]: 'a'

In [61]: s[0:2]
Out[61]: 'ab'

In [62]: s[1:3]
Out[62]: 'bc'

In [63]: s[0:3]
Out[63]: 'abc'

In [64]: s[:3]
Out[64]: 'abc'

In [65]: s[5:7]
Out[65]: 'fg'

In [66]: s[5:]
Out[66]: 'fg'

In [67]: s[0:5:2]
Out[67]: 'ace'

In [68]: s[0:5:1]
Out[68]: 'abcde'

In [69]: s[0:5:2]
Out[69]: 'ace'

In [70]: s[0:7:3]
Out[70]: 'adg'

In [71]: s
Out[71]: 'abcdefg'

In [72]: s[::-1]
Out[72]: 'gfedcba'

In [73]: s[::-2]
Out[73]: 'geca'

In [74]: s[6::-1]
Out[74]: 'gfedcba'

In [75]: s[6:0:-1]
Out[75]: 'gfedcb'

In [76]: s[::-1]
Out[76]: 'gfedcba'

In [77]: s[-3::]
Out[77]: 'efg'

In [78]: s[-3:]
Out[78]: 'efg'

In [79]: type(s)
Out[79]: str

In [80]: s = 'hello world!'

In [81]: a = 'o'

In [82]: s.count?
Docstring:
S.count(sub[, start[, end]]) -> int

Return the number of non-overlapping occurrences of substring sub in
string S[start:end].  Optional arguments start and end are
interpreted as in slice notation.
Type:      builtin_function_or_method

In [83]: s
Out[83]: 'hello world!'

In [84]: s.count(a)
Out[84]: 2

In [85]: s.index(a)
Out[85]: 4

In [86]: s.split(a)
Out[86]: ['hell', ' w', 'rld!']

In [87]: '_'.join('this', 'is', 'a', 'string')
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [87], in <cell line: 1>()
----> 1 '_'.join('this', 'is', 'a', 'string')

TypeError: join() takes exactly one argument (4 given)
> <ipython-input-87-fd62dd834749>(1)<cell line: 1>()
----> 1 '_'.join('this', 'is', 'a', 'string')

ipdb> c

In [88]: '_'.join(('this', 'is', 'a', 'string'))
Out[88]: 'this_is_a_string'

In [89]: ''.join(('this', 'is', 'a', 'string'))
Out[89]: 'thisisastring'

In [90]: ' '.join(('this', 'is', 'a', 'string'))
Out[90]: 'this is a string'

In [91]: 'X'.join(('this', 'is', 'a', 'string'))
Out[91]: 'thisXisXaXstring'

In [92]: s
Out[92]: 'hello world!'

In [93]: s.replace('o', 'O')
Out[93]: 'hellO wOrld!'

In [94]: s.strip('!')
Out[94]: 'hello world'

In [95]: s.lstrip('!')
Out[95]: 'hello world!'

In [96]: s.rstrip('!')
Out[96]: 'hello world'

In [97]: s.upper()
Out[97]: 'HELLO WORLD!'

In [98]: s.lower()
Out[98]: 'hello world!'

In [99]: s
Out[99]: 'hello world!'

In [100]: s = "Hello world!"

In [101]: s.lower()
Out[101]: 'hello world!'

In [102]: s.upper()
Out[102]: 'HELLO WORLD!'

In [103]: s.upper().lower()
Out[103]: 'hello world!'

In [104]: s.isnumeric?
Signature: s.isnumeric()
Docstring:
Return True if the string is a numeric string, False otherwise.

A string is numeric if all characters in the string are numeric and there is at
least one character in the string.
Type:      builtin_function_or_method

In [105]: s = 'abcdefghijklmnopqrstuvwxyz'

In [106]: print(s)
abcdefghijklmnopqrstuvwxyz

In [107]: for i in range(0, 26, 1):
     ...:     print(s[i])
     ...:
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

In [108]: for i in range(len(26)):
     ...:     print(s[i])
     ...:
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [108], in <cell line: 1>()
----> 1 for i in range(len(26)):
      2     print(s[i])

TypeError: object of type 'int' has no len()
> <ipython-input-108-b38e3a05651e>(1)<cell line: 1>()
----> 1 for i in range(len(26)):
      2     print(s[i])
      3

ipdb> c

In [109]: for i in range(len(s)):
     ...:     print(s[i])
     ...:
     ...:
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

In [110]: for i in range(26):
     ...:     print(s[-i-1])
     ...:
z
y
x
w
v
u
t
s
r
q
p
o
n
m
l
k
j
i
h
g
f
e
d
c
b
a

In [111]: for i in range(len(s)-1, -1, -1):
     ...:     print(s[i])
     ...:
     ...:
z
y
x
w
v
u
t
s
r
q
p
o
n
m
l
k
j
i
h
g
f
e
d
c
b
a

In [112]: s[::-1]
Out[112]: 'zyxwvutsrqponmlkjihgfedcba'

In [113]: for i in range(len(s)):
     ...:     print(s[i])
     ...:
     ...:
     ...:
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

In [114]: for c in s:
     ...:     print(c)
     ...:
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

In [115]: for i, c in enumerate(s):
     ...:     print(i, c)
     ...:
     ...:
0 a
1 b
2 c
3 d
4 e
5 f
6 g
7 h
8 i
9 j
10 k
11 l
12 m
13 n
14 o
15 p
16 q
17 r
18 s
19 t
20 u
21 v
22 w
23 x
24 y
25 z

In [116]: s[::-1]
Out[116]: 'zyxwvutsrqponmlkjihgfedcba'

In [117]: s[::2]
Out[117]: 'acegikmoqsuwy'

In [118]: a = s[::2]

In [119]: a
Out[119]: 'acegikmoqsuwy'

In [120]: a.replace('a', 4).replace('e', 3).replace('i', 1)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [120], in <cell line: 1>()
----> 1 a.replace('a', 4).replace('e', 3).replace('i', 1)

TypeError: replace() argument 2 must be str, not int
> <ipython-input-120-1bce0570ec3b>(1)<cell line: 1>()
----> 1 a.replace('a', 4).replace('e', 3).replace('i', 1)

ipdb> c

In [121]: a.replace('a', '4').replace('e', '3').replace('i', '1')
Out[121]: '4c3g1kmoqsuwy'

In [122]: a
Out[122]: 'acegikmoqsuwy'

In [123]: a = a.replace('a', '4')

In [124]: a
Out[124]: '4cegikmoqsuwy'

In [125]: a = a.replace('e', '3')

In [126]: def add(x, y):
     ...:     """Return sum of x and y"""
     ...:     return x + y
     ...:

In [127]: whos
Variable   Type        Data/Info
--------------------------------
a          str         4c3gikmoqsuwy
add        function    <function add at 0x7f64e3f62d30>
c          str         z
i          int         25
np         module      <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt        module      <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>
s          str         abcdefghijklmnopqrstuvwxyz
ss         str         Hello world!Hello world!
thing      float       3.14158129379

In [128]: add?
Signature: add(x, y)
Docstring: Return sum of x and y
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-126-242d7d737d39>
Type:      function

In [129]: add(1, 3)
Out[129]: 4

In [130]: def add(y, x):
     ...:     """Return sum of x and y"""
     ...:     return x + y
     ...:

In [131]: add(1, 3)
Out[131]: 4

In [132]: def add(x, y):
     ...:     """Return sum of x and y"""
     ...:     return x + y
     ...:

In [133]: add(3, 1)
Out[133]: 4

In [134]: def subtract(x, y):
     ...:     """Return difference of x and y"""
     ...:     return x - y
     ...:

In [135]: subtract?
Signature: subtract(x, y)
Docstring: Return difference of x and y
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-134-f78b04a8e114>
Type:      function

In [136]: subtract(3, 1)
Out[136]: 2

In [137]: subtract(1, 3)
Out[137]: -2

In [138]: def add3(x, y, z=0):
     ...:     return x + y + z
     ...:

In [139]: add3?
Signature: add3(x, y, z=0)
Docstring: <no docstring>
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-138-794970bcd94b>
Type:      function

In [140]: def add3(x, y, z=0):
     ...:     """Add two numbers x and y and optionally z"""
     ...:     return x + y + z
     ...:

In [141]: add?
Signature: add(x, y)
Docstring: Return sum of x and y
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-132-242d7d737d39>
Type:      function

In [142]: add3?
Signature: add3(x, y, z=0)
Docstring: Add two numbers x and y and optionally z
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-140-22dd359016d0>
Type:      function

In [143]: add3(1, 3)
Out[143]: 4

In [144]: add3(1, 3, 1)
Out[144]: 5

In [145]: add3(1, 3, z=1)
Out[145]: 5

In [146]: add3(z=1, 1, 3)
  Input In [146]
    add3(z=1, 1, 3)
              ^
SyntaxError: positional argument follows keyword argument


In [147]: def addsubtract(x, y):
     ...:     """Return sum and difference of x and y"""
     ...:     s = x + y
     ...:     d = x - y
     ...:     return s, d
     ...:

In [148]: addsubtract?
Signature: addsubtract(x, y)
Docstring: Return sum and difference of x and y
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-147-2c510ad8d209>
Type:      function

In [149]: addsubtract(5, 2)
Out[149]: (7, 3)

In [150]: result = addsubtract(5, 2)

In [151]: type(result)
Out[151]: tuple

In [152]: s, d = addsubtract(5, 2)

In [153]: s
Out[153]: 7

In [154]: d
Out[154]: 3

In [155]: whos
Variable      Type        Data/Info
-----------------------------------
a             str         4c3gikmoqsuwy
add           function    <function add at 0x7f64e3c18160>
add3          function    <function add3 at 0x7f64e3b0ff70>
addsubtract   function    <function addsubtract at 0x7f64e3a26670>
c             str         z
d             int         3
i             int         25
np            module      <module 'numpy' from '/us<...>kages/numpy/__init__.py'>
plt           module      <module 'matplotlib.pyplo<...>es/matplotlib/pyplot.py'>
result        tuple       n=2
s             int         7
ss            str         Hello world!Hello world!
subtract      function    <function subtract at 0x7f64e3ac1280>
thing         float       3.14158129379

In [156]: reset
Once deleted, variables cannot be recovered. Proceed (y/[n])? y

In [157]: whos
Interactive namespace is empty.

In [158]: def add(x, y):
     ...:     """Return sum of x and y"""
     ...:     return x + y
     ...:

In [159]: add(3, 1)
Out[159]: 4

In [160]: whos
Variable   Type        Data/Info
--------------------------------
add        function    <function add at 0x7f64e3d49d30>

In [161]: x
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
Input In [161], in <cell line: 1>()
----> 1 x

NameError: name 'x' is not defined
> <ipython-input-161-6fcf9dfbd479>(1)<cell line: 1>()
----> 1 x

ipdb> c

In [162]: z = 1

In [163]: whos
Variable   Type        Data/Info
--------------------------------
add        function    <function add at 0x7f64e3d49d30>
z          int         1

In [164]: def add3(x, y):
     ...:     return x + y + z
     ...:

In [165]: add3(3, 1)
Out[165]: 5

In [166]: EXPERIMENTNAME = 'blah'

In [167]: def returnstuff(x):
     ...:     return EXPERIMENTNAME + x
     ...:

In [168]: returnstuff(5)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Input In [168], in <cell line: 1>()
----> 1 returnstuff(5)

Input In [167], in returnstuff(x)
      1 def returnstuff(x):
----> 2     return EXPERIMENTNAME + x

TypeError: can only concatenate str (not "int") to str
> <ipython-input-167-f960a3df814f>(2)returnstuff()
      1 def returnstuff(x):
----> 2     return EXPERIMENTNAME + x
      3

ipdb> c

In [169]: returnstuff('5')
Out[169]: 'blah5'

In [170]: def product(x, y):
     ...:     """Return product of x and y"""
     ...:     return x * y
     ...:

In [171]: product?
Signature: product(x, y)
Docstring: Return product of x and y
File:      ~/SciPyCourse2022/notes/02_Python_basics_2/<ipython-input-170-a7daadbd297d>
Type:      function

In [172]: product(2, 3)
Out[172]: 6

In [173]:
